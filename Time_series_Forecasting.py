{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyMQRUaZUaNUwpjRqYygKgCI",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/ofoeduchisom/UK-Fuel-Demand-Forecasting/blob/main/Time_series_Forecasting.py\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "YByL7G69MxcT"
      },
      "outputs": [],
      "source": [
        "import warnings\n",
        "warnings.filterwarnings('ignore')"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "pip install \"numpy<1.24\""
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "PESOkb0fW6u9",
        "outputId": "ddf88186-4eff-4e56-e58f-ca1fea4339ff"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Requirement already satisfied: numpy<1.24 in /usr/local/lib/python3.11/dist-packages (1.23.5)\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "!pip install pmdarima"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "KILlBBdkXJte",
        "outputId": "7bca17af-5c73-4cb4-c144-d7121c002014"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Collecting pmdarima\n",
            "  Downloading pmdarima-2.0.4-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_28_x86_64.whl.metadata (7.8 kB)\n",
            "Requirement already satisfied: joblib>=0.11 in /usr/local/lib/python3.11/dist-packages (from pmdarima) (1.5.0)\n",
            "Requirement already satisfied: Cython!=0.29.18,!=0.29.31,>=0.29 in /usr/local/lib/python3.11/dist-packages (from pmdarima) (3.0.12)\n",
            "Requirement already satisfied: numpy>=1.21.2 in /usr/local/lib/python3.11/dist-packages (from pmdarima) (1.23.5)\n",
            "Requirement already satisfied: pandas>=0.19 in /usr/local/lib/python3.11/dist-packages (from pmdarima) (2.2.2)\n",
            "Requirement already satisfied: scikit-learn>=0.22 in /usr/local/lib/python3.11/dist-packages (from pmdarima) (1.6.1)\n",
            "Requirement already satisfied: scipy>=1.3.2 in /usr/local/lib/python3.11/dist-packages (from pmdarima) (1.15.3)\n",
            "Requirement already satisfied: statsmodels>=0.13.2 in /usr/local/lib/python3.11/dist-packages (from pmdarima) (0.14.4)\n",
            "Requirement already satisfied: urllib3 in /usr/local/lib/python3.11/dist-packages (from pmdarima) (2.4.0)\n",
            "Requirement already satisfied: setuptools!=50.0.0,>=38.6.0 in /usr/local/lib/python3.11/dist-packages (from pmdarima) (75.2.0)\n",
            "Requirement already satisfied: packaging>=17.1 in /usr/local/lib/python3.11/dist-packages (from pmdarima) (24.2)\n",
            "Requirement already satisfied: python-dateutil>=2.8.2 in /usr/local/lib/python3.11/dist-packages (from pandas>=0.19->pmdarima) (2.9.0.post0)\n",
            "Requirement already satisfied: pytz>=2020.1 in /usr/local/lib/python3.11/dist-packages (from pandas>=0.19->pmdarima) (2025.2)\n",
            "Requirement already satisfied: tzdata>=2022.7 in /usr/local/lib/python3.11/dist-packages (from pandas>=0.19->pmdarima) (2025.2)\n",
            "Requirement already satisfied: threadpoolctl>=3.1.0 in /usr/local/lib/python3.11/dist-packages (from scikit-learn>=0.22->pmdarima) (3.6.0)\n",
            "Requirement already satisfied: patsy>=0.5.6 in /usr/local/lib/python3.11/dist-packages (from statsmodels>=0.13.2->pmdarima) (1.0.1)\n",
            "Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.11/dist-packages (from python-dateutil>=2.8.2->pandas>=0.19->pmdarima) (1.17.0)\n",
            "Downloading pmdarima-2.0.4-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_28_x86_64.whl (2.2 MB)\n",
            "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m2.2/2.2 MB\u001b[0m \u001b[31m18.1 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hInstalling collected packages: pmdarima\n",
            "Successfully installed pmdarima-2.0.4\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from pmdarima.arima import auto_arima"
      ],
      "metadata": {
        "id": "8DhFcZ8SXUkP"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "import numpy as np\n",
        "import pandas as pd\n",
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sns\n",
        "import statsmodels.api as sm\n",
        "from statsmodels.tsa.arima.model import ARIMA\n",
        "from statsmodels.tsa.stattools import adfuller\n",
        "from statsmodels.tsa.seasonal import seasonal_decompose\n",
        "from statsmodels.tsa.stattools import acf, acovf, pacf,pacf_ols,pacf_yw\n",
        "from statsmodels.graphics.tsaplots import plot_acf, plot_pacf\n",
        "from statsmodels.tsa.stattools import grangercausalitytests\n",
        "from pandas.plotting import lag_plot"
      ],
      "metadata": {
        "id": "rfIADC7NXOc9"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Read the the csv dataset\n",
        "df1 = pd.read_csv('Estimated_quantity_demand.csv', encoding='latin-1')"
      ],
      "metadata": {
        "id": "oN63fbWtM4oa"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Convert the 'Date' column in df1 to datetime format\n",
        "df1['Date'] = pd.to_datetime(df1['Date'], format='mixed', dayfirst=True, errors='coerce')"
      ],
      "metadata": {
        "id": "c1k1w7v3sSFZ"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Set the date column as the index\n",
        "df1.set_index('Date', inplace=True)"
      ],
      "metadata": {
        "id": "JUUuJlLBNK0t"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Display estimated quantity demand dataframe\n",
        "df1"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 455
        },
        "id": "zZrcQV-5sTfi",
        "outputId": "f9ee6651-bc9a-4b12-ccf0-96f20c6b441a"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "            Estimated  quantity demand per transaction\n",
              "Date                                                  \n",
              "2021-01-31                                        97.0\n",
              "2021-02-07                                        95.0\n",
              "2021-02-14                                        96.0\n",
              "2021-02-21                                        93.0\n",
              "2021-02-28                                        92.0\n",
              "...                                                ...\n",
              "2025-02-02                                       100.0\n",
              "2025-09-02                                       101.0\n",
              "2025-02-16                                       102.0\n",
              "2025-09-02                                       101.0\n",
              "2025-02-16                                       102.0\n",
              "\n",
              "[214 rows x 1 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-1e3c7204-7460-4a6e-a002-0f4789b86c0d\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Estimated  quantity demand per transaction</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Date</th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>2021-01-31</th>\n",
              "      <td>97.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2021-02-07</th>\n",
              "      <td>95.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2021-02-14</th>\n",
              "      <td>96.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2021-02-21</th>\n",
              "      <td>93.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2021-02-28</th>\n",
              "      <td>92.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2025-02-02</th>\n",
              "      <td>100.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2025-09-02</th>\n",
              "      <td>101.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2025-02-16</th>\n",
              "      <td>102.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2025-09-02</th>\n",
              "      <td>101.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2025-02-16</th>\n",
              "      <td>102.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>214 rows × 1 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1e3c7204-7460-4a6e-a002-0f4789b86c0d')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-1e3c7204-7460-4a6e-a002-0f4789b86c0d button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-1e3c7204-7460-4a6e-a002-0f4789b86c0d');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "    <div id=\"df-84699744-7fca-4560-ac1c-60e01a398e81\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-84699744-7fca-4560-ac1c-60e01a398e81')\"\n",
              "                title=\"Suggest charts\"\n",
              "                style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "      <script>\n",
              "        async function quickchart(key) {\n",
              "          const quickchartButtonEl =\n",
              "            document.querySelector('#' + key + ' button');\n",
              "          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "          quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "          try {\n",
              "            const charts = await google.colab.kernel.invokeFunction(\n",
              "                'suggestCharts', [key], {});\n",
              "          } catch (error) {\n",
              "            console.error('Error during call to suggestCharts:', error);\n",
              "          }\n",
              "          quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "        }\n",
              "        (() => {\n",
              "          let quickchartButtonEl =\n",
              "            document.querySelector('#df-84699744-7fca-4560-ac1c-60e01a398e81 button');\n",
              "          quickchartButtonEl.style.display =\n",
              "            google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "        })();\n",
              "      </script>\n",
              "    </div>\n",
              "\n",
              "  <div id=\"id_cc5c6542-0819-4fbe-8f86-66da833791b3\">\n",
              "    <style>\n",
              "      .colab-df-generate {\n",
              "        background-color: #E8F0FE;\n",
              "        border: none;\n",
              "        border-radius: 50%;\n",
              "        cursor: pointer;\n",
              "        display: none;\n",
              "        fill: #1967D2;\n",
              "        height: 32px;\n",
              "        padding: 0 0 0 0;\n",
              "        width: 32px;\n",
              "      }\n",
              "\n",
              "      .colab-df-generate:hover {\n",
              "        background-color: #E2EBFA;\n",
              "        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "        fill: #174EA6;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate {\n",
              "        background-color: #3B4455;\n",
              "        fill: #D2E3FC;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate:hover {\n",
              "        background-color: #434B5C;\n",
              "        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "        fill: #FFFFFF;\n",
              "      }\n",
              "    </style>\n",
              "    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df1')\"\n",
              "            title=\"Generate code using this dataframe.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "    <script>\n",
              "      (() => {\n",
              "      const buttonEl =\n",
              "        document.querySelector('#id_cc5c6542-0819-4fbe-8f86-66da833791b3 button.colab-df-generate');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      buttonEl.onclick = () => {\n",
              "        google.colab.notebook.generateWithVariable('df1');\n",
              "      }\n",
              "      })();\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "df1",
              "summary": "{\n  \"name\": \"df1\",\n  \"rows\": 214,\n  \"fields\": [\n    {\n      \"column\": \"Date\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2021-01-31 00:00:00\",\n        \"max\": \"2025-12-01 00:00:00\",\n        \"num_unique_values\": 212,\n        \"samples\": [\n          \"2021-08-29 00:00:00\",\n          \"2024-05-26 00:00:00\",\n          \"2023-10-08 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Estimated  quantity demand per transaction\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 6.062677486291102,\n        \"min\": 80.0,\n        \"max\": 114.0,\n        \"num_unique_values\": 30,\n        \"samples\": [\n          114.0,\n          106.0,\n          80.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 9
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Identify duplicate dates in the index of df1\n",
        "duplicate_dates = df1.index[df1.index.duplicated()]\n",
        "\n",
        "# Print the number of duplicate dates found\n",
        "print(f\"Number of duplicate dates: {len(duplicate_dates)}\")\n",
        "\n",
        "# Display all rows with duplicate dates in the index\n",
        "print(df1[df1.index.duplicated(keep=False)])"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "yYCBAYQHRcZR",
        "outputId": "31a8deda-14b1-4b2b-b47a-f548b4360e1d"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Number of duplicate dates: 2\n",
            "            Estimated  quantity demand per transaction\n",
            "Date                                                  \n",
            "2025-09-02                                       101.0\n",
            "2025-02-16                                       102.0\n",
            "2025-09-02                                       101.0\n",
            "2025-02-16                                       102.0\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Remove duplicate dates from the index, keeping only the first occurrence\n",
        "df1 = df1[~df1.index.duplicated(keep='first')]"
      ],
      "metadata": {
        "id": "-KCcGZgrRQit"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Resample the DataFrame to weekly frequency ('W') and forward-fill missing values\n",
        "df1 = df1.resample('W').ffill()"
      ],
      "metadata": {
        "id": "G3ncEtVoSpfU"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Display the first 5 rows of the DataFrame\n",
        "df1.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 238
        },
        "id": "8u0miqX1svSY",
        "outputId": "41024c73-f0ca-4359-9561-6cfc3fb8215c"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "            Estimated  quantity demand per transaction\n",
              "Date                                                  \n",
              "2021-01-31                                        97.0\n",
              "2021-02-07                                        95.0\n",
              "2021-02-14                                        96.0\n",
              "2021-02-21                                        93.0\n",
              "2021-02-28                                        92.0"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-b24db122-1cc8-4788-a30d-22b605cc931d\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Estimated  quantity demand per transaction</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Date</th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>2021-01-31</th>\n",
              "      <td>97.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2021-02-07</th>\n",
              "      <td>95.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2021-02-14</th>\n",
              "      <td>96.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2021-02-21</th>\n",
              "      <td>93.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2021-02-28</th>\n",
              "      <td>92.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b24db122-1cc8-4788-a30d-22b605cc931d')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-b24db122-1cc8-4788-a30d-22b605cc931d button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-b24db122-1cc8-4788-a30d-22b605cc931d');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "    <div id=\"df-b1ba59b9-89dd-46c5-b14e-5dcc460422ac\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-b1ba59b9-89dd-46c5-b14e-5dcc460422ac')\"\n",
              "                title=\"Suggest charts\"\n",
              "                style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "      <script>\n",
              "        async function quickchart(key) {\n",
              "          const quickchartButtonEl =\n",
              "            document.querySelector('#' + key + ' button');\n",
              "          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "          quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "          try {\n",
              "            const charts = await google.colab.kernel.invokeFunction(\n",
              "                'suggestCharts', [key], {});\n",
              "          } catch (error) {\n",
              "            console.error('Error during call to suggestCharts:', error);\n",
              "          }\n",
              "          quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "        }\n",
              "        (() => {\n",
              "          let quickchartButtonEl =\n",
              "            document.querySelector('#df-b1ba59b9-89dd-46c5-b14e-5dcc460422ac button');\n",
              "          quickchartButtonEl.style.display =\n",
              "            google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "        })();\n",
              "      </script>\n",
              "    </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "df1",
              "summary": "{\n  \"name\": \"df1\",\n  \"rows\": 254,\n  \"fields\": [\n    {\n      \"column\": \"Date\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2021-01-31 00:00:00\",\n        \"max\": \"2025-12-07 00:00:00\",\n        \"num_unique_values\": 254,\n        \"samples\": [\n          \"2024-09-22 00:00:00\",\n          \"2021-03-14 00:00:00\",\n          \"2022-08-07 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Estimated  quantity demand per transaction\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5.677453547434761,\n        \"min\": 80.0,\n        \"max\": 114.0,\n        \"num_unique_values\": 30,\n        \"samples\": [\n          114.0,\n          106.0,\n          80.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 13
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Display the last 5 rows of the DataFrame\n",
        "df1.tail()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 238
        },
        "id": "iGUwiIPBQR8_",
        "outputId": "e21bb1af-efac-48d7-db31-2a49f801f7a7"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "            Estimated  quantity demand per transaction\n",
              "Date                                                  \n",
              "2025-11-09                                       101.0\n",
              "2025-11-16                                       101.0\n",
              "2025-11-23                                       101.0\n",
              "2025-11-30                                       101.0\n",
              "2025-12-07                                       100.0"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-ab07fda9-3296-4f4d-b963-81d6f4bdcd4f\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Estimated  quantity demand per transaction</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Date</th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>2025-11-09</th>\n",
              "      <td>101.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2025-11-16</th>\n",
              "      <td>101.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2025-11-23</th>\n",
              "      <td>101.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2025-11-30</th>\n",
              "      <td>101.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2025-12-07</th>\n",
              "      <td>100.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ab07fda9-3296-4f4d-b963-81d6f4bdcd4f')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-ab07fda9-3296-4f4d-b963-81d6f4bdcd4f button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-ab07fda9-3296-4f4d-b963-81d6f4bdcd4f');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "    <div id=\"df-045046e7-5b14-4eef-ad0c-d0e92ab5d80a\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-045046e7-5b14-4eef-ad0c-d0e92ab5d80a')\"\n",
              "                title=\"Suggest charts\"\n",
              "                style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "      <script>\n",
              "        async function quickchart(key) {\n",
              "          const quickchartButtonEl =\n",
              "            document.querySelector('#' + key + ' button');\n",
              "          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "          quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "          try {\n",
              "            const charts = await google.colab.kernel.invokeFunction(\n",
              "                'suggestCharts', [key], {});\n",
              "          } catch (error) {\n",
              "            console.error('Error during call to suggestCharts:', error);\n",
              "          }\n",
              "          quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "        }\n",
              "        (() => {\n",
              "          let quickchartButtonEl =\n",
              "            document.querySelector('#df-045046e7-5b14-4eef-ad0c-d0e92ab5d80a button');\n",
              "          quickchartButtonEl.style.display =\n",
              "            google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "        })();\n",
              "      </script>\n",
              "    </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "summary": "{\n  \"name\": \"df1\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": \"Date\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2025-11-09 00:00:00\",\n        \"max\": \"2025-12-07 00:00:00\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"2025-11-16 00:00:00\",\n          \"2025-12-07 00:00:00\",\n          \"2025-11-23 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Estimated  quantity demand per transaction\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.4472135954999579,\n        \"min\": 100.0,\n        \"max\": 101.0,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          100.0,\n          101.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 14
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Summary of dataframe\n",
        "df1.info()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "RTG4NyIzSwSv",
        "outputId": "123714a7-a877-493f-9cf8-5ec7b2993eca"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "DatetimeIndex: 254 entries, 2021-01-31 to 2025-12-07\n",
            "Freq: W-SUN\n",
            "Data columns (total 1 columns):\n",
            " #   Column                                      Non-Null Count  Dtype  \n",
            "---  ------                                      --------------  -----  \n",
            " 0   Estimated  quantity demand per transaction  252 non-null    float64\n",
            "dtypes: float64(1)\n",
            "memory usage: 4.0 KB\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Read the 'inflation_rate.csv' file into a DataFrame, parse the 'Date' column as datetime, and use Latin-1 encoding\n",
        "df2 = pd.read_csv('inflation_rate.csv', encoding='latin-1', parse_dates=['Date'])"
      ],
      "metadata": {
        "id": "QB379akub6xi"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Set the 'Date' column as the index of df2 for time series operations\n",
        "df2 = df2.set_index('Date')"
      ],
      "metadata": {
        "id": "tGGv5TpxNa0_"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Resample the DataFrame to weekly frequency and forward-fill missing values\n",
        "df2 = df2.resample('W').ffill()"
      ],
      "metadata": {
        "id": "TkxZEb0z5ARr"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Display the first five rows\n",
        "df2.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 238
        },
        "id": "NJAK1wy9fU3I",
        "outputId": "c2eda23b-4e26-41d7-9101-8592cd3336fc"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "            Inflation Rate\n",
              "Date                      \n",
              "2021-01-03            -9.6\n",
              "2021-01-10            -9.6\n",
              "2021-01-17            -9.6\n",
              "2021-01-24            -9.6\n",
              "2021-01-31            -9.6"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-28f5cfa4-8928-4615-a867-ff589e2e06ac\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Inflation Rate</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Date</th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>2021-01-03</th>\n",
              "      <td>-9.6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2021-01-10</th>\n",
              "      <td>-9.6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2021-01-17</th>\n",
              "      <td>-9.6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2021-01-24</th>\n",
              "      <td>-9.6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2021-01-31</th>\n",
              "      <td>-9.6</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-28f5cfa4-8928-4615-a867-ff589e2e06ac')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-28f5cfa4-8928-4615-a867-ff589e2e06ac button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-28f5cfa4-8928-4615-a867-ff589e2e06ac');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "    <div id=\"df-0af4f59a-a828-4497-bd82-9da8e2c8b5e0\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-0af4f59a-a828-4497-bd82-9da8e2c8b5e0')\"\n",
              "                title=\"Suggest charts\"\n",
              "                style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "      <script>\n",
              "        async function quickchart(key) {\n",
              "          const quickchartButtonEl =\n",
              "            document.querySelector('#' + key + ' button');\n",
              "          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "          quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "          try {\n",
              "            const charts = await google.colab.kernel.invokeFunction(\n",
              "                'suggestCharts', [key], {});\n",
              "          } catch (error) {\n",
              "            console.error('Error during call to suggestCharts:', error);\n",
              "          }\n",
              "          quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "        }\n",
              "        (() => {\n",
              "          let quickchartButtonEl =\n",
              "            document.querySelector('#df-0af4f59a-a828-4497-bd82-9da8e2c8b5e0 button');\n",
              "          quickchartButtonEl.style.display =\n",
              "            google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "        })();\n",
              "      </script>\n",
              "    </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "df2",
              "summary": "{\n  \"name\": \"df2\",\n  \"rows\": 218,\n  \"fields\": [\n    {\n      \"column\": \"Date\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2021-01-03 00:00:00\",\n        \"max\": \"2025-03-02 00:00:00\",\n        \"num_unique_values\": 218,\n        \"samples\": [\n          \"2022-12-04 00:00:00\",\n          \"2025-02-16 00:00:00\",\n          \"2023-09-03 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Inflation Rate\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 18.457672746352188,\n        \"min\": -26.0,\n        \"max\": 46.8,\n        \"num_unique_values\": 48,\n        \"samples\": [\n          -14.2,\n          2.5,\n          -9.9\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 19
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Display the last five rows\n",
        "df2.tail()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 238
        },
        "id": "6_CPKxnXQbxW",
        "outputId": "8ee51cec-c04f-4bbf-f55f-587129685779"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "            Inflation Rate\n",
              "Date                      \n",
              "2025-02-02            -2.4\n",
              "2025-02-09            -2.4\n",
              "2025-02-16            -2.4\n",
              "2025-02-23            -2.4\n",
              "2025-03-02            -5.4"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-747a8222-5079-4476-9d76-c4dbf5a32891\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Inflation Rate</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Date</th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>2025-02-02</th>\n",
              "      <td>-2.4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2025-02-09</th>\n",
              "      <td>-2.4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2025-02-16</th>\n",
              "      <td>-2.4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2025-02-23</th>\n",
              "      <td>-2.4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2025-03-02</th>\n",
              "      <td>-5.4</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-747a8222-5079-4476-9d76-c4dbf5a32891')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-747a8222-5079-4476-9d76-c4dbf5a32891 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-747a8222-5079-4476-9d76-c4dbf5a32891');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "    <div id=\"df-ba2ce639-d64d-4e92-bb5a-72ea35f48a37\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-ba2ce639-d64d-4e92-bb5a-72ea35f48a37')\"\n",
              "                title=\"Suggest charts\"\n",
              "                style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "      <script>\n",
              "        async function quickchart(key) {\n",
              "          const quickchartButtonEl =\n",
              "            document.querySelector('#' + key + ' button');\n",
              "          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "          quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "          try {\n",
              "            const charts = await google.colab.kernel.invokeFunction(\n",
              "                'suggestCharts', [key], {});\n",
              "          } catch (error) {\n",
              "            console.error('Error during call to suggestCharts:', error);\n",
              "          }\n",
              "          quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "        }\n",
              "        (() => {\n",
              "          let quickchartButtonEl =\n",
              "            document.querySelector('#df-ba2ce639-d64d-4e92-bb5a-72ea35f48a37 button');\n",
              "          quickchartButtonEl.style.display =\n",
              "            google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "        })();\n",
              "      </script>\n",
              "    </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "summary": "{\n  \"name\": \"df2\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": \"Date\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2025-02-02 00:00:00\",\n        \"max\": \"2025-03-02 00:00:00\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"2025-02-09 00:00:00\",\n          \"2025-03-02 00:00:00\",\n          \"2025-02-16 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Inflation Rate\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.341640786499874,\n        \"min\": -5.4,\n        \"max\": -2.4,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          -5.4,\n          -2.4\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 20
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Merge df1 and df2 on the 'Date' column\n",
        "df = pd.merge(df1, df2, on='Date', how='inner')"
      ],
      "metadata": {
        "id": "tKfLzB8VBfXf"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Display the dataframe\n",
        "df"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 455
        },
        "id": "OvwLQRTCClhU",
        "outputId": "b118c52e-b885-42a9-f001-7b01a4e82f6b"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "            Estimated  quantity demand per transaction  Inflation Rate\n",
              "Date                                                                  \n",
              "2021-01-31                                        97.0            -9.6\n",
              "2021-02-07                                        95.0            -2.9\n",
              "2021-02-14                                        96.0            -2.9\n",
              "2021-02-21                                        93.0            -2.9\n",
              "2021-02-28                                        92.0            -2.9\n",
              "...                                                ...             ...\n",
              "2025-02-02                                       100.0            -2.4\n",
              "2025-02-09                                       100.0            -2.4\n",
              "2025-02-16                                       102.0            -2.4\n",
              "2025-02-23                                       102.0            -2.4\n",
              "2025-03-02                                       102.0            -5.4\n",
              "\n",
              "[214 rows x 2 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-cb2dd9aa-78ae-4f79-bb53-8719d3b09e6f\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Estimated  quantity demand per transaction</th>\n",
              "      <th>Inflation Rate</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Date</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>2021-01-31</th>\n",
              "      <td>97.0</td>\n",
              "      <td>-9.6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2021-02-07</th>\n",
              "      <td>95.0</td>\n",
              "      <td>-2.9</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2021-02-14</th>\n",
              "      <td>96.0</td>\n",
              "      <td>-2.9</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2021-02-21</th>\n",
              "      <td>93.0</td>\n",
              "      <td>-2.9</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2021-02-28</th>\n",
              "      <td>92.0</td>\n",
              "      <td>-2.9</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2025-02-02</th>\n",
              "      <td>100.0</td>\n",
              "      <td>-2.4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2025-02-09</th>\n",
              "      <td>100.0</td>\n",
              "      <td>-2.4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2025-02-16</th>\n",
              "      <td>102.0</td>\n",
              "      <td>-2.4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2025-02-23</th>\n",
              "      <td>102.0</td>\n",
              "      <td>-2.4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2025-03-02</th>\n",
              "      <td>102.0</td>\n",
              "      <td>-5.4</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>214 rows × 2 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-cb2dd9aa-78ae-4f79-bb53-8719d3b09e6f')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-cb2dd9aa-78ae-4f79-bb53-8719d3b09e6f button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-cb2dd9aa-78ae-4f79-bb53-8719d3b09e6f');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "    <div id=\"df-42927cfb-debc-49ab-a836-23e00fbf6932\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-42927cfb-debc-49ab-a836-23e00fbf6932')\"\n",
              "                title=\"Suggest charts\"\n",
              "                style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "      <script>\n",
              "        async function quickchart(key) {\n",
              "          const quickchartButtonEl =\n",
              "            document.querySelector('#' + key + ' button');\n",
              "          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "          quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "          try {\n",
              "            const charts = await google.colab.kernel.invokeFunction(\n",
              "                'suggestCharts', [key], {});\n",
              "          } catch (error) {\n",
              "            console.error('Error during call to suggestCharts:', error);\n",
              "          }\n",
              "          quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "        }\n",
              "        (() => {\n",
              "          let quickchartButtonEl =\n",
              "            document.querySelector('#df-42927cfb-debc-49ab-a836-23e00fbf6932 button');\n",
              "          quickchartButtonEl.style.display =\n",
              "            google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "        })();\n",
              "      </script>\n",
              "    </div>\n",
              "\n",
              "  <div id=\"id_d7a42f0e-866c-418b-a318-b016578fb413\">\n",
              "    <style>\n",
              "      .colab-df-generate {\n",
              "        background-color: #E8F0FE;\n",
              "        border: none;\n",
              "        border-radius: 50%;\n",
              "        cursor: pointer;\n",
              "        display: none;\n",
              "        fill: #1967D2;\n",
              "        height: 32px;\n",
              "        padding: 0 0 0 0;\n",
              "        width: 32px;\n",
              "      }\n",
              "\n",
              "      .colab-df-generate:hover {\n",
              "        background-color: #E2EBFA;\n",
              "        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "        fill: #174EA6;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate {\n",
              "        background-color: #3B4455;\n",
              "        fill: #D2E3FC;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate:hover {\n",
              "        background-color: #434B5C;\n",
              "        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "        fill: #FFFFFF;\n",
              "      }\n",
              "    </style>\n",
              "    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n",
              "            title=\"Generate code using this dataframe.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "    <script>\n",
              "      (() => {\n",
              "      const buttonEl =\n",
              "        document.querySelector('#id_d7a42f0e-866c-418b-a318-b016578fb413 button.colab-df-generate');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      buttonEl.onclick = () => {\n",
              "        google.colab.notebook.generateWithVariable('df');\n",
              "      }\n",
              "      })();\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "df",
              "summary": "{\n  \"name\": \"df\",\n  \"rows\": 214,\n  \"fields\": [\n    {\n      \"column\": \"Date\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2021-01-31 00:00:00\",\n        \"max\": \"2025-03-02 00:00:00\",\n        \"num_unique_values\": 214,\n        \"samples\": [\n          \"2021-04-04 00:00:00\",\n          \"2024-11-10 00:00:00\",\n          \"2022-05-08 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Estimated  quantity demand per transaction\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 6.061539824595545,\n        \"min\": 80.0,\n        \"max\": 114.0,\n        \"num_unique_values\": 30,\n        \"samples\": [\n          114.0,\n          106.0,\n          80.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Inflation Rate\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 18.485442125524195,\n        \"min\": -26.0,\n        \"max\": 46.8,\n        \"num_unique_values\": 48,\n        \"samples\": [\n          -14.2,\n          2.5,\n          -9.9\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 22
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Check for missing values\n",
        "df.isnull().sum()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 147
        },
        "id": "hG-IMen8FGns",
        "outputId": "fa670cd4-85bb-44df-fadf-f875ac69824b"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Estimated  quantity demand per transaction    2\n",
              "Inflation Rate                                0\n",
              "dtype: int64"
            ],
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>0</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>Estimated  quantity demand per transaction</th>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Inflation Rate</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div><br><label><b>dtype:</b> int64</label>"
            ]
          },
          "metadata": {},
          "execution_count": 23
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Display rows with missing values\n",
        "missing = df[df['Estimated  quantity demand per transaction'].isna()]\n",
        "print(missing)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "6HMP1N9vFM8g",
        "outputId": "7a81c29f-d968-486a-b9f3-ae7af99d48d5"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "            Estimated  quantity demand per transaction  Inflation Rate\n",
            "Date                                                                  \n",
            "2022-10-23                                         NaN            24.5\n",
            "2023-04-09                                         NaN            -9.9\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Handle missing values using interpolation\n",
        "df = df.interpolate(method='linear', axis=0, limit_direction='both')"
      ],
      "metadata": {
        "id": "MTxf-fU-PwsP"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Summary of df\n",
        "df.info()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "4vVUyylvTWfV",
        "outputId": "058c9192-525e-4745-c1c3-05e02a705fbe"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "DatetimeIndex: 214 entries, 2021-01-31 to 2025-03-02\n",
            "Data columns (total 2 columns):\n",
            " #   Column                                      Non-Null Count  Dtype  \n",
            "---  ------                                      --------------  -----  \n",
            " 0   Estimated  quantity demand per transaction  214 non-null    float64\n",
            " 1   Inflation Rate                              214 non-null    float64\n",
            "dtypes: float64(2)\n",
            "memory usage: 5.0 KB\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Check for duplicates\n",
        "print(df[df.index.duplicated(keep=False)])"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "OrkbEHuEVPF0",
        "outputId": "087a4534-4094-4928-d7fa-5815cb582876"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Empty DataFrame\n",
            "Columns: [Estimated  quantity demand per transaction, Inflation Rate]\n",
            "Index: []\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Display the fiirst 5 rows\n",
        "df.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 238
        },
        "id": "owwGOQvnfmfG",
        "outputId": "28aef3b2-465b-4359-f8b1-4866910c3631"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "            Estimated  quantity demand per transaction  Inflation Rate\n",
              "Date                                                                  \n",
              "2021-01-31                                        97.0            -9.6\n",
              "2021-02-07                                        95.0            -2.9\n",
              "2021-02-14                                        96.0            -2.9\n",
              "2021-02-21                                        93.0            -2.9\n",
              "2021-02-28                                        92.0            -2.9"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-77c3a7ba-1d3b-41a4-8a64-b64ee25ce54f\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Estimated  quantity demand per transaction</th>\n",
              "      <th>Inflation Rate</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Date</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>2021-01-31</th>\n",
              "      <td>97.0</td>\n",
              "      <td>-9.6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2021-02-07</th>\n",
              "      <td>95.0</td>\n",
              "      <td>-2.9</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2021-02-14</th>\n",
              "      <td>96.0</td>\n",
              "      <td>-2.9</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2021-02-21</th>\n",
              "      <td>93.0</td>\n",
              "      <td>-2.9</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2021-02-28</th>\n",
              "      <td>92.0</td>\n",
              "      <td>-2.9</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-77c3a7ba-1d3b-41a4-8a64-b64ee25ce54f')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-77c3a7ba-1d3b-41a4-8a64-b64ee25ce54f button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-77c3a7ba-1d3b-41a4-8a64-b64ee25ce54f');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "    <div id=\"df-7fc343f9-6aa3-4b85-a126-510a2d6f79fc\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-7fc343f9-6aa3-4b85-a126-510a2d6f79fc')\"\n",
              "                title=\"Suggest charts\"\n",
              "                style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "      <script>\n",
              "        async function quickchart(key) {\n",
              "          const quickchartButtonEl =\n",
              "            document.querySelector('#' + key + ' button');\n",
              "          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "          quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "          try {\n",
              "            const charts = await google.colab.kernel.invokeFunction(\n",
              "                'suggestCharts', [key], {});\n",
              "          } catch (error) {\n",
              "            console.error('Error during call to suggestCharts:', error);\n",
              "          }\n",
              "          quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "        }\n",
              "        (() => {\n",
              "          let quickchartButtonEl =\n",
              "            document.querySelector('#df-7fc343f9-6aa3-4b85-a126-510a2d6f79fc button');\n",
              "          quickchartButtonEl.style.display =\n",
              "            google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "        })();\n",
              "      </script>\n",
              "    </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "df",
              "summary": "{\n  \"name\": \"df\",\n  \"rows\": 214,\n  \"fields\": [\n    {\n      \"column\": \"Date\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2021-01-31 00:00:00\",\n        \"max\": \"2025-03-02 00:00:00\",\n        \"num_unique_values\": 214,\n        \"samples\": [\n          \"2021-04-04 00:00:00\",\n          \"2024-11-10 00:00:00\",\n          \"2022-05-08 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Estimated  quantity demand per transaction\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 6.052664386180224,\n        \"min\": 80.0,\n        \"max\": 114.0,\n        \"num_unique_values\": 32,\n        \"samples\": [\n          114.0,\n          106.0,\n          92.5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Inflation Rate\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 18.485442125524195,\n        \"min\": -26.0,\n        \"max\": 46.8,\n        \"num_unique_values\": 48,\n        \"samples\": [\n          -14.2,\n          2.5,\n          -9.9\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 28
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Display last five rows\n",
        "df.tail()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 238
        },
        "id": "YJikb_thWrxT",
        "outputId": "04ffc61e-dca9-4f31-e5a7-3b8fb7c7ed6e"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "            Estimated  quantity demand per transaction  Inflation Rate\n",
              "Date                                                                  \n",
              "2025-02-02                                       100.0            -2.4\n",
              "2025-02-09                                       100.0            -2.4\n",
              "2025-02-16                                       102.0            -2.4\n",
              "2025-02-23                                       102.0            -2.4\n",
              "2025-03-02                                       102.0            -5.4"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-2807b6b8-d6a0-49ac-afea-783912b7b3c2\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Estimated  quantity demand per transaction</th>\n",
              "      <th>Inflation Rate</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Date</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>2025-02-02</th>\n",
              "      <td>100.0</td>\n",
              "      <td>-2.4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2025-02-09</th>\n",
              "      <td>100.0</td>\n",
              "      <td>-2.4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2025-02-16</th>\n",
              "      <td>102.0</td>\n",
              "      <td>-2.4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2025-02-23</th>\n",
              "      <td>102.0</td>\n",
              "      <td>-2.4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2025-03-02</th>\n",
              "      <td>102.0</td>\n",
              "      <td>-5.4</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2807b6b8-d6a0-49ac-afea-783912b7b3c2')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-2807b6b8-d6a0-49ac-afea-783912b7b3c2 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-2807b6b8-d6a0-49ac-afea-783912b7b3c2');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "    <div id=\"df-3764e356-d618-4c8a-8d46-ee139a6c3d53\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-3764e356-d618-4c8a-8d46-ee139a6c3d53')\"\n",
              "                title=\"Suggest charts\"\n",
              "                style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "      <script>\n",
              "        async function quickchart(key) {\n",
              "          const quickchartButtonEl =\n",
              "            document.querySelector('#' + key + ' button');\n",
              "          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "          quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "          try {\n",
              "            const charts = await google.colab.kernel.invokeFunction(\n",
              "                'suggestCharts', [key], {});\n",
              "          } catch (error) {\n",
              "            console.error('Error during call to suggestCharts:', error);\n",
              "          }\n",
              "          quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "        }\n",
              "        (() => {\n",
              "          let quickchartButtonEl =\n",
              "            document.querySelector('#df-3764e356-d618-4c8a-8d46-ee139a6c3d53 button');\n",
              "          quickchartButtonEl.style.display =\n",
              "            google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "        })();\n",
              "      </script>\n",
              "    </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "summary": "{\n  \"name\": \"df\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": \"Date\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2025-02-02 00:00:00\",\n        \"max\": \"2025-03-02 00:00:00\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"2025-02-09 00:00:00\",\n          \"2025-03-02 00:00:00\",\n          \"2025-02-16 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Estimated  quantity demand per transaction\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.0954451150103321,\n        \"min\": 100.0,\n        \"max\": 102.0,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          102.0,\n          100.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Inflation Rate\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.341640786499874,\n        \"min\": -5.4,\n        \"max\": -2.4,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          -5.4,\n          -2.4\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 29
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sns"
      ],
      "metadata": {
        "id": "fs_OQLDWAhrH"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Boxplot of Inflation Rate\n",
        "plt.figure(figsize=(10, 5))\n",
        "sns.boxplot(x=df['Inflation Rate'])\n",
        "plt.title(\"Boxplot of Inflation Rate\")\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 487
        },
        "id": "hpnBvjiTG4Ub",
        "outputId": "cfa9cab3-d0c0-48a1-b2ef-7bf7531af39b"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x500 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Boxplot of Estimated  quantity demand per transaction\n",
        "plt.figure(figsize=(10, 5))\n",
        "sns.boxplot(x=df['Estimated  quantity demand per transaction'])\n",
        "plt.title(\"Boxplot of Estimated  quantity demand per transaction\")\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 487
        },
        "id": "iI9oRatCrkGS",
        "outputId": "753faaf0-4589-4865-81f0-284d2889dfc1"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x500 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "Q1 = df['Estimated  quantity demand per transaction'].quantile(0.25)\n",
        "Q3 = df['Estimated  quantity demand per transaction'].quantile(0.75)\n",
        "\n",
        "# Calculate the IQR (Interquartile Range)\n",
        "IQR = Q3 - Q1\n",
        "\n",
        "# Define the lower and upper bounds for the outliers\n",
        "lower_bound = Q1 - 1.5 * IQR\n",
        "upper_bound = Q3 + 1.5 * IQR\n",
        "\n",
        "# Filter the DataFrame to keep only values within the bounds\n",
        "df_clean = df[(df['Estimated  quantity demand per transaction'] >= lower_bound) & (df['Estimated  quantity demand per transaction'] <= upper_bound)]"
      ],
      "metadata": {
        "id": "AdYssfgSTUa9"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Limit extreme values by capping values below lower_bound and above upper_bound\n",
        "df['Estimated  quantity demand per transaction'] = np.clip(df['Estimated  quantity demand per transaction'], lower_bound, upper_bound)"
      ],
      "metadata": {
        "id": "uXp37KllTuri"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Boxplot of Estimated  quantity demand per transaction\n",
        "plt.figure(figsize=(10, 5))\n",
        "sns.boxplot(x=df['Estimated  quantity demand per transaction'])\n",
        "plt.title(\"Boxplot of Estimated  quantity demand per transaction\")\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 487
        },
        "id": "92TDpWPdi9PY",
        "outputId": "92af83d2-e2ac-4225-f6ba-f22b88bf30ee"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x500 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df['Estimated  quantity demand per transaction'].plot()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 466
        },
        "id": "dLmCyNZgtjhR",
        "outputId": "95aef5a8-de8a-4ae0-9ca8-9b92a3896d1a"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<Axes: xlabel='Date'>"
            ]
          },
          "metadata": {},
          "execution_count": 35
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df['Estimated  quantity demand per transaction'].plot(figsize=(12,5))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 482
        },
        "id": "bJQV5eQitemh",
        "outputId": "e08520a4-29ef-430e-b24d-eb9b1e8e9a83"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<Axes: xlabel='Date'>"
            ]
          },
          "metadata": {},
          "execution_count": 36
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1200x500 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from scipy.stats import shapiro\n",
        "\n",
        "# Pass the actual data from the 'Loans' column instead of the string \"Loans\"\n",
        "stat, p_value = shapiro(df['Estimated  quantity demand per transaction'])\n",
        "\n",
        "if p_value > 0.05:\n",
        "    print(\"Data is likely normal (fail to reject H0)\")\n",
        "else:\n",
        "    print(\"Data is not normal (reject H0)\")\n",
        "print('Statistics=%.3f, p=%.3f' % (stat, p_value))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "HUx7zjLRpUWj",
        "outputId": "4ac0ea18-e62f-4992-894f-f1d05be10f17"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Data is likely normal (fail to reject H0)\n",
            "Statistics=0.994, p=0.494\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.plot(figsize=(12,5))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 485
        },
        "id": "ImO1SH0mkwH0",
        "outputId": "e242869f-0c33-4a9b-d9f0-08b0a217253e"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<Axes: xlabel='Date'>"
            ]
          },
          "metadata": {},
          "execution_count": 38
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1200x500 with 1 Axes>"
            ],
            "image/png": "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MmUKd9xxB6mpqYSHh3Prrbfy1FNP2Z7z8MMPk5uby+TJk8nIyGDYsGHMnz8fT09PR4YmIiIiIiIi4lAmq9VqdXYQNZGVlUVAQACZmZn4+/s7OxwRERERERFp4Cqbhzp0D7eIiIiIiIhIY6WEW0RERERERMQBlHCLiIiIiIiIOIASbhEREREREREHUMItIiIiIiIi4gBKuEVEREREREQcQAm3iIiIiIiIiAMo4RYRERERERFxACXcIiIiIiIiIg6ghFtERERERETEAZRwi4iIiIiIiDiAEm4RERERERERB1DCLSIiIiIiIuIASrhFREREREREHEAJt4iIiIiIiIgDKOEWERERERERcQAl3CIiIiIiIiIOoIRbRERERERExAGUcIuIiIiIiIg4gBJuEREREREREQdQwi0iIiIiIiLiAEq4RURERERERBxACbeIiIiIiIiIAyjhFhEREREREXEAJdwiIiIiIiIiDqCEW0RERERERMQBlHCLiIiIiIiIOIASbhEREREREREHUMItIiIiIiIi4gBKuEVEREREREQcQAm3iIiIiIiIiAMo4RYRERERERFxACXcIiIiIiIiIg6ghFtERERERETEAZRwi4iIiIiIiDiAEm4RERERERERB1DCLSIiIiIiIuIASrhFREREREREHEAJt4iIiIiIiIgDODzhTkxM5P/+7/9o0qQJXl5edO/enfXr19set1qtPPXUUzRv3hwvLy9Gjx7Nnj17HB2WiIiIiIiIiEM5NOE+evQoQ4cOxc3NjXnz5rFz505ef/11goKCbM955ZVXeOedd/joo49Ys2YNPj4+jBkzhvz8fEeGJiIiIiIiIuJQJqvVanXU4I8++igrVqxg2bJlFT5utVoJDw/ngQce4MEHHwQgMzOT0NBQZsyYwVVXXXXG18jKyiIgIIDMzEz8/f3tGr+IiIiIiIjIv1U2D3XoDPfvv/9Ov379uPzyy2nWrBm9e/fm008/tT0eGxtLcnIyo0ePtt0XEBDAwIEDWbVqVYVjFhQUkJWVVe4iIiIiIiIiUtc4NOHev38/H374Ie3bt+fPP//k9ttv55577mHmzJkAJCcnAxAaGlruuNDQUNtj/zZ16lQCAgJsl4iICEe+BREREREREZFqcWjCbbFY6NOnDy+99BK9e/dm8uTJ3HLLLXz00UfVHvOxxx4jMzPTdklISLBjxCIiIiIiIiL24dCEu3nz5nTp0qXcfZ07d+bAgQMAhIWFAZCSklLuOSkpKbbH/s3DwwN/f/9yFxEREREREZG6xqEJ99ChQ4mJiSl33+7du2nVqhUAUVFRhIWFsWDBAtvjWVlZrFmzhsGDBzsyNBERERERERGHcnXk4Pfddx9DhgzhpZde4oorrmDt2rV88sknfPLJJwCYTCbuvfdeXnjhBdq3b09UVBRTpkwhPDyciy++2JGhiYiIiIiIiDiUQxPu/v37M2vWLB577DGee+45oqKieOutt7j22mttz3n44YfJzc1l8uTJZGRkMGzYMObPn4+np6cjQxMRERERERFxKIf24a4N6sMtIiIiIiIitalO9OEWERERERERaayUcIuIiIiIiIg4gBJuEREREREREQdQwi0iIiIiIiLiAEq4RURERERERBxACbeIiIiIiIiIAyjhFhEREREREXEAJdwiIiIiIiIiDqCEW0RERERERMQBlHCLiIiIiIiIOIASbhEREREREREHUMItIiIiIiIi4gBKuEVEREREREQcQAm3iIiIiIiIiAMo4RYRERERERFxACXcIiIiIiIiIg6ghFtERERERETEAZRwi4iIiIiIiDiAEm4RERERERERB1DCLSIiIiIiIuIASrhFREREREREHEAJt4iIiIiIiIgDKOEWERERERERcQAl3CIiIiIiIiIOoIRbRERERERExAFcnR2AiIjUUHEh/HYHpOys+VieATDhPWjStuZjiYiIiDRySrhFROq7Bc/Cth/tN962H2HEo/YbT0RERKSRUsItIlKf7fkHVr1n3B73KoS0r/5Y23+GTV9CRoJ9YhMRERFp5JRwi4jUV9kp8Ottxu3+t8DAyTUbLzetNOGOr3lsIiIiIqKiaSIi9ZLFArNuNZLkZl3hvBdqPmZgpHGdcaDmY4mIiIiIEm4RkXpp1buwfxG4esFl08DNs+ZjliXcWYlQUlzz8UREREQaOS0pFxFxpoR1MP9RKDpWteMOxxjX4/4HzTrZJxbfMDC7gaUIsg9BYIR9xhURERFppJRwi4g405qPIHF99Y7tegn0ucF+sZjNRpKdvt9YVq6EW0RERKRGlHCLiDhT4gbj+rwXIbRr5Y9zcYOWA8Bksm88ASck3Ay179giIiIijYwSbhERZ8k9Akdjjdu9rwWvIOfGAyqcJiIiImJHKpom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iIjjDb7DuEidooS7jho7dizTp08vd5+Hh0e1x/Py8rJVBxbncXd3JyxMH3rqspKSEkwmE+ZqVjsuLCzE3b3+tt0JDg52dggitaNs73byVufGUVklRVUvhrTzd+Nay8lFRJymQVcp/zer1UpeYbFTLlartUqxenh4EBYWVu4SFBRkex/PPPMMkZGReHh4EB4ezj333AMYs6rx8fHcd999mEwmW3GiGTNmlJvFeuaZZ+jVqxfTpk0jMjISX19f7rjjDkpKSnjllVcICwujWbNmvPjii+XieuONN+jevTs+Pj5ERERwxx13kJOTAxgzZpMmTSIzM9P22s888wwABQUFPPjgg7Ro0QIfHx8GDhzI4sWLy409Y8YMIiMj8fb25pJLLuHIkSNV+jcDyM3N5frrr8fX15fmzZvz+uuvM2LEiHKz/SaTiV9//bXccYGBgcyYMcP29SOPPEKHDh3w9vamTZs2TJkypVxF5bJ/vy+//JLWrVsTEBDAVVddRXa28WHoxhtvZMmSJbz99tu2f4u4uDgWL16MyWQiIyPjlP9ezz33HN26dTvpvfXq1YspU6ac8r3PnTuXDh064OXlxciRI4mLizvpOcuXL+ess87Cy8uLiIgI7rnnHnJzc22Pt27dmhdeeMH2b9iqVSt+//130tLSmDBhAr6+vvTo0YP169fbjjly5AhXX301LVq0wNvbm+7du/Ptt9+We90RI0Zwzz338PDDDxMcHExYWJjte6PMnj17GD58OJ6ennTp0oW///77lO/1xHHvuusu7rrrLgICAggJCWHKlCnlft7O9L1X9rPx+++/06VLFzw8PDhw4EC514mLi2PkyJEABAUFYTKZuPHGG8vFcO+99xISEsKYMWOA0/+snPi6f/75J507d8bX15exY8dy6NAh23MWL17MgAED8PHxITAwkKFDhxIfHw/Avn37mDBhAqGhofj6+tK/f3/++eefcnEXFBTwyCOPEBERgYeHB+3atePzzz8/4/s58efl6NGjXH/99QQFBeHt7c24cePYs2dPld6HSJ0U1t24Tt4KVfwbXety0uD1TvBKVNUu+xcZx3e6wLnxi4g0Yo1qhvtYUQldnvrTKa+987kxeLvb55/7559/5s033+S7776ja9euJCcns2XLFsBYDtqzZ08mT57MLbfcctpx9u3bx7x585g/fz779u3jsssu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U8qJiIiIiIiIlIAFNxEREREREZESsOAmIiIiIiIiUgIW3ERERERERERKwIKbiIiIiIiISAlaRMGt5gOxExFpFH4mExERUUuh0QW3jo4OAKCwsFDFkRARUaXKz+TKz2giIiIiTaWt6gCUSSqVok2bNsjJyQEAGBgYQCKRqDgqIqKWSQiBwsJC5OTkoE2bNpBKpaoOiYiIiEipNLrgBgArKysAkBfdRESkWm3atJF/NhMRERFpMo0vuCUSCaytrWFhYYHS0lJVh0NE1KLp6OjwyDYRERG1GBpfcFeSSqX8J4+IiIiIiIiajEYPmkZERERERESkKiy4iYiIiIiIiJSABTcRERERERGREqj9NdxCCABAfn6+iiMhIiIiIiKilqCy/qysR2ui9gX377//DgCwsbFRcSRERERERETUkvz+++8wMTGp8XG1L7hNTU0BAHfv3q01UVXp06cPLly4oOowlIo5qrf8/HzY2Njg3r17MDY2VnU4SqPJr2El5qje2Bc1B3PUPOyfmkHT8wM0P8fm1Bfz8vJga2srr0drovYFt5aW7DJ0ExMTle/06kil0mYZV2NijprB2NhYo3NsCa8hc9QM7IvqjzlqLvZP9abp+QEtI0egefXFynq0xsebKI4WKzg4WNUhKB1zJHXQEl5D5kjqoCW8hsyR1JWmv66anh/QMnJUNxLxV1d5N3P5+fkwMTFBXl5es/mWg0idsA8RNQ/si0TNF/snUfPQnPpiXWNR+yPcenp6CAsLg56enqpDIVJL7ENEzQP7IlHzxf5J1Dw0p75Y11jU/gg3ERERERERUXOk9ke4iYiIiIiIiJojFtxERERERERESsCCm4iIiIiIiEgJWHATERERERERKQELbiINEBERgT59+sDIyAgWFhYYPXo00tPTFdYpKipCcHAwzMzM0Lp1a4wdOxYPHjyQP56SkoIJEybAxsYG+vr6cHZ2xqZNmxTa2LdvH7y9vWFubg5jY2N4eHjgxx9/bJIcidRBU/XFs2fPYsCAATAzM4O+vj66du2KDRs2NEmOROqoqfrm886dOwdtbW306tVLWWkRqZ2m6osnT56ERCKpcsvOzm6SPJ/HgptIA5w6dQrBwcH46aefEB8fj9LSUrz66qt4+vSpfJ358+fju+++w969e3Hq1Cn89ttveP311+WPX7p0CRYWFvjqq69w7do1rFix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mory8nI4OjoqLC8uLoaZmZnS4yciIlJnLLiJiIg0WFpaGjp16oQ7d+5g5MiRmD17NlatWgVTU1OcPXsWgYGBKCkpqbHgLigogFQqxaVLlyCVShUea926dVOkQEREpLZYcBMREWmo48ePIzU1FfPnz8elS5dQUVGBdevWQUtLNoTLnj17FNbX1dVFeXm5wjI3NzeUl5cjJycHAwcObLLYiYiINAELbiIiIg1QXFyM7OxslJeX48GDBzh8+DAiIiIwcuRI+Pv74+rVqygtLcXmzZvh5+eHc+fOYevWrQpt2NnZoaCgAMeOHYOrqysMDAzg6OiISZMmwd/fH+vWrYObmxsePnyIY8eOwcXFBSNGjFBRxkRERM0fRyknIiLSAIcPH4a1tTXs7Ozg6+uLEydOICoqCgcOHIBUKoWrqyvWr1+PNWvWoEePHtixYwciIiIU2vD09MSsWbMwfvx4mJub46OPPgIAREdHw9/fHwsXLoSTkxNGjx6NCxcuwNbWVhWpEhERqQ2OUk5ERERERESkBDzCTURERERERKQELLiJiIiIiIiIlIAFNxEREREREZESsOAmIiIiIiIiUgIW3ERERERERERKwIKbiIiIiIiISAlYcBMREREREREpAQtuIiIiIiIiIiVgwU1ERERERESkBCy4iYiIiIiIiJSABTcRERERERGRErDgJiIiIiIiIlKC/w/IroEOb6X8cgAAAABJRU5ErkJggg==\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Create a window of 7 and find mean\n",
        "df.rolling(window=7).mean().plot(figsize=(12,5))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 482
        },
        "id": "-Gc0eqjWt0Qv",
        "outputId": "07b06d31-c76b-4696-c4c1-12129f085982"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<Axes: xlabel='Date'>"
            ]
          },
          "metadata": {},
          "execution_count": 39
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1200x500 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Create a window of 14 and find mean\n",
        "df.rolling(window=14).mean().plot(figsize=(12,5))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 482
        },
        "id": "K9fjpLpouP8u",
        "outputId": "ecacd732-8199-410a-88db-f1bd2f7ca825"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<Axes: xlabel='Date'>"
            ]
          },
          "metadata": {},
          "execution_count": 40
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1200x500 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# compare original trend with smoothened trends for Estimated quantity demand per transaction\n",
        "df['Estimated  quantity demand per transaction'].plot(figsize=(12,5))\n",
        "df['Estimated  quantity demand per transaction'].rolling(window=7).mean().plot()\n",
        "df['Estimated  quantity demand per transaction'].rolling(window=14).mean().plot()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 482
        },
        "id": "oBZmuEueuX3M",
        "outputId": "dc3e9e90-e995-4a4b-84e6-bd2ada17ee1b"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<Axes: xlabel='Date'>"
            ]
          },
          "metadata": {},
          "execution_count": 41
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1200x500 with 1 Axes>"
            ],
            "image/png": "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/PMN7vHWW29pyJAh6tChg6Kjo9WvXz99+OGHPukjYAW+GosbNmzQddddp3bt2snhcCgtLU3PPfecT/oIWJWvxmd9GzduVGhoqHr27Nlc3QIsx1djce3atbLZbGc8jh496pN+1keiDVjUunXrNGnSJG3evFkff/yxqqurNXToUJ06dcrb5tFHH9W7776rlStXat26dfr+++918803e5/ftm2bOnbsqGXLlmnPnj364x//qKeeekovvPCCt82nn36qIUOG6F//+pe2bdumAQMGaPTo0dq+fbtP+wsEKl+NxVatWmny5Mn69NNPtW/fPk2bNk3Tpk3T3/72N5/2F7ASX41Pj5KSEo0bN06DBg3ySf8Aq/D1WDxw4IAKCwu9j44dO/qknw0YAILCsWPHDEnGunXrDMMwjJKSEiMsLMxYuXKlt82+ffsMSUZeXt5Z7zNx4kRjwIAB53yvK664wpg9e7Y5gQNBxpdj8aabbjLuvvtucwIHWoDmHp+33XabMW3aNGPmzJlGZmam6fEDwaK5xuInn3xiSDJ++OGHZov9fDGjDQSJ0tJSSVJsbKwk97/6VVdXa/Dgwd42aWlpSk5OVl5e3jnv47lHY2pra3Xy5MlztgFaMl+Nxe3bt2vTpk264YYbTIocCH7NOT4XL16s//znP5o5c2YzRA4El+b+rOzZs6cSEhI0ZMgQbdy40eToz0+oX94VgKlqa2s1ZcoUXXfddbryyislSUePHlV4eLjatm3boG1cXNxZ96ls2rRJr7/+ut5///2zvtczzzyjsrIy3XrrrabFDwQLX4zFzp076/jx46qpqdGsWbN03333md4PIBg15/g8ePCgsrKytH79eoWG8vUaOJfmHIsJCQl66aWXdM0116iyslIvv/yybrzxRm3ZskVXXXVVs/WpMfw/ARAEJk2apN27d2vDhg1Nvsfu3bs1ZswYzZw5U0OHDm20zYoVKzR79mytWrXKP3tdgADni7G4fv16lZWVafPmzcrKytJll12mO+6442LCBlqE5hqfLpdLd955p2bPnq3u3bubFS4QtJrzszI1NVWpqane3/v376+vv/5azz33nF555ZWLivtCkWgDFjd58mS99957+vTTT9W5c2fv9fj4eFVVVamkpKTBvw4WFRUpPj6+wT327t2rQYMG6f7779e0adMafZ/XXntN9913n1auXNlgWQ8AN1+NxZSUFElSRkaGioqKNGvWLBJt4Gc05/g8efKktm7dqu3bt2vy5MmS3DN2hmEoNDRUH330kQYOHNi8HQQswleflfX16dPnopL6pmKPNmBRhmFo8uTJevvtt7VmzRrvl2+Pq6++WmFhYcrNzfVeO3DggA4fPqx+/fp5r+3Zs0cDBgzQ+PHjlZ2d3eh7vfrqq7rnnnv06quvauTIkc3TIcCifDkWT1dbW6vKykpzOgIEIV+Mz+joaO3atUs7duzwPh588EGlpqZqx44d6tu3b/N2ErAAf35W7tixQwkJCeZ05AIwow1Y1KRJk7RixQqtWrVKbdq08e5fiYmJkcPhUExMjO69915NnTpVsbGxio6O1sMPP6x+/frp2muvleRedjNw4EANGzZMU6dO9d7DbrerQ4cOktzLxcePH6/nn39effv29bbxvAfQ0vlqLP7lL39RcnKy0tLSJLmP3nvmmWf0yCOP+KHXgDX4YnyGhIR495l6dOzYUZGRkWdcB1oqX31WLliwQCkpKUpPT1dFRYVefvllrVmzRh999JHvO+3XmucAmkxSo4/Fixd72/z444/GxIkTjUsuucSIiooybrrpJqOwsND7/MyZMxu9R5cuXbxtbrjhhkbbjB8/3nedBQKYr8biwoULjfT0dCMqKsqIjo42evXqZfz1r381XC6XD3sLWIuvxufpON4LaMhXY3Hu3LlGt27djMjISCM2Nta48cYbjTVr1viwp3VshmEYpmfvAAAAAAC0UOzRBgAAAADARCTaAAAAAACYiEQbAAAAAAATkWgDAAAAAGAiEm0AAAAAAExEog0AAAAAgIlItAEAAAAAMBGJNgAAAAAAJiLRBgDAgiZMmCCbzSabzaawsDDFxcVpyJAh+sc//qHa2trzvs+SJUvUtm3b5gsUAIAWiEQbAACLGj58uAoLC1VQUKAPPvhAAwYM0B/+8AeNGjVKNTU1/g4PAIAWi0QbAACLioiIUHx8vDp16qSrrrpKTz/9tFatWqUPPvhAS5YskSTNnz9fGRkZatWqlZKSkjRx4kSVlZVJktauXat77rlHpaWl3tnxWbNmSZIqKyv1+OOPq1OnTmrVqpX69u2rtWvX+qejAABYDIk2AABBZODAgcrMzNRbb70lSQoJCdHChQu1Z88eLV26VGvWrNGTTz4pSerfv78WLFig6OhoFRYWqrCwUI8//rgkafLkycrLy9Nrr72mnTt36je/+Y2GDx+ugwcP+q1vAABYhc0wDMPfQQAAgAszYcIElZSU6J133jnjudtvv107d+7U3r17z3juzTff1IMPPqgTJ05Icu/RnjJlikpKSrxtDh8+rEsvvVSHDx9WYmKi9/rgwYPVp08f/fnPfza9PwAABJNQfwcAAADMZRiGbDabJOnf//63cnJytH//fjmdTtXU1KiiokLl5eWKiopq9PW7du2Sy+VS9+7dG1yvrKxUu3btmj1+AACsjkQbAIAgs2/fPqWkpKigoECjRo3SQw89pOzsbMXGxmrDhg269957VVVVddZEu6ysTHa7Xdu2bZPdbm/wXOvWrX3RBQAALI1EGwCAILJmzRrt2rVLjz76qLZt26ba2lo9++yzCglxl2V54403GrQPDw+Xy+VqcK1Xr15yuVw6duyYrr/+ep/FDgBAsCDRBgDAoiorK3X06FG5XC4VFRVp9erVysnJ0ahRozRu3Djt3r1b1dXVWrRokUaPHq2NGzfqpZdeanCPrl27qqysTLm5ucrMzFRUVJS6d++uu+66S+PGjdOzzz6rXr166fjx48rNzVWPHj00cuRIP/UYAABroOo4AAAWtXr1aiUkJKhr164aPny4PvnkEy1cuFCrVq2S3W5XZmam5s+fr7lz5+rKK6/U8uXLlZOT0+Ae/fv314MPPqjbbrtNHTp00Lx58yRJixcv1rhx4/TYY48pNTVVY8eO1eeff67k5GR/dBUAAEuh6jgAAAAAACZiRhsAAAAAABORaAMAAAAAYCISbQAAAAAATESiDQAAAACAiUi0AQAAAAAwEYk2AAAAAAAmItEGAAAAAMBEJNoAAAAAAJiIRBsAAAAAABORaAMAAAAAYCISbQAAAAAATESiDQAAAACAif4/wqDmFYsC3N4AAAAASUVORK5CYII=\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# compare original trend with smoothened trends for Estimated quantity demand per transaction\n",
        "df['Inflation Rate'].plot(figsize=(12,5))\n",
        "df['Inflation Rate'].rolling(window=7).mean().plot()\n",
        "df['Inflation Rate'].rolling(window=14).mean().plot()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 485
        },
        "id": "6GikBUsmgg0_",
        "outputId": "7195f5da-e00e-4c69-d91d-00edafa0d071"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<Axes: xlabel='Date'>"
            ]
          },
          "metadata": {},
          "execution_count": 42
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1200x500 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 455
        },
        "id": "ezQmQOQcd-r0",
        "outputId": "3e6080ae-8543-4419-96b3-98071e16db9e"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "            Estimated  quantity demand per transaction  Inflation Rate\n",
              "Date                                                                  \n",
              "2021-01-31                                        97.0            -9.6\n",
              "2021-02-07                                        95.0            -2.9\n",
              "2021-02-14                                        96.0            -2.9\n",
              "2021-02-21                                        93.0            -2.9\n",
              "2021-02-28                                        92.0            -2.9\n",
              "...                                                ...             ...\n",
              "2025-02-02                                       100.0            -2.4\n",
              "2025-02-09                                       100.0            -2.4\n",
              "2025-02-16                                       102.0            -2.4\n",
              "2025-02-23                                       102.0            -2.4\n",
              "2025-03-02                                       102.0            -5.4\n",
              "\n",
              "[214 rows x 2 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-672f051b-00ee-428e-99fd-13235e13c272\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Estimated  quantity demand per transaction</th>\n",
              "      <th>Inflation Rate</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Date</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>2021-01-31</th>\n",
              "      <td>97.0</td>\n",
              "      <td>-9.6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2021-02-07</th>\n",
              "      <td>95.0</td>\n",
              "      <td>-2.9</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2021-02-14</th>\n",
              "      <td>96.0</td>\n",
              "      <td>-2.9</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2021-02-21</th>\n",
              "      <td>93.0</td>\n",
              "      <td>-2.9</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2021-02-28</th>\n",
              "      <td>92.0</td>\n",
              "      <td>-2.9</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2025-02-02</th>\n",
              "      <td>100.0</td>\n",
              "      <td>-2.4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2025-02-09</th>\n",
              "      <td>100.0</td>\n",
              "      <td>-2.4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2025-02-16</th>\n",
              "      <td>102.0</td>\n",
              "      <td>-2.4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2025-02-23</th>\n",
              "      <td>102.0</td>\n",
              "      <td>-2.4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2025-03-02</th>\n",
              "      <td>102.0</td>\n",
              "      <td>-5.4</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>214 rows × 2 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-672f051b-00ee-428e-99fd-13235e13c272')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-672f051b-00ee-428e-99fd-13235e13c272 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-672f051b-00ee-428e-99fd-13235e13c272');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "    <div id=\"df-db9015c5-117f-434f-b8ba-0905ff67aa46\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-db9015c5-117f-434f-b8ba-0905ff67aa46')\"\n",
              "                title=\"Suggest charts\"\n",
              "                style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "      <script>\n",
              "        async function quickchart(key) {\n",
              "          const quickchartButtonEl =\n",
              "            document.querySelector('#' + key + ' button');\n",
              "          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "          quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "          try {\n",
              "            const charts = await google.colab.kernel.invokeFunction(\n",
              "                'suggestCharts', [key], {});\n",
              "          } catch (error) {\n",
              "            console.error('Error during call to suggestCharts:', error);\n",
              "          }\n",
              "          quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "        }\n",
              "        (() => {\n",
              "          let quickchartButtonEl =\n",
              "            document.querySelector('#df-db9015c5-117f-434f-b8ba-0905ff67aa46 button');\n",
              "          quickchartButtonEl.style.display =\n",
              "            google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "        })();\n",
              "      </script>\n",
              "    </div>\n",
              "\n",
              "  <div id=\"id_69ced111-afe3-4535-80d4-25af9b63d69b\">\n",
              "    <style>\n",
              "      .colab-df-generate {\n",
              "        background-color: #E8F0FE;\n",
              "        border: none;\n",
              "        border-radius: 50%;\n",
              "        cursor: pointer;\n",
              "        display: none;\n",
              "        fill: #1967D2;\n",
              "        height: 32px;\n",
              "        padding: 0 0 0 0;\n",
              "        width: 32px;\n",
              "      }\n",
              "\n",
              "      .colab-df-generate:hover {\n",
              "        background-color: #E2EBFA;\n",
              "        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "        fill: #174EA6;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate {\n",
              "        background-color: #3B4455;\n",
              "        fill: #D2E3FC;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate:hover {\n",
              "        background-color: #434B5C;\n",
              "        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "        fill: #FFFFFF;\n",
              "      }\n",
              "    </style>\n",
              "    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n",
              "            title=\"Generate code using this dataframe.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "    <script>\n",
              "      (() => {\n",
              "      const buttonEl =\n",
              "        document.querySelector('#id_69ced111-afe3-4535-80d4-25af9b63d69b button.colab-df-generate');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      buttonEl.onclick = () => {\n",
              "        google.colab.notebook.generateWithVariable('df');\n",
              "      }\n",
              "      })();\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "df",
              "summary": "{\n  \"name\": \"df\",\n  \"rows\": 214,\n  \"fields\": [\n    {\n      \"column\": \"Date\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2021-01-31 00:00:00\",\n        \"max\": \"2025-03-02 00:00:00\",\n        \"num_unique_values\": 214,\n        \"samples\": [\n          \"2021-04-04 00:00:00\",\n          \"2024-11-10 00:00:00\",\n          \"2022-05-08 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Estimated  quantity demand per transaction\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 6.04322069259198,\n        \"min\": 80.6875,\n        \"max\": 114.0,\n        \"num_unique_values\": 32,\n        \"samples\": [\n          114.0,\n          106.0,\n          92.5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Inflation Rate\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 18.485442125524195,\n        \"min\": -26.0,\n        \"max\": 46.8,\n        \"num_unique_values\": 48,\n        \"samples\": [\n          -14.2,\n          2.5,\n          -9.9\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 43
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from statsmodels.tsa.seasonal import seasonal_decompose"
      ],
      "metadata": {
        "id": "p49v2L-eukz6"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# seasonal decomposition using a multiplicative model with a period of 52\n",
        "result = seasonal_decompose(df['Estimated  quantity demand per transaction'], model='multiplicative', period=52)\n",
        "result.plot();"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 487
        },
        "id": "Z1oaZm7OSBQ3",
        "outputId": "9b86852a-f648-47be-f77c-47f5cb8018a9"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 4 Axes>"
            ],
            "image/png": "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tX27du1iSqWS7dixg507d449+uijzNfXlxUWFppcl5mZyTiOYz/88INT98Mnn3zCZDIZ27x5s8k1arW61fa98sorzNfXl3399dfszJkz7M4772xxPPvKlSvs5MmTYuoSob+tTWHSE/qAMcZ+/vlnBoCdP3/equ/dFX2wadMm9s0337CMjAyWkZHB3nvvPebl5cX+/e9/d7gPuosOHNkHjHVMB53ZD82x5iQkYz1LC47sA8a6x5iwceNGtnfvXpaZmcnOnj3Lnn76aSaRSNjPP//c4T7oqA4YI2OtywFg9rF9+3bxmtraWvbEE0+wXr16MXd3d3b33XezgoIC8fXVq1ebvUfzFbI115jj7bffZn369GEKhYKNHz+e/fHHHy2uWbFiBYuIiGgzJ01X98PkyZPNXjN37txW26fX69nzzz/PgoODmVKpZLfccgu7cOGCyTVz5841e+9ff/3VZfqAMcZmz55tkuOoPXRWH7z11lts2LBhzN3dnXl7e7PRo0ezd955p0399iQdOLIPGOuYDjqzH5pjraHSk7TgyD5grHuMCevWrWPR0dFMpVIxPz8/dtNNN7FffvnFLn3QUR0wxhhn6AyCIAiCIAjCCaHToARBEARBEE4MGWsEQRAEQRBODBlrBEEQBEEQTgwZawRBEARBEE4MGWsEQRAEQRBODBlrBEEQBEEQTgwZawRBEARBEE4MGWsEQRAEQRBODBlrBEEQBEEQTgwZawRBEARBEE4MGWsEQRAEQRBODBlrBEEQBEEQTsz/AzqkYfafphkjAAAAAElFTkSuQmCC\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# seasonal decomposition using a additive model with a period of 52\n",
        "result = seasonal_decompose(df['Estimated  quantity demand per transaction'], model='additive', period=52)\n",
        "result.plot();"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 487
        },
        "id": "L8Rj4_rYxl05",
        "outputId": "2df880e8-bf1c-4a38-cc79-9f49e32878e4"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 4 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from statsmodels.tsa.stattools import grangercausalitytests"
      ],
      "metadata": {
        "id": "d8VLHW5qT142"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#import hpfilter\n",
        "from statsmodels.tsa.filters.hp_filter import hpfilter"
      ],
      "metadata": {
        "id": "C1OL1xaz3zjz"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "Estimated_quantity_demand_per_transaction_cycle, Estimated_quantity_demand_per_transaction_trend = hpfilter(df['Estimated  quantity demand per transaction'], lamb=1200)"
      ],
      "metadata": {
        "id": "jhlOfUCs3-ZQ"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Visualise cyclic plot\n",
        "Estimated_quantity_demand_per_transaction_cycle.plot()"
      ],
      "metadata": {
        "id": "ABvI0aSW42be",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 466
        },
        "outputId": "a160f9bf-a90a-4df1-df42-9540414beb54"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<Axes: xlabel='Date'>"
            ]
          },
          "metadata": {},
          "execution_count": 50
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Visulise trend\n",
        "Estimated_quantity_demand_per_transaction_trend.plot(figsize=(10,5))"
      ],
      "metadata": {
        "id": "3zHGiaAy45W_",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 482
        },
        "outputId": "799a3f44-40bc-47de-c87f-377004ab33ff"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<Axes: xlabel='Date'>"
            ]
          },
          "metadata": {},
          "execution_count": 51
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x500 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "Inflation_Rate_cycle, Inflation_Rate_trend = hpfilter(df['Inflation Rate'], lamb=1200)"
      ],
      "metadata": {
        "id": "VRGn5F_7SM2u"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "Inflation_Rate_cycle.plot()"
      ],
      "metadata": {
        "id": "0WhWXU1aSusa",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 466
        },
        "outputId": "27208da2-cd64-4ac6-c3e1-8f6e94c0360d"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<Axes: xlabel='Date'>"
            ]
          },
          "metadata": {},
          "execution_count": 53
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "Inflation_Rate_trend.plot()"
      ],
      "metadata": {
        "id": "uaZtqJWwSxTi",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 466
        },
        "outputId": "4faef705-ab5f-48d7-bf88-74c4a69f391b"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<Axes: xlabel='Date'>"
            ]
          },
          "metadata": {},
          "execution_count": 54
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from statsmodels.tsa.stattools import adfuller\n",
        "from statsmodels.tsa.statespace.tools import diff"
      ],
      "metadata": {
        "id": "MtQsfODfVb1N"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Perform ADF test on the original data to check for stationarity\n",
        "adf_result = adfuller(df['Estimated  quantity demand per transaction'])\n",
        "print('ADF Statistic:', adf_result[0])\n",
        "print('p-value:', adf_result[1])\n",
        "print('Critical Values:')\n",
        "for key, value in adf_result[4].items():\n",
        "    print(f'   {key}: {value}')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "CXZ_WLzHVkAG",
        "outputId": "c1d932ce-135b-42b6-de41-850645b9484f"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "ADF Statistic: -2.4993917456979813\n",
            "p-value: 0.11562238975140188\n",
            "Critical Values:\n",
            "   1%: -3.46172743446274\n",
            "   5%: -2.8753374677799957\n",
            "   10%: -2.574124089081557\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Perform differencing on the data\n",
        "df['Estimated  quantity demand per transaction_diff'] = df['Estimated  quantity demand per transaction'].diff()"
      ],
      "metadata": {
        "id": "C0AKXiyTVrKI"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Drop null values\n",
        "df.dropna(inplace=True)"
      ],
      "metadata": {
        "id": "yGDX9AXX4uDB"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Perform ADF test on the differenced data to check for stationarity\n",
        "adf_result_diff = adfuller(df['Estimated  quantity demand per transaction_diff'])\n",
        "print(\"ADF Statistic:\", adf_result_diff[0])\n",
        "print(\"p-value:\", adf_result_diff[1])"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "OEuf54FVcLTv",
        "outputId": "f8835c4a-c819-434b-8197-7188c1aeb798"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "ADF Statistic: -12.863823135826872\n",
            "p-value: 5.0443613088334216e-24\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.head()"
      ],
      "metadata": {
        "id": "wjwJ_kvWcOd2",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 238
        },
        "outputId": "aec7b167-13dc-4e47-9417-eef010dbc2e2"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "            Estimated  quantity demand per transaction  Inflation Rate  \\\n",
              "Date                                                                     \n",
              "2021-02-07                                        95.0            -2.9   \n",
              "2021-02-14                                        96.0            -2.9   \n",
              "2021-02-21                                        93.0            -2.9   \n",
              "2021-02-28                                        92.0            -2.9   \n",
              "2021-03-07                                        91.0             3.4   \n",
              "\n",
              "            Estimated  quantity demand per transaction_diff  \n",
              "Date                                                         \n",
              "2021-02-07                                             -2.0  \n",
              "2021-02-14                                              1.0  \n",
              "2021-02-21                                             -3.0  \n",
              "2021-02-28                                             -1.0  \n",
              "2021-03-07                                             -1.0  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-bcf2da34-4b32-4a43-b3c5-3a4b173dd1c1\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Estimated  quantity demand per transaction</th>\n",
              "      <th>Inflation Rate</th>\n",
              "      <th>Estimated  quantity demand per transaction_diff</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Date</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>2021-02-07</th>\n",
              "      <td>95.0</td>\n",
              "      <td>-2.9</td>\n",
              "      <td>-2.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2021-02-14</th>\n",
              "      <td>96.0</td>\n",
              "      <td>-2.9</td>\n",
              "      <td>1.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2021-02-21</th>\n",
              "      <td>93.0</td>\n",
              "      <td>-2.9</td>\n",
              "      <td>-3.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2021-02-28</th>\n",
              "      <td>92.0</td>\n",
              "      <td>-2.9</td>\n",
              "      <td>-1.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2021-03-07</th>\n",
              "      <td>91.0</td>\n",
              "      <td>3.4</td>\n",
              "      <td>-1.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-bcf2da34-4b32-4a43-b3c5-3a4b173dd1c1')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-bcf2da34-4b32-4a43-b3c5-3a4b173dd1c1 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-bcf2da34-4b32-4a43-b3c5-3a4b173dd1c1');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "    <div id=\"df-8b9fdfb4-9914-4036-9992-4e8a52528aa2\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-8b9fdfb4-9914-4036-9992-4e8a52528aa2')\"\n",
              "                title=\"Suggest charts\"\n",
              "                style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "      <script>\n",
              "        async function quickchart(key) {\n",
              "          const quickchartButtonEl =\n",
              "            document.querySelector('#' + key + ' button');\n",
              "          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "          quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "          try {\n",
              "            const charts = await google.colab.kernel.invokeFunction(\n",
              "                'suggestCharts', [key], {});\n",
              "          } catch (error) {\n",
              "            console.error('Error during call to suggestCharts:', error);\n",
              "          }\n",
              "          quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "        }\n",
              "        (() => {\n",
              "          let quickchartButtonEl =\n",
              "            document.querySelector('#df-8b9fdfb4-9914-4036-9992-4e8a52528aa2 button');\n",
              "          quickchartButtonEl.style.display =\n",
              "            google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "        })();\n",
              "      </script>\n",
              "    </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "df",
              "summary": "{\n  \"name\": \"df\",\n  \"rows\": 213,\n  \"fields\": [\n    {\n      \"column\": \"Date\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2021-02-07 00:00:00\",\n        \"max\": \"2025-03-02 00:00:00\",\n        \"num_unique_values\": 213,\n        \"samples\": [\n          \"2021-04-11 00:00:00\",\n          \"2024-11-17 00:00:00\",\n          \"2022-05-15 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Estimated  quantity demand per transaction\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 6.057033202146895,\n        \"min\": 80.6875,\n        \"max\": 114.0,\n        \"num_unique_values\": 32,\n        \"samples\": [\n          114.0,\n          106.0,\n          92.5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Inflation Rate\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 18.491685076124277,\n        \"min\": -26.0,\n        \"max\": 46.8,\n        \"num_unique_values\": 47,\n        \"samples\": [\n          -23.4,\n          2.5,\n          -14.2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Estimated  quantity demand per transaction_diff\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2.7103295956430835,\n        \"min\": -10.3125,\n        \"max\": 12.0,\n        \"num_unique_values\": 23,\n        \"samples\": [\n          7.0,\n          0.0,\n          -2.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 60
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Perform ADF test on exogenous data to check for stationarity\n",
        "adf_result = adfuller(df['Inflation Rate'])\n",
        "print('ADF Statistic:', adf_result[0])\n",
        "print('p-value:', adf_result[1])\n",
        "print('Critical Values:')\n",
        "for key, value in adf_result[4].items():\n",
        "    print(f'   {key}: {value}')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "lAB3ymvld6MM",
        "outputId": "a4ae2588-cc36-4913-da2e-4c2cd6bf5946"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "ADF Statistic: -1.3968638456049323\n",
            "p-value: 0.5837787034086129\n",
            "Critical Values:\n",
            "   1%: -3.4621857592784546\n",
            "   5%: -2.875537986778846\n",
            "   10%: -2.574231080806213\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df['Inflation Rate'] = pd.to_numeric(df['Inflation Rate'], errors='coerce')"
      ],
      "metadata": {
        "id": "cydM8U_1tHiP"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Perform differencing on the data\n",
        "df['Inflation Rate_diff'] = df['Inflation Rate'].diff()"
      ],
      "metadata": {
        "id": "uz8ipV0WeDc7"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# drop null values\n",
        "df.dropna(inplace=True)"
      ],
      "metadata": {
        "id": "CuxdH7qzil-4"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Perform ADF test on the differenced data to check for stationarity\n",
        "adf_result = adfuller(df['Inflation Rate_diff'])\n",
        "print(\"ADF Statistic:\", adf_result[0])\n",
        "print(\"p-value:\", adf_result[1])"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "wzU5uRDjiocg",
        "outputId": "f846b93a-9c14-45ee-efe3-3399e3fe4888"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "ADF Statistic: -4.87327723564543\n",
            "p-value: 3.930099045003391e-05\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.head()"
      ],
      "metadata": {
        "id": "bFwONzOiixQK",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 238
        },
        "outputId": "e3374803-213f-4c18-e44a-21e6e73f079e"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "            Estimated  quantity demand per transaction  Inflation Rate  \\\n",
              "Date                                                                     \n",
              "2021-02-14                                        96.0            -2.9   \n",
              "2021-02-21                                        93.0            -2.9   \n",
              "2021-02-28                                        92.0            -2.9   \n",
              "2021-03-07                                        91.0             3.4   \n",
              "2021-03-14                                        92.0             3.4   \n",
              "\n",
              "            Estimated  quantity demand per transaction_diff  \\\n",
              "Date                                                          \n",
              "2021-02-14                                              1.0   \n",
              "2021-02-21                                             -3.0   \n",
              "2021-02-28                                             -1.0   \n",
              "2021-03-07                                             -1.0   \n",
              "2021-03-14                                              1.0   \n",
              "\n",
              "            Inflation Rate_diff  \n",
              "Date                             \n",
              "2021-02-14                  0.0  \n",
              "2021-02-21                  0.0  \n",
              "2021-02-28                  0.0  \n",
              "2021-03-07                  6.3  \n",
              "2021-03-14                  0.0  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-0cb47118-9658-4301-932b-982a92752ee6\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Estimated  quantity demand per transaction</th>\n",
              "      <th>Inflation Rate</th>\n",
              "      <th>Estimated  quantity demand per transaction_diff</th>\n",
              "      <th>Inflation Rate_diff</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Date</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>2021-02-14</th>\n",
              "      <td>96.0</td>\n",
              "      <td>-2.9</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2021-02-21</th>\n",
              "      <td>93.0</td>\n",
              "      <td>-2.9</td>\n",
              "      <td>-3.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2021-02-28</th>\n",
              "      <td>92.0</td>\n",
              "      <td>-2.9</td>\n",
              "      <td>-1.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2021-03-07</th>\n",
              "      <td>91.0</td>\n",
              "      <td>3.4</td>\n",
              "      <td>-1.0</td>\n",
              "      <td>6.3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2021-03-14</th>\n",
              "      <td>92.0</td>\n",
              "      <td>3.4</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0cb47118-9658-4301-932b-982a92752ee6')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-0cb47118-9658-4301-932b-982a92752ee6 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-0cb47118-9658-4301-932b-982a92752ee6');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "    <div id=\"df-9b128a50-7f62-4860-bee5-1d74f0f79717\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-9b128a50-7f62-4860-bee5-1d74f0f79717')\"\n",
              "                title=\"Suggest charts\"\n",
              "                style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "      <script>\n",
              "        async function quickchart(key) {\n",
              "          const quickchartButtonEl =\n",
              "            document.querySelector('#' + key + ' button');\n",
              "          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "          quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "          try {\n",
              "            const charts = await google.colab.kernel.invokeFunction(\n",
              "                'suggestCharts', [key], {});\n",
              "          } catch (error) {\n",
              "            console.error('Error during call to suggestCharts:', error);\n",
              "          }\n",
              "          quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "        }\n",
              "        (() => {\n",
              "          let quickchartButtonEl =\n",
              "            document.querySelector('#df-9b128a50-7f62-4860-bee5-1d74f0f79717 button');\n",
              "          quickchartButtonEl.style.display =\n",
              "            google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "        })();\n",
              "      </script>\n",
              "    </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "df",
              "summary": "{\n  \"name\": \"df\",\n  \"rows\": 212,\n  \"fields\": [\n    {\n      \"column\": \"Date\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2021-02-14 00:00:00\",\n        \"max\": \"2025-03-02 00:00:00\",\n        \"num_unique_values\": 212,\n        \"samples\": [\n          \"2021-09-12 00:00:00\",\n          \"2024-06-09 00:00:00\",\n          \"2023-10-22 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Estimated  quantity demand per transaction\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 6.067731194964823,\n        \"min\": 80.6875,\n        \"max\": 114.0,\n        \"num_unique_values\": 32,\n        \"samples\": [\n          114.0,\n          106.0,\n          92.5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Inflation Rate\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 18.52141836870561,\n        \"min\": -26.0,\n        \"max\": 46.8,\n        \"num_unique_values\": 47,\n        \"samples\": [\n          -23.4,\n          2.5,\n          -14.2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Estimated  quantity demand per transaction_diff\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2.7131540034730333,\n        \"min\": -10.3125,\n        \"max\": 12.0,\n        \"num_unique_values\": 23,\n        \"samples\": [\n          7.0,\n          -4.0,\n          1.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Inflation Rate_diff\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2.641413271425758,\n        \"min\": -14.0,\n        \"max\": 11.299999999999999,\n        \"num_unique_values\": 48,\n        \"samples\": [\n          -2.6000000000000014,\n          -5.7,\n          -9.2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 66
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "Rwla4tM0NBtF"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# GRANGER CAUSALITY TEST"
      ],
      "metadata": {
        "id": "pOfHgEjYNBeQ"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Test if 'inflation rate' Granger causes 'estimated demand quantity fuel demand'\n",
        "result = grangercausalitytests(df[['Estimated  quantity demand per transaction_diff', 'Inflation Rate_diff']], maxlag=3, verbose=True)"
      ],
      "metadata": {
        "id": "UvNawkAWvHE7",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "4238ca3c-5cc7-408f-b3c4-0b448c8d4571"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "Granger Causality\n",
            "number of lags (no zero) 1\n",
            "ssr based F test:         F=0.1295  , p=0.7193  , df_denom=208, df_num=1\n",
            "ssr based chi2 test:   chi2=0.1314  , p=0.7170  , df=1\n",
            "likelihood ratio test: chi2=0.1314  , p=0.7170  , df=1\n",
            "parameter F test:         F=0.1295  , p=0.7193  , df_denom=208, df_num=1\n",
            "\n",
            "Granger Causality\n",
            "number of lags (no zero) 2\n",
            "ssr based F test:         F=7.7027  , p=0.0006  , df_denom=205, df_num=2\n",
            "ssr based chi2 test:   chi2=15.7811 , p=0.0004  , df=2\n",
            "likelihood ratio test: chi2=15.2163 , p=0.0005  , df=2\n",
            "parameter F test:         F=7.7027  , p=0.0006  , df_denom=205, df_num=2\n",
            "\n",
            "Granger Causality\n",
            "number of lags (no zero) 3\n",
            "ssr based F test:         F=5.9106  , p=0.0007  , df_denom=202, df_num=3\n",
            "ssr based chi2 test:   chi2=18.3464 , p=0.0004  , df=3\n",
            "likelihood ratio test: chi2=17.5854 , p=0.0005  , df=3\n",
            "parameter F test:         F=5.9106  , p=0.0007  , df_denom=202, df_num=3\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "lag_plot(df['Estimated  quantity demand per transaction_diff'])"
      ],
      "metadata": {
        "id": "uTI_fbp9Xuva",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 466
        },
        "outputId": "a5417151-7446-41de-c949-ff37a36f5a5c"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<Axes: xlabel='y(t)', ylabel='y(t + 1)'>"
            ]
          },
          "metadata": {},
          "execution_count": 69
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "lag_plot(df['Inflation Rate_diff'])"
      ],
      "metadata": {
        "id": "_2LMYs75kwdu",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 466
        },
        "outputId": "0e7b9bde-f450-45a2-a5e9-c2ff25decd14"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<Axes: xlabel='y(t)', ylabel='y(t + 1)'>"
            ]
          },
          "metadata": {},
          "execution_count": 70
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# acf plot\n",
        "plot_acf(df['Estimated  quantity demand per transaction'], lags=30);"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 452
        },
        "id": "52yT8BAwbZoD",
        "outputId": "f5501299-7f9d-4737-c010-7fbd3a7ba291"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# pacf plot\n",
        "plot_pacf(df['Estimated  quantity demand per transaction'], lags=30);"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 452
        },
        "id": "37SiI-c6baQD",
        "outputId": "a2eadef6-2e39-414a-8812-569f34431403"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "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8mq1rUBDwD04QAPi7u4ui8XicAZj3759ev/996tcx/keO3l5eVVan+T4LTw/P79agerPzp+dmDp1qu644w6Hx5133qk+ffo4nMFo3769fv75Zx05csQ+7fvvv9dXX31VpW0KCQlRdHS0li1b5jDvhx9+0CeffKKBAwdKktzc3DRkyBCtXbtWW7duLdPu89s/cOBAbdmyRRkZGfZ5hYWFeuWVVxQeHl6r+53uvPNOlZSUaO7cuWXmnTt3rtLXq7zXafPmzQ7tlKr32p/fNwsWLHCYPn/+fEkq02MPaGw4gwM0IIMGDdL8+fOVmJiou+++W4cPH9bChQvVoUMH7dixo0p1eHl5KSoqSqtWrdIVV1yh1q1bq0uXLuXef9K/f395eHjo1ltv1X333aeCggK9+uqrCgwMVHZ2drXbv3z5ckVHRyssLKzc+bfddpsefPBBbd++XVdffbXuuecezZ8/XwkJCRo3bpwOHz6sRYsW6corr5TNZqvSNj333HMaMGCA4uLiNG7cOHs3cV9fX4excp5++ml98skn6tOnjyZMmKDOnTsrOztbq1ev1pdffik/Pz9Nnz5db731lgYMGKCHHnpIrVu31rJly5SVlaV333233EH8qqpPnz667777lJKSoszMTPXv31/NmzfX7t27tXr1ar3wwgu64447yl32lltu0Xvvvafbb79dgwYNUlZWlhYtWqSoqCgVFBRUaT9dqHv37ho9erReeeUV5eXlqU+fPtqyZYuWLVumIUOG6MYbb6zxtgINgkv7cAFNyPlu4uV1U/6z119/3bj88ssNq9VqdOrUyViyZEm53bslGZMmTSq3jq+//tqIiYkxPDw8HLoNl1fPhx9+aHTr1s3w9PQ0wsPDjXnz5hmLFy82JBlZWVn2chfrJr5t2zZDkvHEE09UWGbfvn2GJOPhhx+2T3vzzTeNyMhIw8PDw4iOjjbWr19fppt4ZdtkGIbx6aefGr179za8vLwMHx8f49ZbbzV++umnMuv/9ddfjVGjRhkBAQGG1Wo1IiMjjUmTJjl0wd67d69xxx13GH5+foanp6fRs2dPY926dQ71nO8mvnr16jLrGD16tNGiRYsK98Err7xixMTEGF5eXsYll1xidO3a1Zg6dapx6NAhe5kL93Vpaanx9NNPG+3atTOsVqtx1VVXGevWravWfirvtT979qwxe/Zs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\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# acf plot\n",
        "plot_acf(df['Estimated  quantity demand per transaction_diff'], lags=30);"
      ],
      "metadata": {
        "id": "_6TIy3lDX8cG",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 452
        },
        "outputId": "6120914b-42a3-40ee-9957-69fd87e2c7b5"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# pacf plot\n",
        "plot_pacf(df['Estimated  quantity demand per transaction_diff'], lags=30);"
      ],
      "metadata": {
        "id": "M6D2kv72k81N",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 452
        },
        "outputId": "936b8ace-ec92-4885-9af1-06fa26a5fe0d"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df"
      ],
      "metadata": {
        "id": "iCxlDAZcpLaD",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 455
        },
        "outputId": "b9fd9c70-3528-47be-fb4b-b814149c64c3"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "            Estimated  quantity demand per transaction  Inflation Rate  \\\n",
              "Date                                                                     \n",
              "2021-02-14                                        96.0            -2.9   \n",
              "2021-02-21                                        93.0            -2.9   \n",
              "2021-02-28                                        92.0            -2.9   \n",
              "2021-03-07                                        91.0             3.4   \n",
              "2021-03-14                                        92.0             3.4   \n",
              "...                                                ...             ...   \n",
              "2025-02-02                                       100.0            -2.4   \n",
              "2025-02-09                                       100.0            -2.4   \n",
              "2025-02-16                                       102.0            -2.4   \n",
              "2025-02-23                                       102.0            -2.4   \n",
              "2025-03-02                                       102.0            -5.4   \n",
              "\n",
              "            Estimated  quantity demand per transaction_diff  \\\n",
              "Date                                                          \n",
              "2021-02-14                                              1.0   \n",
              "2021-02-21                                             -3.0   \n",
              "2021-02-28                                             -1.0   \n",
              "2021-03-07                                             -1.0   \n",
              "2021-03-14                                              1.0   \n",
              "...                                                     ...   \n",
              "2025-02-02                                             -1.0   \n",
              "2025-02-09                                              0.0   \n",
              "2025-02-16                                              2.0   \n",
              "2025-02-23                                              0.0   \n",
              "2025-03-02                                              0.0   \n",
              "\n",
              "            Inflation Rate_diff  \n",
              "Date                             \n",
              "2021-02-14                  0.0  \n",
              "2021-02-21                  0.0  \n",
              "2021-02-28                  0.0  \n",
              "2021-03-07                  6.3  \n",
              "2021-03-14                  0.0  \n",
              "...                         ...  \n",
              "2025-02-02                  0.4  \n",
              "2025-02-09                  0.0  \n",
              "2025-02-16                  0.0  \n",
              "2025-02-23                  0.0  \n",
              "2025-03-02                 -3.0  \n",
              "\n",
              "[212 rows x 4 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-4cdcb822-999e-4cd6-93a2-a35d3ce88b61\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Estimated  quantity demand per transaction</th>\n",
              "      <th>Inflation Rate</th>\n",
              "      <th>Estimated  quantity demand per transaction_diff</th>\n",
              "      <th>Inflation Rate_diff</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Date</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>2021-02-14</th>\n",
              "      <td>96.0</td>\n",
              "      <td>-2.9</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2021-02-21</th>\n",
              "      <td>93.0</td>\n",
              "      <td>-2.9</td>\n",
              "      <td>-3.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2021-02-28</th>\n",
              "      <td>92.0</td>\n",
              "      <td>-2.9</td>\n",
              "      <td>-1.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2021-03-07</th>\n",
              "      <td>91.0</td>\n",
              "      <td>3.4</td>\n",
              "      <td>-1.0</td>\n",
              "      <td>6.3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2021-03-14</th>\n",
              "      <td>92.0</td>\n",
              "      <td>3.4</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2025-02-02</th>\n",
              "      <td>100.0</td>\n",
              "      <td>-2.4</td>\n",
              "      <td>-1.0</td>\n",
              "      <td>0.4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2025-02-09</th>\n",
              "      <td>100.0</td>\n",
              "      <td>-2.4</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2025-02-16</th>\n",
              "      <td>102.0</td>\n",
              "      <td>-2.4</td>\n",
              "      <td>2.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2025-02-23</th>\n",
              "      <td>102.0</td>\n",
              "      <td>-2.4</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2025-03-02</th>\n",
              "      <td>102.0</td>\n",
              "      <td>-5.4</td>\n",
              "      <td>0.0</td>\n",
              "      <td>-3.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>212 rows × 4 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4cdcb822-999e-4cd6-93a2-a35d3ce88b61')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-4cdcb822-999e-4cd6-93a2-a35d3ce88b61 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-4cdcb822-999e-4cd6-93a2-a35d3ce88b61');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "    <div id=\"df-fc9b5578-d6df-41b2-9ab3-c5dbf0a3b865\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-fc9b5578-d6df-41b2-9ab3-c5dbf0a3b865')\"\n",
              "                title=\"Suggest charts\"\n",
              "                style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "      <script>\n",
              "        async function quickchart(key) {\n",
              "          const quickchartButtonEl =\n",
              "            document.querySelector('#' + key + ' button');\n",
              "          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "          quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "          try {\n",
              "            const charts = await google.colab.kernel.invokeFunction(\n",
              "                'suggestCharts', [key], {});\n",
              "          } catch (error) {\n",
              "            console.error('Error during call to suggestCharts:', error);\n",
              "          }\n",
              "          quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "        }\n",
              "        (() => {\n",
              "          let quickchartButtonEl =\n",
              "            document.querySelector('#df-fc9b5578-d6df-41b2-9ab3-c5dbf0a3b865 button');\n",
              "          quickchartButtonEl.style.display =\n",
              "            google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "        })();\n",
              "      </script>\n",
              "    </div>\n",
              "\n",
              "  <div id=\"id_64ad0f97-9d61-44fa-ba65-ca09d536ead3\">\n",
              "    <style>\n",
              "      .colab-df-generate {\n",
              "        background-color: #E8F0FE;\n",
              "        border: none;\n",
              "        border-radius: 50%;\n",
              "        cursor: pointer;\n",
              "        display: none;\n",
              "        fill: #1967D2;\n",
              "        height: 32px;\n",
              "        padding: 0 0 0 0;\n",
              "        width: 32px;\n",
              "      }\n",
              "\n",
              "      .colab-df-generate:hover {\n",
              "        background-color: #E2EBFA;\n",
              "        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "        fill: #174EA6;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate {\n",
              "        background-color: #3B4455;\n",
              "        fill: #D2E3FC;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate:hover {\n",
              "        background-color: #434B5C;\n",
              "        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "        fill: #FFFFFF;\n",
              "      }\n",
              "    </style>\n",
              "    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n",
              "            title=\"Generate code using this dataframe.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "    <script>\n",
              "      (() => {\n",
              "      const buttonEl =\n",
              "        document.querySelector('#id_64ad0f97-9d61-44fa-ba65-ca09d536ead3 button.colab-df-generate');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      buttonEl.onclick = () => {\n",
              "        google.colab.notebook.generateWithVariable('df');\n",
              "      }\n",
              "      })();\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "df",
              "summary": "{\n  \"name\": \"df\",\n  \"rows\": 212,\n  \"fields\": [\n    {\n      \"column\": \"Date\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2021-02-14 00:00:00\",\n        \"max\": \"2025-03-02 00:00:00\",\n        \"num_unique_values\": 212,\n        \"samples\": [\n          \"2021-09-12 00:00:00\",\n          \"2024-06-09 00:00:00\",\n          \"2023-10-22 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Estimated  quantity demand per transaction\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 6.067731194964823,\n        \"min\": 80.6875,\n        \"max\": 114.0,\n        \"num_unique_values\": 32,\n        \"samples\": [\n          114.0,\n          106.0,\n          92.5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Inflation Rate\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 18.52141836870561,\n        \"min\": -26.0,\n        \"max\": 46.8,\n        \"num_unique_values\": 47,\n        \"samples\": [\n          -23.4,\n          2.5,\n          -14.2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Estimated  quantity demand per transaction_diff\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2.7131540034730333,\n        \"min\": -10.3125,\n        \"max\": 12.0,\n        \"num_unique_values\": 23,\n        \"samples\": [\n          7.0,\n          -4.0,\n          1.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Inflation Rate_diff\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2.641413271425758,\n        \"min\": -14.0,\n        \"max\": 11.299999999999999,\n        \"num_unique_values\": 48,\n        \"samples\": [\n          -2.6000000000000014,\n          -5.7,\n          -9.2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 75
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "len(df)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "eR0ghnIqHNt7",
        "outputId": "da68a4c2-c690-496e-d4b7-f9c9506a7c20"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "212"
            ]
          },
          "metadata": {},
          "execution_count": 76
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.info()"
      ],
      "metadata": {
        "id": "2wbCcvVN8VYl",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "ca3ebd74-e9aa-485f-e43a-69199eec92cc"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "DatetimeIndex: 212 entries, 2021-02-14 to 2025-03-02\n",
            "Data columns (total 4 columns):\n",
            " #   Column                                           Non-Null Count  Dtype  \n",
            "---  ------                                           --------------  -----  \n",
            " 0   Estimated  quantity demand per transaction       212 non-null    float64\n",
            " 1   Inflation Rate                                   212 non-null    float64\n",
            " 2   Estimated  quantity demand per transaction_diff  212 non-null    float64\n",
            " 3   Inflation Rate_diff                              212 non-null    float64\n",
            "dtypes: float64(4)\n",
            "memory usage: 8.3 KB\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "YygUwDnBfmHY"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#Smoothing Techniques"
      ],
      "metadata": {
        "id": "9DIvzKNTfmAl"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "QdTqtc_qfl5q"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Check length of dataframe\n",
        "len(df)"
      ],
      "metadata": {
        "id": "9pyRvFlQfl0O",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "45127f32-a068-49c6-d20a-947dcdef5441"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "212"
            ]
          },
          "metadata": {},
          "execution_count": 79
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Split Data into train and test\n",
        "train = df['Estimated  quantity demand per transaction_diff'].iloc[:170]\n",
        "test = df['Estimated  quantity demand per transaction_diff'].iloc[169:]"
      ],
      "metadata": {
        "id": "dRpb2B0LLJIJ"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "7i-YJekCbiGp"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "jcg_BrTIbh5N"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Select best non-seasonal ARIMA model automatically\n",
        "stepwise_fit_ns = auto_arima(df['Estimated  quantity demand per transaction_diff'], start_p=0, start_q=0, max_p=6, max_q=3, seasonal=False, trace=True)"
      ],
      "metadata": {
        "id": "msAWCTJ0_BRI",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "4958808e-0b92-4261-d2a1-10709f3260d2"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Performing stepwise search to minimize aic\n",
            " ARIMA(0,0,0)(0,0,0)[0]             : AIC=1025.859, Time=0.15 sec\n",
            " ARIMA(1,0,0)(0,0,0)[0]             : AIC=1024.281, Time=0.11 sec\n",
            " ARIMA(0,0,1)(0,0,0)[0]             : AIC=1022.651, Time=0.49 sec\n",
            " ARIMA(1,0,1)(0,0,0)[0]             : AIC=1020.226, Time=0.55 sec\n",
            " ARIMA(2,0,1)(0,0,0)[0]             : AIC=1021.775, Time=2.44 sec\n",
            " ARIMA(1,0,2)(0,0,0)[0]             : AIC=1021.512, Time=1.19 sec\n",
            " ARIMA(0,0,2)(0,0,0)[0]             : AIC=1019.808, Time=0.71 sec\n",
            " ARIMA(0,0,3)(0,0,0)[0]             : AIC=1021.570, Time=0.15 sec\n",
            " ARIMA(1,0,3)(0,0,0)[0]             : AIC=1023.512, Time=1.27 sec\n",
            " ARIMA(0,0,2)(0,0,0)[0] intercept   : AIC=1021.734, Time=0.25 sec\n",
            "\n",
            "Best model:  ARIMA(0,0,2)(0,0,0)[0]          \n",
            "Total fit time: 7.384 seconds\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Detailed summary of the best ARIMA model selected by auto_arima() for ARIMA\n",
        "stepwise_fit_ns.summary()"
      ],
      "metadata": {
        "id": "Bwd2Zs7yRxl6",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 430
        },
        "outputId": "a337d9b0-a4b8-4197-e677-7686972fc2d6"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<class 'statsmodels.iolib.summary.Summary'>\n",
              "\"\"\"\n",
              "                               SARIMAX Results                                \n",
              "==============================================================================\n",
              "Dep. Variable:                      y   No. Observations:                  212\n",
              "Model:               SARIMAX(0, 0, 2)   Log Likelihood                -506.904\n",
              "Date:                Thu, 15 May 2025   AIC                           1019.808\n",
              "Time:                        10:16:41   BIC                           1029.878\n",
              "Sample:                    02-14-2021   HQIC                          1023.878\n",
              "                         - 03-02-2025                                         \n",
              "Covariance Type:                  opg                                         \n",
              "==============================================================================\n",
              "                 coef    std err          z      P>|z|      [0.025      0.975]\n",
              "------------------------------------------------------------------------------\n",
              "ma.L1         -0.1462      0.045     -3.217      0.001      -0.235      -0.057\n",
              "ma.L2         -0.1611      0.055     -2.927      0.003      -0.269      -0.053\n",
              "sigma2         6.9855      0.406     17.223      0.000       6.191       7.780\n",
              "===================================================================================\n",
              "Ljung-Box (L1) (Q):                   0.01   Jarque-Bera (JB):               119.71\n",
              "Prob(Q):                              0.92   Prob(JB):                         0.00\n",
              "Heteroskedasticity (H):               0.23   Skew:                             0.41\n",
              "Prob(H) (two-sided):                  0.00   Kurtosis:                         6.59\n",
              "===================================================================================\n",
              "\n",
              "Warnings:\n",
              "[1] Covariance matrix calculated using the outer product of gradients (complex-step).\n",
              "\"\"\""
            ],
            "text/html": [
              "<table class=\"simpletable\">\n",
              "<caption>SARIMAX Results</caption>\n",
              "<tr>\n",
              "  <th>Dep. Variable:</th>           <td>y</td>        <th>  No. Observations:  </th>    <td>212</td>  \n",
              "</tr>\n",
              "<tr>\n",
              "  <th>Model:</th>           <td>SARIMAX(0, 0, 2)</td> <th>  Log Likelihood     </th> <td>-506.904</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th>Date:</th>            <td>Thu, 15 May 2025</td> <th>  AIC                </th> <td>1019.808</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th>Time:</th>                <td>10:16:41</td>     <th>  BIC                </th> <td>1029.878</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th>Sample:</th>             <td>02-14-2021</td>    <th>  HQIC               </th> <td>1023.878</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th></th>                   <td>- 03-02-2025</td>   <th>                     </th>     <td> </td>   \n",
              "</tr>\n",
              "<tr>\n",
              "  <th>Covariance Type:</th>        <td>opg</td>       <th>                     </th>     <td> </td>   \n",
              "</tr>\n",
              "</table>\n",
              "<table class=\"simpletable\">\n",
              "<tr>\n",
              "     <td></td>       <th>coef</th>     <th>std err</th>      <th>z</th>      <th>P>|z|</th>  <th>[0.025</th>    <th>0.975]</th>  \n",
              "</tr>\n",
              "<tr>\n",
              "  <th>ma.L1</th>  <td>   -0.1462</td> <td>    0.045</td> <td>   -3.217</td> <td> 0.001</td> <td>   -0.235</td> <td>   -0.057</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th>ma.L2</th>  <td>   -0.1611</td> <td>    0.055</td> <td>   -2.927</td> <td> 0.003</td> <td>   -0.269</td> <td>   -0.053</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th>sigma2</th> <td>    6.9855</td> <td>    0.406</td> <td>   17.223</td> <td> 0.000</td> <td>    6.191</td> <td>    7.780</td>\n",
              "</tr>\n",
              "</table>\n",
              "<table class=\"simpletable\">\n",
              "<tr>\n",
              "  <th>Ljung-Box (L1) (Q):</th>     <td>0.01</td> <th>  Jarque-Bera (JB):  </th> <td>119.71</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th>Prob(Q):</th>                <td>0.92</td> <th>  Prob(JB):          </th>  <td>0.00</td> \n",
              "</tr>\n",
              "<tr>\n",
              "  <th>Heteroskedasticity (H):</th> <td>0.23</td> <th>  Skew:              </th>  <td>0.41</td> \n",
              "</tr>\n",
              "<tr>\n",
              "  <th>Prob(H) (two-sided):</th>    <td>0.00</td> <th>  Kurtosis:          </th>  <td>6.59</td> \n",
              "</tr>\n",
              "</table><br/><br/>Warnings:<br/>[1] Covariance matrix calculated using the outer product of gradients (complex-step)."
            ],
            "text/latex": "\\begin{center}\n\\begin{tabular}{lclc}\n\\toprule\n\\textbf{Dep. Variable:}          &        y         & \\textbf{  No. Observations:  } &    212      \\\\\n\\textbf{Model:}                  & SARIMAX(0, 0, 2) & \\textbf{  Log Likelihood     } &  -506.904   \\\\\n\\textbf{Date:}                   & Thu, 15 May 2025 & \\textbf{  AIC                } &  1019.808   \\\\\n\\textbf{Time:}                   &     10:16:41     & \\textbf{  BIC                } &  1029.878   \\\\\n\\textbf{Sample:}                 &    02-14-2021    & \\textbf{  HQIC               } &  1023.878   \\\\\n\\textbf{}                        &   - 03-02-2025   & \\textbf{                     } &             \\\\\n\\textbf{Covariance Type:}        &       opg        & \\textbf{                     } &             \\\\\n\\bottomrule\n\\end{tabular}\n\\begin{tabular}{lcccccc}\n                & \\textbf{coef} & \\textbf{std err} & \\textbf{z} & \\textbf{P$> |$z$|$} & \\textbf{[0.025} & \\textbf{0.975]}  \\\\\n\\midrule\n\\textbf{ma.L1}  &      -0.1462  &        0.045     &    -3.217  &         0.001        &       -0.235    &       -0.057     \\\\\n\\textbf{ma.L2}  &      -0.1611  &        0.055     &    -2.927  &         0.003        &       -0.269    &       -0.053     \\\\\n\\textbf{sigma2} &       6.9855  &        0.406     &    17.223  &         0.000        &        6.191    &        7.780     \\\\\n\\bottomrule\n\\end{tabular}\n\\begin{tabular}{lclc}\n\\textbf{Ljung-Box (L1) (Q):}     & 0.01 & \\textbf{  Jarque-Bera (JB):  } & 119.71  \\\\\n\\textbf{Prob(Q):}                & 0.92 & \\textbf{  Prob(JB):          } &  0.00   \\\\\n\\textbf{Heteroskedasticity (H):} & 0.23 & \\textbf{  Skew:              } &  0.41   \\\\\n\\textbf{Prob(H) (two-sided):}    & 0.00 & \\textbf{  Kurtosis:          } &  6.59   \\\\\n\\bottomrule\n\\end{tabular}\n%\\caption{SARIMAX Results}\n\\end{center}\n\nWarnings: \\newline\n [1] Covariance matrix calculated using the outer product of gradients (complex-step)."
          },
          "metadata": {},
          "execution_count": 82
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Fit the auto ARIMA(0,0,2) model to the differenced data\n",
        "arima_model = ARIMA(df['Estimated  quantity demand per transaction_diff'], order=(0,0,2))\n",
        "arima_model_fit = arima_model.fit()\n",
        "arima_model_fit.summary()"
      ],
      "metadata": {
        "id": "CiRJpcsUnA1X",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 556
        },
        "outputId": "f0d09788-c220-498b-c6be-9eeb73ecaebc"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.11/dist-packages/statsmodels/tsa/base/tsa_model.py:473: ValueWarning: No frequency information was provided, so inferred frequency W-SUN will be used.\n",
            "  self._init_dates(dates, freq)\n",
            "/usr/local/lib/python3.11/dist-packages/statsmodels/tsa/base/tsa_model.py:473: ValueWarning: No frequency information was provided, so inferred frequency W-SUN will be used.\n",
            "  self._init_dates(dates, freq)\n",
            "/usr/local/lib/python3.11/dist-packages/statsmodels/tsa/base/tsa_model.py:473: ValueWarning: No frequency information was provided, so inferred frequency W-SUN will be used.\n",
            "  self._init_dates(dates, freq)\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<class 'statsmodels.iolib.summary.Summary'>\n",
              "\"\"\"\n",
              "                                              SARIMAX Results                                              \n",
              "===========================================================================================================\n",
              "Dep. Variable:     Estimated  quantity demand per transaction_diff   No. Observations:                  212\n",
              "Model:                                              ARIMA(0, 0, 2)   Log Likelihood                -506.867\n",
              "Date:                                             Thu, 15 May 2025   AIC                           1021.734\n",
              "Time:                                                     10:16:42   BIC                           1035.160\n",
              "Sample:                                                 02-14-2021   HQIC                          1027.160\n",
              "                                                      - 03-02-2025                                         \n",
              "Covariance Type:                                               opg                                         \n",
              "==============================================================================\n",
              "                 coef    std err          z      P>|z|      [0.025      0.975]\n",
              "------------------------------------------------------------------------------\n",
              "const          0.0344      0.133      0.260      0.795      -0.226       0.294\n",
              "ma.L1         -0.1466      0.046     -3.217      0.001      -0.236      -0.057\n",
              "ma.L2         -0.1616      0.057     -2.817      0.005      -0.274      -0.049\n",
              "sigma2         6.9830      0.414     16.878      0.000       6.172       7.794\n",
              "===================================================================================\n",
              "Ljung-Box (L1) (Q):                   0.01   Jarque-Bera (JB):               119.73\n",
              "Prob(Q):                              0.93   Prob(JB):                         0.00\n",
              "Heteroskedasticity (H):               0.23   Skew:                             0.41\n",
              "Prob(H) (two-sided):                  0.00   Kurtosis:                         6.59\n",
              "===================================================================================\n",
              "\n",
              "Warnings:\n",
              "[1] Covariance matrix calculated using the outer product of gradients (complex-step).\n",
              "\"\"\""
            ],
            "text/html": [
              "<table class=\"simpletable\">\n",
              "<caption>SARIMAX Results</caption>\n",
              "<tr>\n",
              "  <th>Dep. Variable:</th>   <td>Estimated  quantity demand per transaction_diff</td> <th>  No. Observations:  </th>    <td>212</td>  \n",
              "</tr>\n",
              "<tr>\n",
              "  <th>Model:</th>                           <td>ARIMA(0, 0, 2)</td>                  <th>  Log Likelihood     </th> <td>-506.867</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th>Date:</th>                           <td>Thu, 15 May 2025</td>                 <th>  AIC                </th> <td>1021.734</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th>Time:</th>                               <td>10:16:42</td>                     <th>  BIC                </th> <td>1035.160</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th>Sample:</th>                            <td>02-14-2021</td>                    <th>  HQIC               </th> <td>1027.160</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th></th>                                  <td>- 03-02-2025</td>                   <th>                     </th>     <td> </td>   \n",
              "</tr>\n",
              "<tr>\n",
              "  <th>Covariance Type:</th>                       <td>opg</td>                       <th>                     </th>     <td> </td>   \n",
              "</tr>\n",
              "</table>\n",
              "<table class=\"simpletable\">\n",
              "<tr>\n",
              "     <td></td>       <th>coef</th>     <th>std err</th>      <th>z</th>      <th>P>|z|</th>  <th>[0.025</th>    <th>0.975]</th>  \n",
              "</tr>\n",
              "<tr>\n",
              "  <th>const</th>  <td>    0.0344</td> <td>    0.133</td> <td>    0.260</td> <td> 0.795</td> <td>   -0.226</td> <td>    0.294</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th>ma.L1</th>  <td>   -0.1466</td> <td>    0.046</td> <td>   -3.217</td> <td> 0.001</td> <td>   -0.236</td> <td>   -0.057</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th>ma.L2</th>  <td>   -0.1616</td> <td>    0.057</td> <td>   -2.817</td> <td> 0.005</td> <td>   -0.274</td> <td>   -0.049</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th>sigma2</th> <td>    6.9830</td> <td>    0.414</td> <td>   16.878</td> <td> 0.000</td> <td>    6.172</td> <td>    7.794</td>\n",
              "</tr>\n",
              "</table>\n",
              "<table class=\"simpletable\">\n",
              "<tr>\n",
              "  <th>Ljung-Box (L1) (Q):</th>     <td>0.01</td> <th>  Jarque-Bera (JB):  </th> <td>119.73</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th>Prob(Q):</th>                <td>0.93</td> <th>  Prob(JB):          </th>  <td>0.00</td> \n",
              "</tr>\n",
              "<tr>\n",
              "  <th>Heteroskedasticity (H):</th> <td>0.23</td> <th>  Skew:              </th>  <td>0.41</td> \n",
              "</tr>\n",
              "<tr>\n",
              "  <th>Prob(H) (two-sided):</th>    <td>0.00</td> <th>  Kurtosis:          </th>  <td>6.59</td> \n",
              "</tr>\n",
              "</table><br/><br/>Warnings:<br/>[1] Covariance matrix calculated using the outer product of gradients (complex-step)."
            ],
            "text/latex": "\\begin{center}\n\\begin{tabular}{lclc}\n\\toprule\n\\textbf{Dep. Variable:}          & Estimated  quantity demand per transaction\\_diff & \\textbf{  No. Observations:  } &    212      \\\\\n\\textbf{Model:}                  &                  ARIMA(0, 0, 2)                  & \\textbf{  Log Likelihood     } &  -506.867   \\\\\n\\textbf{Date:}                   &                 Thu, 15 May 2025                 & \\textbf{  AIC                } &  1021.734   \\\\\n\\textbf{Time:}                   &                     10:16:42                     & \\textbf{  BIC                } &  1035.160   \\\\\n\\textbf{Sample:}                 &                    02-14-2021                    & \\textbf{  HQIC               } &  1027.160   \\\\\n\\textbf{}                        &                   - 03-02-2025                   & \\textbf{                     } &             \\\\\n\\textbf{Covariance Type:}        &                       opg                        & \\textbf{                     } &             \\\\\n\\bottomrule\n\\end{tabular}\n\\begin{tabular}{lcccccc}\n                & \\textbf{coef} & \\textbf{std err} & \\textbf{z} & \\textbf{P$> |$z$|$} & \\textbf{[0.025} & \\textbf{0.975]}  \\\\\n\\midrule\n\\textbf{const}  &       0.0344  &        0.133     &     0.260  &         0.795        &       -0.226    &        0.294     \\\\\n\\textbf{ma.L1}  &      -0.1466  &        0.046     &    -3.217  &         0.001        &       -0.236    &       -0.057     \\\\\n\\textbf{ma.L2}  &      -0.1616  &        0.057     &    -2.817  &         0.005        &       -0.274    &       -0.049     \\\\\n\\textbf{sigma2} &       6.9830  &        0.414     &    16.878  &         0.000        &        6.172    &        7.794     \\\\\n\\bottomrule\n\\end{tabular}\n\\begin{tabular}{lclc}\n\\textbf{Ljung-Box (L1) (Q):}     & 0.01 & \\textbf{  Jarque-Bera (JB):  } & 119.73  \\\\\n\\textbf{Prob(Q):}                & 0.93 & \\textbf{  Prob(JB):          } &  0.00   \\\\\n\\textbf{Heteroskedasticity (H):} & 0.23 & \\textbf{  Skew:              } &  0.41   \\\\\n\\textbf{Prob(H) (two-sided):}    & 0.00 & \\textbf{  Kurtosis:          } &  6.59   \\\\\n\\bottomrule\n\\end{tabular}\n%\\caption{SARIMAX Results}\n\\end{center}\n\nWarnings: \\newline\n [1] Covariance matrix calculated using the outer product of gradients (complex-step)."
          },
          "metadata": {},
          "execution_count": 83
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "len(df['Estimated  quantity demand per transaction_diff'])"
      ],
      "metadata": {
        "id": "u41D2yHzbeiB",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "3affeb9e-5cac-45b9-8afc-a8938780ad63"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "212"
            ]
          },
          "metadata": {},
          "execution_count": 84
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Fit the ARIMA(0,0,2) on the tain data and displays the summary\n",
        "model = ARIMA(train, order=(0,0,2))\n",
        "arima_results = model.fit()\n",
        "print(arima_results.summary())"
      ],
      "metadata": {
        "id": "QDiLU8FWTDp9",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "1db164e8-889a-413b-aad1-681625acc90f"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.11/dist-packages/statsmodels/tsa/base/tsa_model.py:473: ValueWarning: No frequency information was provided, so inferred frequency W-SUN will be used.\n",
            "  self._init_dates(dates, freq)\n",
            "/usr/local/lib/python3.11/dist-packages/statsmodels/tsa/base/tsa_model.py:473: ValueWarning: No frequency information was provided, so inferred frequency W-SUN will be used.\n",
            "  self._init_dates(dates, freq)\n",
            "/usr/local/lib/python3.11/dist-packages/statsmodels/tsa/base/tsa_model.py:473: ValueWarning: No frequency information was provided, so inferred frequency W-SUN will be used.\n",
            "  self._init_dates(dates, freq)\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                                              SARIMAX Results                                              \n",
            "===========================================================================================================\n",
            "Dep. Variable:     Estimated  quantity demand per transaction_diff   No. Observations:                  170\n",
            "Model:                                              ARIMA(0, 0, 2)   Log Likelihood                -417.512\n",
            "Date:                                             Thu, 15 May 2025   AIC                            843.023\n",
            "Time:                                                     10:16:42   BIC                            855.566\n",
            "Sample:                                                 02-14-2021   HQIC                           848.113\n",
            "                                                      - 05-12-2024                                         \n",
            "Covariance Type:                                               opg                                         \n",
            "==============================================================================\n",
            "                 coef    std err          z      P>|z|      [0.025      0.975]\n",
            "------------------------------------------------------------------------------\n",
            "const          0.0118      0.157      0.075      0.940      -0.295       0.319\n",
            "ma.L1         -0.1387      0.052     -2.644      0.008      -0.241      -0.036\n",
            "ma.L2         -0.1810      0.067     -2.696      0.007      -0.313      -0.049\n",
            "sigma2         7.9522      0.545     14.592      0.000       6.884       9.020\n",
            "===================================================================================\n",
            "Ljung-Box (L1) (Q):                   0.00   Jarque-Bera (JB):                81.15\n",
            "Prob(Q):                              0.96   Prob(JB):                         0.00\n",
            "Heteroskedasticity (H):               0.37   Skew:                             0.45\n",
            "Prob(H) (two-sided):                  0.00   Kurtosis:                         6.26\n",
            "===================================================================================\n",
            "\n",
            "Warnings:\n",
            "[1] Covariance matrix calculated using the outer product of gradients (complex-step).\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Define the start and end points for prediction based on the length of the training and test sets\n",
        "start = len(train)\n",
        "end =len(train) + len(test)-1\n",
        "\n",
        "# Use the fitted ARIMA model to make predictions for the test period and display\n",
        "test_predictions = arima_results.predict(start=start, end=end, typ = 'levels').rename('ARIMA Predictions')\n",
        "test_predictions"
      ],
      "metadata": {
        "id": "3E3BpJDHU9aM",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "outputId": "edc15141-8898-4484-b56c-f153479bb918"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "2024-05-19    0.156326\n",
              "2024-05-26    0.386450\n",
              "2024-06-02    0.011774\n",
              "2024-06-09    0.011774\n",
              "2024-06-16    0.011774\n",
              "2024-06-23    0.011774\n",
              "2024-06-30    0.011774\n",
              "2024-07-07    0.011774\n",
              "2024-07-14    0.011774\n",
              "2024-07-21    0.011774\n",
              "2024-07-28    0.011774\n",
              "2024-08-04    0.011774\n",
              "2024-08-11    0.011774\n",
              "2024-08-18    0.011774\n",
              "2024-08-25    0.011774\n",
              "2024-09-01    0.011774\n",
              "2024-09-08    0.011774\n",
              "2024-09-15    0.011774\n",
              "2024-09-22    0.011774\n",
              "2024-09-29    0.011774\n",
              "2024-10-06    0.011774\n",
              "2024-10-13    0.011774\n",
              "2024-10-20    0.011774\n",
              "2024-10-27    0.011774\n",
              "2024-11-03    0.011774\n",
              "2024-11-10    0.011774\n",
              "2024-11-17    0.011774\n",
              "2024-11-24    0.011774\n",
              "2024-12-01    0.011774\n",
              "2024-12-08    0.011774\n",
              "2024-12-15    0.011774\n",
              "2024-12-22    0.011774\n",
              "2024-12-29    0.011774\n",
              "2025-01-05    0.011774\n",
              "2025-01-12    0.011774\n",
              "2025-01-19    0.011774\n",
              "2025-01-26    0.011774\n",
              "2025-02-02    0.011774\n",
              "2025-02-09    0.011774\n",
              "2025-02-16    0.011774\n",
              "2025-02-23    0.011774\n",
              "2025-03-02    0.011774\n",
              "2025-03-09    0.011774\n",
              "Freq: W-SUN, Name: ARIMA Predictions, dtype: float64"
            ],
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>ARIMA Predictions</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>2024-05-19</th>\n",
              "      <td>0.156326</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2024-05-26</th>\n",
              "      <td>0.386450</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2024-06-02</th>\n",
              "      <td>0.011774</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2024-06-09</th>\n",
              "      <td>0.011774</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2024-06-16</th>\n",
              "      <td>0.011774</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2024-06-23</th>\n",
              "      <td>0.011774</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2024-06-30</th>\n",
              "      <td>0.011774</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2024-07-07</th>\n",
              "      <td>0.011774</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2024-07-14</th>\n",
              "      <td>0.011774</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2024-07-21</th>\n",
              "      <td>0.011774</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2024-07-28</th>\n",
              "      <td>0.011774</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2024-08-04</th>\n",
              "      <td>0.011774</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2024-08-11</th>\n",
              "      <td>0.011774</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2024-08-18</th>\n",
              "      <td>0.011774</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2024-08-25</th>\n",
              "      <td>0.011774</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2024-09-01</th>\n",
              "      <td>0.011774</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2024-09-08</th>\n",
              "      <td>0.011774</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2024-09-15</th>\n",
              "      <td>0.011774</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2024-09-22</th>\n",
              "      <td>0.011774</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2024-09-29</th>\n",
              "      <td>0.011774</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2024-10-06</th>\n",
              "      <td>0.011774</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2024-10-13</th>\n",
              "      <td>0.011774</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2024-10-20</th>\n",
              "      <td>0.011774</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2024-10-27</th>\n",
              "      <td>0.011774</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2024-11-03</th>\n",
              "      <td>0.011774</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2024-11-10</th>\n",
              "      <td>0.011774</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2024-11-17</th>\n",
              "      <td>0.011774</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2024-11-24</th>\n",
              "      <td>0.011774</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2024-12-01</th>\n",
              "      <td>0.011774</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2024-12-08</th>\n",
              "      <td>0.011774</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2024-12-15</th>\n",
              "      <td>0.011774</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2024-12-22</th>\n",
              "      <td>0.011774</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2024-12-29</th>\n",
              "      <td>0.011774</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2025-01-05</th>\n",
              "      <td>0.011774</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2025-01-12</th>\n",
              "      <td>0.011774</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2025-01-19</th>\n",
              "      <td>0.011774</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2025-01-26</th>\n",
              "      <td>0.011774</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2025-02-02</th>\n",
              "      <td>0.011774</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2025-02-09</th>\n",
              "      <td>0.011774</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2025-02-16</th>\n",
              "      <td>0.011774</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2025-02-23</th>\n",
              "      <td>0.011774</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2025-03-02</th>\n",
              "      <td>0.011774</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2025-03-09</th>\n",
              "      <td>0.011774</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div><br><label><b>dtype:</b> float64</label>"
            ]
          },
          "metadata": {},
          "execution_count": 86
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "8I-gdPJjrHg9"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Plot both the actual test data and the ARIMA model's predictions for comparison\n",
        "test.plot(legend=True, figsize=(10,5))\n",
        "test_predictions.plot(legend=True)"
      ],
      "metadata": {
        "id": "5M0_mCIOVwKu",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 498
        },
        "outputId": "aaef493b-ca3c-4b15-8394-1cb221770d27"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<Axes: xlabel='Date'>"
            ]
          },
          "metadata": {},
          "execution_count": 87
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x500 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.metrics import mean_absolute_error, mean_squared_error, mean_absolute_percentage_error"
      ],
      "metadata": {
        "id": "4ajI3yJnVwBO"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Calculate MAE\n",
        "mae = mean_absolute_error(test, test_predictions)\n",
        "\n",
        "# Calculate MSE\n",
        "mse = mean_squared_error(test, test_predictions)\n",
        "\n",
        "# Calculate RMSE\n",
        "rmse = np.sqrt(mse)\n",
        "\n",
        "# Calculate MAPE\n",
        "mape = mean_absolute_percentage_error(test, test_predictions)\n",
        "\n",
        "# Print the results\n",
        "print(f'MAE: {mae}')\n",
        "print(f'MSE: {mse}')\n",
        "print(f'RMSE: {rmse}')\n",
        "print(f'MPAE: {mape}')"
      ],
      "metadata": {
        "id": "iBionbHwVv3e",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "e3d8427e-b30e-43f4-f315-cc0fe1edd545"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "MAE: 1.3919138010173595\n",
            "MSE: 3.1607937381647546\n",
            "RMSE: 1.7778621257467506\n",
            "MPAE: 12331384036924.701\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "tTbyrrV8Vvr2"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "UfXlX2XpZDxu"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df.info()"
      ],
      "metadata": {
        "id": "5I_Ihz6gODr4",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "38fae852-836a-498a-8d4a-897ac19c8ad2"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "DatetimeIndex: 212 entries, 2021-02-14 to 2025-03-02\n",
            "Data columns (total 4 columns):\n",
            " #   Column                                           Non-Null Count  Dtype  \n",
            "---  ------                                           --------------  -----  \n",
            " 0   Estimated  quantity demand per transaction       212 non-null    float64\n",
            " 1   Inflation Rate                                   212 non-null    float64\n",
            " 2   Estimated  quantity demand per transaction_diff  212 non-null    float64\n",
            " 3   Inflation Rate_diff                              212 non-null    float64\n",
            "dtypes: float64(4)\n",
            "memory usage: 8.3 KB\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "lZCYzGOc4zpF"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "mh_GBSwZ4zbb"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# SEASONAL ARIMA"
      ],
      "metadata": {
        "id": "3rL0HvLCZEWm"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "from statsmodels.tsa.statespace.sarimax import SARIMAX"
      ],
      "metadata": {
        "id": "2n3AXFm9ZEyO"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "len(df)"
      ],
      "metadata": {
        "id": "SZ5dpXlhV_yt",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "27675d45-9ea9-40be-c919-e3cbb916774e"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "212"
            ]
          },
          "metadata": {},
          "execution_count": 93
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Split data for Sarimax\n",
        "train_2 = df.iloc[:170]\n",
        "test_2 = df.iloc[169:]"
      ],
      "metadata": {
        "id": "KWdLp1lc0qLe"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Automatically find the best seasonal ARIMA model for the differenced data using stepwise search\n",
        "stepwise_fit_s= auto_arima(df['Estimated  quantity demand per transaction_diff'], start_p=0, start_q=0, max_p=5, max_q=5, seasonal=True, trace=True, m=52)"
      ],
      "metadata": {
        "id": "YjUX1lPRcU_T",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "ec93deae-f51a-4424-ceea-1508fa82ea72"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Performing stepwise search to minimize aic\n",
            " ARIMA(0,0,0)(1,0,1)[52] intercept   : AIC=inf, Time=10.19 sec\n",
            " ARIMA(0,0,0)(0,0,0)[52] intercept   : AIC=1027.827, Time=0.14 sec\n",
            " ARIMA(1,0,0)(1,0,0)[52] intercept   : AIC=982.366, Time=4.87 sec\n",
            " ARIMA(0,0,1)(0,0,1)[52] intercept   : AIC=inf, Time=6.97 sec\n",
            " ARIMA(0,0,0)(0,0,0)[52]             : AIC=1025.859, Time=0.10 sec\n",
            " ARIMA(1,0,0)(0,0,0)[52] intercept   : AIC=1026.242, Time=0.17 sec\n",
            " ARIMA(1,0,0)(2,0,0)[52] intercept   : AIC=978.312, Time=7.50 sec\n",
            " ARIMA(1,0,0)(2,0,1)[52] intercept   : AIC=inf, Time=39.37 sec\n",
            " ARIMA(1,0,0)(1,0,1)[52] intercept   : AIC=inf, Time=7.97 sec\n",
            " ARIMA(0,0,0)(2,0,0)[52] intercept   : AIC=981.127, Time=22.77 sec\n",
            " ARIMA(2,0,0)(2,0,0)[52] intercept   : AIC=977.262, Time=18.90 sec\n",
            " ARIMA(2,0,0)(1,0,0)[52] intercept   : AIC=981.305, Time=1.82 sec\n",
            " ARIMA(2,0,0)(2,0,1)[52] intercept   : AIC=inf, Time=46.48 sec\n",
            " ARIMA(2,0,0)(1,0,1)[52] intercept   : AIC=inf, Time=5.88 sec\n",
            " ARIMA(3,0,0)(2,0,0)[52] intercept   : AIC=976.564, Time=13.51 sec\n",
            " ARIMA(3,0,0)(1,0,0)[52] intercept   : AIC=981.310, Time=3.13 sec\n",
            " ARIMA(3,0,0)(2,0,1)[52] intercept   : AIC=inf, Time=56.60 sec\n",
            " ARIMA(3,0,0)(1,0,1)[52] intercept   : AIC=inf, Time=6.85 sec\n",
            " ARIMA(4,0,0)(2,0,0)[52] intercept   : AIC=978.503, Time=14.28 sec\n",
            " ARIMA(3,0,1)(2,0,0)[52] intercept   : AIC=978.439, Time=19.76 sec\n",
            " ARIMA(2,0,1)(2,0,0)[52] intercept   : AIC=inf, Time=52.97 sec\n",
            " ARIMA(4,0,1)(2,0,0)[52] intercept   : AIC=inf, Time=68.31 sec\n",
            " ARIMA(3,0,0)(2,0,0)[52]             : AIC=974.737, Time=6.31 sec\n",
            " ARIMA(3,0,0)(1,0,0)[52]             : AIC=979.447, Time=2.68 sec\n",
            " ARIMA(3,0,0)(2,0,1)[52]             : AIC=inf, Time=48.77 sec\n",
            " ARIMA(3,0,0)(1,0,1)[52]             : AIC=inf, Time=6.25 sec\n",
            " ARIMA(2,0,0)(2,0,0)[52]             : AIC=975.396, Time=5.50 sec\n",
            " ARIMA(4,0,0)(2,0,0)[52]             : AIC=976.683, Time=9.99 sec\n",
            " ARIMA(3,0,1)(2,0,0)[52]             : AIC=976.627, Time=14.29 sec\n",
            " ARIMA(2,0,1)(2,0,0)[52]             : AIC=973.790, Time=17.20 sec\n",
            " ARIMA(2,0,1)(1,0,0)[52]             : AIC=977.917, Time=2.73 sec\n",
            " ARIMA(2,0,1)(2,0,1)[52]             : AIC=inf, Time=50.18 sec\n",
            " ARIMA(2,0,1)(1,0,1)[52]             : AIC=inf, Time=4.60 sec\n",
            " ARIMA(1,0,1)(2,0,0)[52]             : AIC=972.310, Time=11.13 sec\n",
            " ARIMA(1,0,1)(1,0,0)[52]             : AIC=976.468, Time=1.52 sec\n",
            " ARIMA(1,0,1)(2,0,1)[52]             : AIC=inf, Time=43.35 sec\n",
            " ARIMA(1,0,1)(1,0,1)[52]             : AIC=inf, Time=9.17 sec\n",
            " ARIMA(0,0,1)(2,0,0)[52]             : AIC=974.841, Time=3.56 sec\n",
            " ARIMA(1,0,0)(2,0,0)[52]             : AIC=976.412, Time=6.65 sec\n",
            " ARIMA(1,0,2)(2,0,0)[52]             : AIC=973.646, Time=19.09 sec\n",
            " ARIMA(0,0,0)(2,0,0)[52]             : AIC=979.203, Time=6.03 sec\n",
            " ARIMA(0,0,2)(2,0,0)[52]             : AIC=973.710, Time=4.64 sec\n",
            " ARIMA(2,0,2)(2,0,0)[52]             : AIC=975.784, Time=23.89 sec\n",
            " ARIMA(1,0,1)(2,0,0)[52] intercept   : AIC=inf, Time=43.56 sec\n",
            "\n",
            "Best model:  ARIMA(1,0,1)(2,0,0)[52]          \n",
            "Total fit time: 750.138 seconds\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Display the summary of the stepwise ARIMA model\n",
        "stepwise_fit_s.summary()"
      ],
      "metadata": {
        "id": "Yfjd2tSXdy-w",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 473
        },
        "outputId": "4b5463f0-5840-40af-a074-395ee2093e0a"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<class 'statsmodels.iolib.summary.Summary'>\n",
              "\"\"\"\n",
              "                                      SARIMAX Results                                      \n",
              "===========================================================================================\n",
              "Dep. Variable:                                   y   No. Observations:                  212\n",
              "Model:             SARIMAX(1, 0, 1)x(2, 0, [], 52)   Log Likelihood                -481.155\n",
              "Date:                             Thu, 15 May 2025   AIC                            972.310\n",
              "Time:                                     10:29:14   BIC                            989.093\n",
              "Sample:                                 02-14-2021   HQIC                           979.093\n",
              "                                      - 03-02-2025                                         \n",
              "Covariance Type:                               opg                                         \n",
              "==============================================================================\n",
              "                 coef    std err          z      P>|z|      [0.025      0.975]\n",
              "------------------------------------------------------------------------------\n",
              "ar.L1          0.6941      0.110      6.284      0.000       0.478       0.911\n",
              "ma.L1         -0.8598      0.093     -9.282      0.000      -1.041      -0.678\n",
              "ar.S.L52      -0.6202      0.062     -9.983      0.000      -0.742      -0.498\n",
              "ar.S.L104     -0.2452      0.075     -3.259      0.001      -0.393      -0.098\n",
              "sigma2         4.9535      0.369     13.420      0.000       4.230       5.677\n",
              "===================================================================================\n",
              "Ljung-Box (L1) (Q):                   0.15   Jarque-Bera (JB):                87.43\n",
              "Prob(Q):                              0.70   Prob(JB):                         0.00\n",
              "Heteroskedasticity (H):               0.30   Skew:                             0.37\n",
              "Prob(H) (two-sided):                  0.00   Kurtosis:                         6.06\n",
              "===================================================================================\n",
              "\n",
              "Warnings:\n",
              "[1] Covariance matrix calculated using the outer product of gradients (complex-step).\n",
              "\"\"\""
            ],
            "text/html": [
              "<table class=\"simpletable\">\n",
              "<caption>SARIMAX Results</caption>\n",
              "<tr>\n",
              "  <th>Dep. Variable:</th>                  <td>y</td>                <th>  No. Observations:  </th>    <td>212</td>  \n",
              "</tr>\n",
              "<tr>\n",
              "  <th>Model:</th>           <td>SARIMAX(1, 0, 1)x(2, 0, [], 52)</td> <th>  Log Likelihood     </th> <td>-481.155</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th>Date:</th>                   <td>Thu, 15 May 2025</td>         <th>  AIC                </th>  <td>972.310</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th>Time:</th>                       <td>10:29:14</td>             <th>  BIC                </th>  <td>989.093</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th>Sample:</th>                    <td>02-14-2021</td>            <th>  HQIC               </th>  <td>979.093</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th></th>                          <td>- 03-02-2025</td>           <th>                     </th>     <td> </td>   \n",
              "</tr>\n",
              "<tr>\n",
              "  <th>Covariance Type:</th>               <td>opg</td>               <th>                     </th>     <td> </td>   \n",
              "</tr>\n",
              "</table>\n",
              "<table class=\"simpletable\">\n",
              "<tr>\n",
              "      <td></td>         <th>coef</th>     <th>std err</th>      <th>z</th>      <th>P>|z|</th>  <th>[0.025</th>    <th>0.975]</th>  \n",
              "</tr>\n",
              "<tr>\n",
              "  <th>ar.L1</th>     <td>    0.6941</td> <td>    0.110</td> <td>    6.284</td> <td> 0.000</td> <td>    0.478</td> <td>    0.911</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th>ma.L1</th>     <td>   -0.8598</td> <td>    0.093</td> <td>   -9.282</td> <td> 0.000</td> <td>   -1.041</td> <td>   -0.678</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th>ar.S.L52</th>  <td>   -0.6202</td> <td>    0.062</td> <td>   -9.983</td> <td> 0.000</td> <td>   -0.742</td> <td>   -0.498</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th>ar.S.L104</th> <td>   -0.2452</td> <td>    0.075</td> <td>   -3.259</td> <td> 0.001</td> <td>   -0.393</td> <td>   -0.098</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th>sigma2</th>    <td>    4.9535</td> <td>    0.369</td> <td>   13.420</td> <td> 0.000</td> <td>    4.230</td> <td>    5.677</td>\n",
              "</tr>\n",
              "</table>\n",
              "<table class=\"simpletable\">\n",
              "<tr>\n",
              "  <th>Ljung-Box (L1) (Q):</th>     <td>0.15</td> <th>  Jarque-Bera (JB):  </th> <td>87.43</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th>Prob(Q):</th>                <td>0.70</td> <th>  Prob(JB):          </th> <td>0.00</td> \n",
              "</tr>\n",
              "<tr>\n",
              "  <th>Heteroskedasticity (H):</th> <td>0.30</td> <th>  Skew:              </th> <td>0.37</td> \n",
              "</tr>\n",
              "<tr>\n",
              "  <th>Prob(H) (two-sided):</th>    <td>0.00</td> <th>  Kurtosis:          </th> <td>6.06</td> \n",
              "</tr>\n",
              "</table><br/><br/>Warnings:<br/>[1] Covariance matrix calculated using the outer product of gradients (complex-step)."
            ],
            "text/latex": "\\begin{center}\n\\begin{tabular}{lclc}\n\\toprule\n\\textbf{Dep. Variable:}          &                y                & \\textbf{  No. Observations:  } &    212      \\\\\n\\textbf{Model:}                  & SARIMAX(1, 0, 1)x(2, 0, [], 52) & \\textbf{  Log Likelihood     } &  -481.155   \\\\\n\\textbf{Date:}                   &         Thu, 15 May 2025        & \\textbf{  AIC                } &  972.310    \\\\\n\\textbf{Time:}                   &             10:29:14            & \\textbf{  BIC                } &  989.093    \\\\\n\\textbf{Sample:}                 &            02-14-2021           & \\textbf{  HQIC               } &  979.093    \\\\\n\\textbf{}                        &           - 03-02-2025          & \\textbf{                     } &             \\\\\n\\textbf{Covariance Type:}        &               opg               & \\textbf{                     } &             \\\\\n\\bottomrule\n\\end{tabular}\n\\begin{tabular}{lcccccc}\n                   & \\textbf{coef} & \\textbf{std err} & \\textbf{z} & \\textbf{P$> |$z$|$} & \\textbf{[0.025} & \\textbf{0.975]}  \\\\\n\\midrule\n\\textbf{ar.L1}     &       0.6941  &        0.110     &     6.284  &         0.000        &        0.478    &        0.911     \\\\\n\\textbf{ma.L1}     &      -0.8598  &        0.093     &    -9.282  &         0.000        &       -1.041    &       -0.678     \\\\\n\\textbf{ar.S.L52}  &      -0.6202  &        0.062     &    -9.983  &         0.000        &       -0.742    &       -0.498     \\\\\n\\textbf{ar.S.L104} &      -0.2452  &        0.075     &    -3.259  &         0.001        &       -0.393    &       -0.098     \\\\\n\\textbf{sigma2}    &       4.9535  &        0.369     &    13.420  &         0.000        &        4.230    &        5.677     \\\\\n\\bottomrule\n\\end{tabular}\n\\begin{tabular}{lclc}\n\\textbf{Ljung-Box (L1) (Q):}     & 0.15 & \\textbf{  Jarque-Bera (JB):  } & 87.43  \\\\\n\\textbf{Prob(Q):}                & 0.70 & \\textbf{  Prob(JB):          } &  0.00  \\\\\n\\textbf{Heteroskedasticity (H):} & 0.30 & \\textbf{  Skew:              } &  0.37  \\\\\n\\textbf{Prob(H) (two-sided):}    & 0.00 & \\textbf{  Kurtosis:          } &  6.06  \\\\\n\\bottomrule\n\\end{tabular}\n%\\caption{SARIMAX Results}\n\\end{center}\n\nWarnings: \\newline\n [1] Covariance matrix calculated using the outer product of gradients (complex-step)."
          },
          "metadata": {},
          "execution_count": 96
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Fit a Seasonal ARIMA (SARIMA) model with specified non-seasonal and seasonal parameters to the training data snd displays summary\n",
        "sarima_model = SARIMAX(train_2['Estimated  quantity demand per transaction_diff'], order=(1,0,1), seasonal_order=(2,0,0,52))\n",
        "sarima_results = sarima_model.fit()\n",
        "sarima_results.summary()"
      ],
      "metadata": {
        "id": "SynZddpId2oY",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 542
        },
        "outputId": "271843e1-22b1-4467-92d4-bab951710c8d"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.11/dist-packages/statsmodels/tsa/base/tsa_model.py:473: ValueWarning: No frequency information was provided, so inferred frequency W-SUN will be used.\n",
            "  self._init_dates(dates, freq)\n",
            "/usr/local/lib/python3.11/dist-packages/statsmodels/tsa/base/tsa_model.py:473: ValueWarning: No frequency information was provided, so inferred frequency W-SUN will be used.\n",
            "  self._init_dates(dates, freq)\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<class 'statsmodels.iolib.summary.Summary'>\n",
              "\"\"\"\n",
              "                                              SARIMAX Results                                              \n",
              "===========================================================================================================\n",
              "Dep. Variable:     Estimated  quantity demand per transaction_diff   No. Observations:                  170\n",
              "Model:                             SARIMAX(1, 0, 1)x(2, 0, [], 52)   Log Likelihood                -395.759\n",
              "Date:                                             Thu, 15 May 2025   AIC                            801.518\n",
              "Time:                                                     10:29:26   BIC                            817.197\n",
              "Sample:                                                 02-14-2021   HQIC                           807.880\n",
              "                                                      - 05-12-2024                                         \n",
              "Covariance Type:                                               opg                                         \n",
              "==============================================================================\n",
              "                 coef    std err          z      P>|z|      [0.025      0.975]\n",
              "------------------------------------------------------------------------------\n",
              "ar.L1          0.7581      0.107      7.101      0.000       0.549       0.967\n",
              "ma.L1         -0.9033      0.088    -10.295      0.000      -1.075      -0.731\n",
              "ar.S.L52      -0.6739      0.071     -9.486      0.000      -0.813      -0.535\n",
              "ar.S.L104     -0.3552      0.085     -4.203      0.000      -0.521      -0.190\n",
              "sigma2         5.1928      0.460     11.285      0.000       4.291       6.095\n",
              "===================================================================================\n",
              "Ljung-Box (L1) (Q):                   0.05   Jarque-Bera (JB):                64.72\n",
              "Prob(Q):                              0.82   Prob(JB):                         0.00\n",
              "Heteroskedasticity (H):               0.37   Skew:                             0.44\n",
              "Prob(H) (two-sided):                  0.00   Kurtosis:                         5.89\n",
              "===================================================================================\n",
              "\n",
              "Warnings:\n",
              "[1] Covariance matrix calculated using the outer product of gradients (complex-step).\n",
              "\"\"\""
            ],
            "text/html": [
              "<table class=\"simpletable\">\n",
              "<caption>SARIMAX Results</caption>\n",
              "<tr>\n",
              "  <th>Dep. Variable:</th>   <td>Estimated  quantity demand per transaction_diff</td> <th>  No. Observations:  </th>    <td>170</td>  \n",
              "</tr>\n",
              "<tr>\n",
              "  <th>Model:</th>                   <td>SARIMAX(1, 0, 1)x(2, 0, [], 52)</td>         <th>  Log Likelihood     </th> <td>-395.759</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th>Date:</th>                           <td>Thu, 15 May 2025</td>                 <th>  AIC                </th>  <td>801.518</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th>Time:</th>                               <td>10:29:26</td>                     <th>  BIC                </th>  <td>817.197</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th>Sample:</th>                            <td>02-14-2021</td>                    <th>  HQIC               </th>  <td>807.880</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th></th>                                  <td>- 05-12-2024</td>                   <th>                     </th>     <td> </td>   \n",
              "</tr>\n",
              "<tr>\n",
              "  <th>Covariance Type:</th>                       <td>opg</td>                       <th>                     </th>     <td> </td>   \n",
              "</tr>\n",
              "</table>\n",
              "<table class=\"simpletable\">\n",
              "<tr>\n",
              "      <td></td>         <th>coef</th>     <th>std err</th>      <th>z</th>      <th>P>|z|</th>  <th>[0.025</th>    <th>0.975]</th>  \n",
              "</tr>\n",
              "<tr>\n",
              "  <th>ar.L1</th>     <td>    0.7581</td> <td>    0.107</td> <td>    7.101</td> <td> 0.000</td> <td>    0.549</td> <td>    0.967</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th>ma.L1</th>     <td>   -0.9033</td> <td>    0.088</td> <td>  -10.295</td> <td> 0.000</td> <td>   -1.075</td> <td>   -0.731</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th>ar.S.L52</th>  <td>   -0.6739</td> <td>    0.071</td> <td>   -9.486</td> <td> 0.000</td> <td>   -0.813</td> <td>   -0.535</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th>ar.S.L104</th> <td>   -0.3552</td> <td>    0.085</td> <td>   -4.203</td> <td> 0.000</td> <td>   -0.521</td> <td>   -0.190</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th>sigma2</th>    <td>    5.1928</td> <td>    0.460</td> <td>   11.285</td> <td> 0.000</td> <td>    4.291</td> <td>    6.095</td>\n",
              "</tr>\n",
              "</table>\n",
              "<table class=\"simpletable\">\n",
              "<tr>\n",
              "  <th>Ljung-Box (L1) (Q):</th>     <td>0.05</td> <th>  Jarque-Bera (JB):  </th> <td>64.72</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th>Prob(Q):</th>                <td>0.82</td> <th>  Prob(JB):          </th> <td>0.00</td> \n",
              "</tr>\n",
              "<tr>\n",
              "  <th>Heteroskedasticity (H):</th> <td>0.37</td> <th>  Skew:              </th> <td>0.44</td> \n",
              "</tr>\n",
              "<tr>\n",
              "  <th>Prob(H) (two-sided):</th>    <td>0.00</td> <th>  Kurtosis:          </th> <td>5.89</td> \n",
              "</tr>\n",
              "</table><br/><br/>Warnings:<br/>[1] Covariance matrix calculated using the outer product of gradients (complex-step)."
            ],
            "text/latex": "\\begin{center}\n\\begin{tabular}{lclc}\n\\toprule\n\\textbf{Dep. Variable:}          & Estimated  quantity demand per transaction\\_diff & \\textbf{  No. Observations:  } &    170      \\\\\n\\textbf{Model:}                  &         SARIMAX(1, 0, 1)x(2, 0, [], 52)          & \\textbf{  Log Likelihood     } &  -395.759   \\\\\n\\textbf{Date:}                   &                 Thu, 15 May 2025                 & \\textbf{  AIC                } &  801.518    \\\\\n\\textbf{Time:}                   &                     10:29:26                     & \\textbf{  BIC                } &  817.197    \\\\\n\\textbf{Sample:}                 &                    02-14-2021                    & \\textbf{  HQIC               } &  807.880    \\\\\n\\textbf{}                        &                   - 05-12-2024                   & \\textbf{                     } &             \\\\\n\\textbf{Covariance Type:}        &                       opg                        & \\textbf{                     } &             \\\\\n\\bottomrule\n\\end{tabular}\n\\begin{tabular}{lcccccc}\n                   & \\textbf{coef} & \\textbf{std err} & \\textbf{z} & \\textbf{P$> |$z$|$} & \\textbf{[0.025} & \\textbf{0.975]}  \\\\\n\\midrule\n\\textbf{ar.L1}     &       0.7581  &        0.107     &     7.101  &         0.000        &        0.549    &        0.967     \\\\\n\\textbf{ma.L1}     &      -0.9033  &        0.088     &   -10.295  &         0.000        &       -1.075    &       -0.731     \\\\\n\\textbf{ar.S.L52}  &      -0.6739  &        0.071     &    -9.486  &         0.000        &       -0.813    &       -0.535     \\\\\n\\textbf{ar.S.L104} &      -0.3552  &        0.085     &    -4.203  &         0.000        &       -0.521    &       -0.190     \\\\\n\\textbf{sigma2}    &       5.1928  &        0.460     &    11.285  &         0.000        &        4.291    &        6.095     \\\\\n\\bottomrule\n\\end{tabular}\n\\begin{tabular}{lclc}\n\\textbf{Ljung-Box (L1) (Q):}     & 0.05 & \\textbf{  Jarque-Bera (JB):  } & 64.72  \\\\\n\\textbf{Prob(Q):}                & 0.82 & \\textbf{  Prob(JB):          } &  0.00  \\\\\n\\textbf{Heteroskedasticity (H):} & 0.37 & \\textbf{  Skew:              } &  0.44  \\\\\n\\textbf{Prob(H) (two-sided):}    & 0.00 & \\textbf{  Kurtosis:          } &  5.89  \\\\\n\\bottomrule\n\\end{tabular}\n%\\caption{SARIMAX Results}\n\\end{center}\n\nWarnings: \\newline\n [1] Covariance matrix calculated using the outer product of gradients (complex-step)."
          },
          "metadata": {},
          "execution_count": 97
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Predict future values using the SARIMA model for the test data period and displays the predicted values\n",
        "start = len(train_2)\n",
        "end =len(train_2) + len(test_2)-1\n",
        "test_2_predictions = sarima_results.predict(start=start, end=end, typ = 'levels').rename('SARIMA Predictions')\n",
        "#test_2_predictions"
      ],
      "metadata": {
        "id": "pP_BkVfGeW4c"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Plot the actual test data and SARIMA model predictions using line plot\n",
        "test_2['Estimated  quantity demand per transaction_diff'].plot(legend=True)\n",
        "test_2_predictions.plot(legend=True)"
      ],
      "metadata": {
        "id": "0CDziBDLfL5n",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 483
        },
        "outputId": "d174f105-12f8-47fd-dfdd-aa43a7f67258"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<Axes: xlabel='Date'>"
            ]
          },
          "metadata": {},
          "execution_count": 99
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "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5hmceuqpZf0/S5YsQS6Xw7p163DCCScAoIblLVu2OHp/jVBXV4f29nasW7cO73//+wEAuVwO69evxzHHHFPx9quFCY2DX7t2bUlWAwfHRCGdTmPv3r0FXwMDAwCoe/2OO+7Axo0b8d577+G3v/0tQqEQ5syZA4CWD5599ln09vYqj3ED8+fPRzabxc9//nO89957+M1vfoPbb7+94D5z587F+Pg4XnzuGQwPDWI8Hseh8+fjs5/9LC688EI89NBD2LFjB15++WXcdNNN+NOf/gQAyurvRz/6EbZt24Zf/OIXjko0AF3pXnrppfj617+Ov/3tb9i4cSMuvvjikhbND37wg/jFL36B119/Ha+++iouv/zygpXdggULsHv3btx3333Yvn07fvazn+Hhhx92/HrNnTsX69atw86dOzEwMKCrArDX6+mnn8bAwEABKfr85z+Pv/3tb3j88cdxySWXmD7X5Zdfjm3btuHrX/86tmzZgnvvvbegOwigHUIvvvgirr76amzYsAHbtm3DH//4R1x99dWO/zctFixYgCeffBIvvvgiNm3ahC9+8YvYt2+fo22ceuqpWLhwIS666CK88cYbeO655wrIoBl2796Na6+9Flu2bMHvf/97/PznP8c111wDAFi4cKHlZ88u5syZA0EQ8Nhjj+HAgQMFnTHFsHOsWGHHjh1Ys2YNXnrpJezatQt//etfsW3bNqWctmDBAjz00EPYsGED3njjDXzmM58p+IzNnTsXF110ES655BI88sgj2LFjB9auXauQIjv/z4IFC3D22Wfjsssuw/PPP4833ngDF1xwATo7O3H22Wc7+n+McM011+D73/8+HnnkEWzevBlXXnnllM9y4bNpOGYMHn/8cbS3txd8ve997wNA21B//etf48QTT8QRRxyBp556Cv/3f/+n1MC/+93vYufOnTj00EMxa9Ys1/bpyCOPxI9//GP84Ac/wOGHH47f/e53Ja3wJ5xwAr74xS/i61d8DqccOR933/YzZPIEd911Fy688EJcd911WLRoET7+8Y/jlVdeURSM448/Hr/+9a9x66234sgjj8Rf//pXfPOb33S8jzfffDNOOukknHXWWTj11FPxvve9r6Sef8stt6C7uxsnnXQSPvOZz+BrX/taQYnpYx/7GL761a/i6quvxlFHHYUXX3zRtKXWCF/72tfg8XiwdOlSzJo1q6RdFKCv1+WXX47zzz8fs2bNwg9/+EPlbwsWLMAJJ5yAxYsXl/hBijF79mw8+OCDeOSRR3DkkUfi9ttvx3/8x38U3OeII47AM888g61bt+Kkk07C0UcfjW9/+9sFPo1y8M1vfhPHHHMMVq9ejVNOOQVtbW0F6Zl2IIoiHn74YSSTSaxYsQKf//znS9rKjXDhhRcqj7vqqqtwzTXX4Atf+ILyd6vPnl10dnbixhtvxDe+8Q20traakjg7x4oVwuEwNm/ejHPPPRcLFy7EF77wBVx11VX44he/CIC2Djc0NOCEE07AWWedhdWrV5eoCbfddhs+8YlP4Morr8TixYtx2WWXKa3cdv+fu+66C8uXL8eZZ56JVatWgRCCP//5zxVPvmW47rrr8M///M+46KKLsGrVKtTU1JT4x6YaBDKFi1CxWAx1dXUYHR0tMbpxTDxSqRR27NiBefPmIRgMTvbuzCjkJYK3+0aV3+c2RVAbcufEVQ5OOeUUHHXUUdNO6SSEYMGCBbjyyitx7bXXTvbuTElM1/eWY+Jhdk1wev0+OIr9HBwHOYrXDJl8dU2KByMOHDiA++67D3v37sXnPve5yd4dDg4ODTgZ4eCYBpCKO1U4GXGMlpYWNDc341e/+hWfk8UxrWHWMfeXv/ylYmPxZICTEQ6OaQCpqJiazU0uGSmOnZ8OmMIV6SmF6fjezjRs2LDB8G+dnZ0TtyMugpMRDo5pgGJlJJPnF1YOjpkKt1vJpwJ4Nw0HxzRAiTLCyzQcHBwHETgZ4eCYBmAlBp+HHrLZvFSilnBwcHBMV3AywsExDSBJKhkR5Yhtro5wcHAcLOBkhINjGoCVaURBo45MsomVg4ODwy1wMsLBMQ3ASjKiIMDvpYctN7FycHAcLOBkhINjGkBRRkQBPs/UKNNcfPHFBRHlp5xyCr7yla9UtE03tsHBwTH9wMkIx4zAgQMHcMUVV2D27NkIBAJoa2vD6tWr8cILL5Tc96WXXoLH48EZZ5xR8redO3dCEATlq7GxESeffDKee+65gvvdcMMNOOqoowp+FwQBp512Wsk2b775ZgiCgFNOOaXkbz09PfD7/ThpJZ2PIQqAXy7TZHTKNBdffLGyb36/H/Pnz8d3v/td5HI509fHDTz00EP4t3/7N1v3Xbt2LQRBKBne5WQbHBwcBw84GeGYETj33HPx+uuv45577sHWrVvx6KOP4pRTTsHg4GDJfe+44w586UtfwrPPPou+vj7d7T311FPo7+/Hs88+i46ODpx55pmWU1Xb29vx97//HT09PQW333nnnYYDxu6++26cd955GBuL4c3XX4UoCPB51Y4aPZx22mno7+/Htm3bcN111+GGG27AzTffrHvfTCZjus9O0NjYiJqamknfBgcHx/QDJyMcBz1GRkbw3HPP4Qc/+AE+8IEPYM6cOVixYgXWrFmDj33sYwX3HR8fx/33348rrrgCZ5xxRsnIeIampia0tbXh8MMPx7/+678iFoth3bp1pvvR0tKCj3zkI7jnnnuU21588UUMDAzoqjCE0Mm8//zP/4xzzj0fj9z320JlxICMMOVnzpw5uOKKK3Dqqafi0UcfBaCWVr73ve+ho6MDixYtAgDs2bMH5513Hurr69HY2Iizzz4bO3fuVLaZz+dx7bXXor6+Hk1NTfiXf/mXkkTT4hJLOp3G9ddfj+7ubgQCAcyfPx933HEHdu7ciQ984AMAgIaGBgiCgIsvvlh3G8PDw7jwwgvR0NCAcDiM008/Hdu2bVP+fvfdd6O+vh5PPPEElixZgmg0qpAxhrVr12LFihWIRCKor6/HiSeeiF27dhm9TRwcHJMATkY4KgMhQCY+OV82czai0Sii0SgeeeQRpNNp0/s+8MADWLx4MRYtWoQLLrgAd955p2mMeDKZxP/8z/8AAPx+v+W+XHLJJQUE584778RnP/tZ3cf+/e9/RyKRwKmnnoqPf/J8PP7oQ0gkEhrPCLEVcR4KhQoUkKeffhpbtmzBk08+icceewzZbBarV69GTU0NnnvuObzwwgvKRZ097pZbbsHdd9+NO++8E88//zyGhobw8MMPmz7vhRdeiN///vf42c9+hk2bNuG//uu/EI1G0d3djQcffBAAsGXLFvT39+PWW2/V3cbFF1+MV199FY8++iheeuklEELw0Y9+FNlsVrlPIpHAj370I/zmN7/Bs88+i927d+NrX/saACCXy+HjH/84Tj75ZLz55pt46aWX8IUvfAGC3B7NwcExNcDj4DkqQzYB/EfH5Dz3v/YB/ojl3bxeL+6++25cdtlluP3223HMMcfg5JNPxqc+9SkcccQRBfe94447cMEFFwCg5Y7R0VE888wzJX6OE044AaIoIpFIgBCC5cuX40Mf+pDlvpx55pm4/PLL8eyzz2L58uV44IEH8Pzzz+POO+8sue8dd9yBT33qU/B4PFi45DB0zZ6DP/3xIVz9xc9DgABCCHISUchJMQghePrpp/HEE0/gS1/6knJ7JBLBf//3fysE6Le//S0kScJ///d/Kxfpu+66C/X19Vi7di0+8pGP4Kc//SnWrFmDf/qnfwIA3H777XjiiScM/8+tW7figQcewJNPPolTTz0VAHDIIYcof29sbARA1aL6+nrdbWzbtg2PPvooXnjhBZxwwgkAgN/97nfo7u7GI488gk9+8pMAgGw2i9tvvx2HHnooAODqq6/Gd7/7XQB0jPno6CjOPPNM5e9Lliwx3G8ODo7JAVdGOGYEzj33XPT19eHRRx/FaaedhrVr1+KYY44pUCm2bNmCl19+GZ/+9KcBUBJz/vnn44477ijZ3v3334/XX38dDz74IObPn4+7774bPp/Pcj98Ph8uuOAC3HXXXfjDH/6AhQsXlhAigJaWHnroIYUYSRLBGeech3v/524IgtpRo2difeyxxxCNRhEMBnH66afj/PPPxw033KD8fdmyZQVKzBtvvIF3330XNTU1iorU2NiIVCqF7du3Y3R0FP39/Vi5cqXyGK/Xi2OPPdbw/9ywYQM8Hg9OPvlky9fECJs2bYLX6y143qamJixatAibNm1SbguHwwrRAKg3Z//+/QAo6bn44ouxevVqnHXWWbj11lsLSjgcHBxTA1wZ4agMvjBVKCbruR0gGAziwx/+MD784Q/jW9/6Fj7/+c/jO9/5juJXuOOOO5DL5dDRoSo9hBAEAgH84he/QF1dnXJ7d3c3FixYgAULFiCXy+Gcc87Bxo0bEQgELPfjkksuwcqVK7Fx40Zccskluve59957kUqlCi7EhBBIkoStW7fCV9+BTF7SNbF+4AMfwG233Qa/34+Ojg54vYWHeSRSqCaNj49j+fLl+N3vfleyrVmzZln+P3oIhUJlPa4cFJNAQRAKyld33XUXvvzlL+Pxxx/H/fffj29+85t48skncfzxx0/YPnJwcJiDKyMclUEQaKlkMr4qrPsvXboU8XgcAPUW/M///A9uueUWbNiwQfl644030NHRgd///veG2/nEJz4Br9eL//zP/7T1vIcddhgOO+wwbNy4EZ/5zGd073PHHXfguuuuU/bj/55+EQ888RxWnfg+3HnnnUpH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fnjmmWcCXhs+fDiWL18uPRcEAS+//DKuueYa2Gw2/OAHP8Dbb7+d2oEqSCzHrAZNTU3YuHEjbrnlFlx11VVYt26d9N66deuQm5sbsH24u9tHHnkEPXv2RHZ2Nm688UYsWbIEw4cPT+q46+vr8fHHH+Oxxx5DZWUlysrKMHr0aCxduhQ/+clPpG1uvPFGFBYWwuFwYPz48di3b5+0j+XLl2P48OF48cUXUVJSApvNhhkzZqChoSGpY4+XBQsWwGw247333sMll1yC0tJSXHHFFfjggw9w7Ngx3HfffQAAl8uFe+65ByUlJbBYLBg4cCBWr16N6upqVFZWAgDy8vJSchd22WWXoaioCCtXroy4zRtvvIEf/ehHsFgs6NevH5588knpvXvvvRdjxowJ+Z3y8nI8/PDDSRkzh0fZ+vTpg4qKCtx7773YvHkztmzZIv3/6OzcAoB33nkHo0aNgtVqRY8ePXDNNdckddyJsnXrVlx00UXIzc1FQUEBpkyZgm+//VZ6v7q6GoIg4M0330RlZSVsNhvKy8uxc+fOlI+Vf0fyH6PRiM2bN6OiogJWqxUDBgzAQw89FCIga2trccUVVyAzMxMDBgzA66+/npIxV1RUoKSkBG+++ab02ptvvonS0lKMGDFCei3W72Hjxo245JJLYLVasX79+pjGQGKkizz00EOYMWMGvvzyS1x55ZWYNWuWJu8C9cxrr72GH/7whxg8eDB+/vOfY82aNTF3gASA9evXY8WKFXjsscewZ88elJaW4ve//30SRyySlZWFrKwsbNq0CS6XK+w21113HU6ePIktW7Zgz549qKiowIQJEwLOocOHD+O1117DO++8g61bt+KLL77ArbfemvTxx8rZs2fxt7/9DbfeeisyMzMD3isqKsKsWbOwceNGMMYwe/ZsbNiwAatWrUJVVRVefPFFZGVloaSkBG+88QYA4NChQ6itrcV//dd/JXXcRqMRjz76KJ599lkcPXo05P09e/ZgxowZuP7667F//34sX74cDzzwgHSxnzVrFj777LOASfjgwYP48ssv8bOf/SypYw/H+PHjUV5eLl1IOju3/vKXv+Caa67BlVdeiS+++ALbtm3D6NGjUz7ueGhubsaiRYvw+eefY9u2bTAYDLjmmmtClqfuu+8+3HXXXdi7dy8GDRqEG264QRMRo48//hizZ8/GnXfe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\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Calculate MAE\n",
        "mae = mean_absolute_error(test_2['Estimated  quantity demand per transaction_diff'], test_2_predictions)\n",
        "\n",
        "# Calculate MSE\n",
        "mse = mean_squared_error(test_2['Estimated  quantity demand per transaction_diff'], test_2_predictions)\n",
        "\n",
        "# Calculate RMSE\n",
        "rmse = np.sqrt(mse)\n",
        "\n",
        "# Calculate MPAE\n",
        "mpae = mean_absolute_percentage_error(test_2['Estimated  quantity demand per transaction_diff'], test_2_predictions)\n",
        "# Print the results\n",
        "print(f'MAE: {mae}')\n",
        "print(f'MSE: {mse}')\n",
        "print(f'RMSE: {rmse}')\n",
        "print(f'MPAE: {mpae}%')"
      ],
      "metadata": {
        "id": "YxwWSAxffxKK",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "86c12a1f-b7c1-4883-af9e-5a18b90f7989"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "MAE: 1.8727001998221802\n",
            "MSE: 5.2135685421125615\n",
            "RMSE: 2.283324011635791\n",
            "MPAE: 1193034943905196.8%\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "18TEbgusf0tE"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "fJ5jVNoYf1HZ"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#Exponential Smoothing"
      ],
      "metadata": {
        "id": "fG27cKdpf5Ty"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "from statsmodels.tsa.holtwinters import ExponentialSmoothing\n"
      ],
      "metadata": {
        "id": "FVWjjvhN_PR9"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Splitting for Triple Expponential Smoothing\n",
        "train_3 = df.iloc[:170]\n",
        "test_3 = df.iloc[169:]"
      ],
      "metadata": {
        "id": "nwkhSEbO1daO"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Apply Triple Exponential Smoothing with additive trend and seasonality, then store the fitted values\n",
        "df['TES_mul_12']= ExponentialSmoothing(df['Estimated  quantity demand per transaction_diff'], trend='add', seasonal ='add', seasonal_periods=52).fit().fittedvalues"
      ],
      "metadata": {
        "id": "KR4ZvQcNecIl",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "2b899f0e-e9fb-499d-ca77-edd01b9dac36"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.11/dist-packages/statsmodels/tsa/base/tsa_model.py:473: ValueWarning: No frequency information was provided, so inferred frequency W-SUN will be used.\n",
            "  self._init_dates(dates, freq)\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "Wa-FArOy1GIe"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Display the first 5 rows\n",
        "df.head()"
      ],
      "metadata": {
        "id": "aYhYax0iipFi",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 238
        },
        "outputId": "01e2b1b1-4a18-4f0a-d409-fa3128394286"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "            Estimated  quantity demand per transaction  Inflation Rate  \\\n",
              "Date                                                                     \n",
              "2021-02-14                                        96.0            -2.9   \n",
              "2021-02-21                                        93.0            -2.9   \n",
              "2021-02-28                                        92.0            -2.9   \n",
              "2021-03-07                                        91.0             3.4   \n",
              "2021-03-14                                        92.0             3.4   \n",
              "\n",
              "            Estimated  quantity demand per transaction_diff  \\\n",
              "Date                                                          \n",
              "2021-02-14                                              1.0   \n",
              "2021-02-21                                             -3.0   \n",
              "2021-02-28                                             -1.0   \n",
              "2021-03-07                                             -1.0   \n",
              "2021-03-14                                              1.0   \n",
              "\n",
              "            Inflation Rate_diff  TES_mul_12  \n",
              "Date                                         \n",
              "2021-02-14                  0.0   -0.010860  \n",
              "2021-02-21                  0.0   -0.210867  \n",
              "2021-02-28                  0.0   -0.010853  \n",
              "2021-03-07                  6.3   -0.210807  \n",
              "2021-03-14                  0.0   -0.258082  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-b7c2a4cf-7f52-416f-9852-1e24b876d6b5\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Estimated  quantity demand per transaction</th>\n",
              "      <th>Inflation Rate</th>\n",
              "      <th>Estimated  quantity demand per transaction_diff</th>\n",
              "      <th>Inflation Rate_diff</th>\n",
              "      <th>TES_mul_12</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Date</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>2021-02-14</th>\n",
              "      <td>96.0</td>\n",
              "      <td>-2.9</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>-0.010860</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2021-02-21</th>\n",
              "      <td>93.0</td>\n",
              "      <td>-2.9</td>\n",
              "      <td>-3.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>-0.210867</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2021-02-28</th>\n",
              "      <td>92.0</td>\n",
              "      <td>-2.9</td>\n",
              "      <td>-1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>-0.010853</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2021-03-07</th>\n",
              "      <td>91.0</td>\n",
              "      <td>3.4</td>\n",
              "      <td>-1.0</td>\n",
              "      <td>6.3</td>\n",
              "      <td>-0.210807</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2021-03-14</th>\n",
              "      <td>92.0</td>\n",
              "      <td>3.4</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>-0.258082</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b7c2a4cf-7f52-416f-9852-1e24b876d6b5')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-b7c2a4cf-7f52-416f-9852-1e24b876d6b5 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-b7c2a4cf-7f52-416f-9852-1e24b876d6b5');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "    <div id=\"df-81e0d292-b698-4c44-845d-9d1a3b9a2777\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-81e0d292-b698-4c44-845d-9d1a3b9a2777')\"\n",
              "                title=\"Suggest charts\"\n",
              "                style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "      <script>\n",
              "        async function quickchart(key) {\n",
              "          const quickchartButtonEl =\n",
              "            document.querySelector('#' + key + ' button');\n",
              "          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "          quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "          try {\n",
              "            const charts = await google.colab.kernel.invokeFunction(\n",
              "                'suggestCharts', [key], {});\n",
              "          } catch (error) {\n",
              "            console.error('Error during call to suggestCharts:', error);\n",
              "          }\n",
              "          quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "        }\n",
              "        (() => {\n",
              "          let quickchartButtonEl =\n",
              "            document.querySelector('#df-81e0d292-b698-4c44-845d-9d1a3b9a2777 button');\n",
              "          quickchartButtonEl.style.display =\n",
              "            google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "        })();\n",
              "      </script>\n",
              "    </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "df",
              "summary": "{\n  \"name\": \"df\",\n  \"rows\": 212,\n  \"fields\": [\n    {\n      \"column\": \"Date\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2021-02-14 00:00:00\",\n        \"max\": \"2025-03-02 00:00:00\",\n        \"num_unique_values\": 212,\n        \"samples\": [\n          \"2021-09-12 00:00:00\",\n          \"2024-06-09 00:00:00\",\n          \"2023-10-22 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Estimated  quantity demand per transaction\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 6.067731194964823,\n        \"min\": 80.6875,\n        \"max\": 114.0,\n        \"num_unique_values\": 32,\n        \"samples\": [\n          114.0,\n          106.0,\n          92.5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Inflation Rate\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 18.52141836870561,\n        \"min\": -26.0,\n        \"max\": 46.8,\n        \"num_unique_values\": 47,\n        \"samples\": [\n          -23.4,\n          2.5,\n          -14.2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Estimated  quantity demand per transaction_diff\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2.7131540034730333,\n        \"min\": -10.3125,\n        \"max\": 12.0,\n        \"num_unique_values\": 23,\n        \"samples\": [\n          7.0,\n          -4.0,\n          1.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Inflation Rate_diff\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2.641413271425758,\n        \"min\": -14.0,\n        \"max\": 11.299999999999999,\n        \"num_unique_values\": 48,\n        \"samples\": [\n          -2.6000000000000014,\n          -5.7,\n          -9.2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"TES_mul_12\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.6801138431417182,\n        \"min\": -1.508048745684646,\n        \"max\": 2.5079928102303337,\n        \"num_unique_values\": 212,\n        \"samples\": [\n          -0.008048096971951843,\n          -0.49190928358637187,\n          -0.3722945182395298\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 105
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Plot the original and smoothed values for the first 24 periods to visually compare trends and seasonality\n",
        "df[['Estimated  quantity demand per transaction_diff', 'TES_mul_12']].iloc[:24].plot(figsize=(12,5))"
      ],
      "metadata": {
        "id": "asGt05Mvi0Kn",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 498
        },
        "outputId": "504174fa-c789-4c9a-c4ed-01b8a5dfd04e"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<Axes: xlabel='Date'>"
            ]
          },
          "metadata": {},
          "execution_count": 106
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1200x500 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.index.freq= 'W'"
      ],
      "metadata": {
        "id": "_K5cJH54mKSs"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df.info()"
      ],
      "metadata": {
        "id": "VUolF3omjWlt",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "8d4d8b22-f26c-4701-903e-941185305f9e"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "DatetimeIndex: 212 entries, 2021-02-14 to 2025-03-02\n",
            "Freq: W-SUN\n",
            "Data columns (total 5 columns):\n",
            " #   Column                                           Non-Null Count  Dtype  \n",
            "---  ------                                           --------------  -----  \n",
            " 0   Estimated  quantity demand per transaction       212 non-null    float64\n",
            " 1   Inflation Rate                                   212 non-null    float64\n",
            " 2   Estimated  quantity demand per transaction_diff  212 non-null    float64\n",
            " 3   Inflation Rate_diff                              212 non-null    float64\n",
            " 4   TES_mul_12                                       212 non-null    float64\n",
            "dtypes: float64(5)\n",
            "memory usage: 9.9 KB\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df"
      ],
      "metadata": {
        "id": "ynt3gS7ijfMU",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 455
        },
        "outputId": "2c4ed749-32a8-4655-fff6-8ffe685d03c2"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "            Estimated  quantity demand per transaction  Inflation Rate  \\\n",
              "Date                                                                     \n",
              "2021-02-14                                        96.0            -2.9   \n",
              "2021-02-21                                        93.0            -2.9   \n",
              "2021-02-28                                        92.0            -2.9   \n",
              "2021-03-07                                        91.0             3.4   \n",
              "2021-03-14                                        92.0             3.4   \n",
              "...                                                ...             ...   \n",
              "2025-02-02                                       100.0            -2.4   \n",
              "2025-02-09                                       100.0            -2.4   \n",
              "2025-02-16                                       102.0            -2.4   \n",
              "2025-02-23                                       102.0            -2.4   \n",
              "2025-03-02                                       102.0            -5.4   \n",
              "\n",
              "            Estimated  quantity demand per transaction_diff  \\\n",
              "Date                                                          \n",
              "2021-02-14                                              1.0   \n",
              "2021-02-21                                             -3.0   \n",
              "2021-02-28                                             -1.0   \n",
              "2021-03-07                                             -1.0   \n",
              "2021-03-14                                              1.0   \n",
              "...                                                     ...   \n",
              "2025-02-02                                             -1.0   \n",
              "2025-02-09                                              0.0   \n",
              "2025-02-16                                              2.0   \n",
              "2025-02-23                                              0.0   \n",
              "2025-03-02                                              0.0   \n",
              "\n",
              "            Inflation Rate_diff  TES_mul_12  \n",
              "Date                                         \n",
              "2021-02-14                  0.0   -0.010860  \n",
              "2021-02-21                  0.0   -0.210867  \n",
              "2021-02-28                  0.0   -0.010853  \n",
              "2021-03-07                  6.3   -0.210807  \n",
              "2021-03-14                  0.0   -0.258082  \n",
              "...                         ...         ...  \n",
              "2025-02-02                  0.4    0.258015  \n",
              "2025-02-09                  0.0    0.010592  \n",
              "2025-02-16                  0.0   -0.189415  \n",
              "2025-02-23                  0.0    0.010599  \n",
              "2025-03-02                 -3.0   -0.189355  \n",
              "\n",
              "[212 rows x 5 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-12525eeb-d2d6-4234-a3c5-5c9b4573ab57\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Estimated  quantity demand per transaction</th>\n",
              "      <th>Inflation Rate</th>\n",
              "      <th>Estimated  quantity demand per transaction_diff</th>\n",
              "      <th>Inflation Rate_diff</th>\n",
              "      <th>TES_mul_12</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Date</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>2021-02-14</th>\n",
              "      <td>96.0</td>\n",
              "      <td>-2.9</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>-0.010860</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2021-02-21</th>\n",
              "      <td>93.0</td>\n",
              "      <td>-2.9</td>\n",
              "      <td>-3.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>-0.210867</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2021-02-28</th>\n",
              "      <td>92.0</td>\n",
              "      <td>-2.9</td>\n",
              "      <td>-1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>-0.010853</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2021-03-07</th>\n",
              "      <td>91.0</td>\n",
              "      <td>3.4</td>\n",
              "      <td>-1.0</td>\n",
              "      <td>6.3</td>\n",
              "      <td>-0.210807</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2021-03-14</th>\n",
              "      <td>92.0</td>\n",
              "      <td>3.4</td>\n",
              "      <td>1.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>-0.258082</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2025-02-02</th>\n",
              "      <td>100.0</td>\n",
              "      <td>-2.4</td>\n",
              "      <td>-1.0</td>\n",
              "      <td>0.4</td>\n",
              "      <td>0.258015</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2025-02-09</th>\n",
              "      <td>100.0</td>\n",
              "      <td>-2.4</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.010592</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2025-02-16</th>\n",
              "      <td>102.0</td>\n",
              "      <td>-2.4</td>\n",
              "      <td>2.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>-0.189415</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2025-02-23</th>\n",
              "      <td>102.0</td>\n",
              "      <td>-2.4</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.010599</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2025-03-02</th>\n",
              "      <td>102.0</td>\n",
              "      <td>-5.4</td>\n",
              "      <td>0.0</td>\n",
              "      <td>-3.0</td>\n",
              "      <td>-0.189355</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>212 rows × 5 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-12525eeb-d2d6-4234-a3c5-5c9b4573ab57')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-12525eeb-d2d6-4234-a3c5-5c9b4573ab57 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-12525eeb-d2d6-4234-a3c5-5c9b4573ab57');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "    <div id=\"df-c788706d-c470-430c-a6c5-8096a2f405fd\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-c788706d-c470-430c-a6c5-8096a2f405fd')\"\n",
              "                title=\"Suggest charts\"\n",
              "                style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "      <script>\n",
              "        async function quickchart(key) {\n",
              "          const quickchartButtonEl =\n",
              "            document.querySelector('#' + key + ' button');\n",
              "          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "          quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "          try {\n",
              "            const charts = await google.colab.kernel.invokeFunction(\n",
              "                'suggestCharts', [key], {});\n",
              "          } catch (error) {\n",
              "            console.error('Error during call to suggestCharts:', error);\n",
              "          }\n",
              "          quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "        }\n",
              "        (() => {\n",
              "          let quickchartButtonEl =\n",
              "            document.querySelector('#df-c788706d-c470-430c-a6c5-8096a2f405fd button');\n",
              "          quickchartButtonEl.style.display =\n",
              "            google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "        })();\n",
              "      </script>\n",
              "    </div>\n",
              "\n",
              "  <div id=\"id_41ed3b05-f0a1-4126-bfd4-538ded62aabb\">\n",
              "    <style>\n",
              "      .colab-df-generate {\n",
              "        background-color: #E8F0FE;\n",
              "        border: none;\n",
              "        border-radius: 50%;\n",
              "        cursor: pointer;\n",
              "        display: none;\n",
              "        fill: #1967D2;\n",
              "        height: 32px;\n",
              "        padding: 0 0 0 0;\n",
              "        width: 32px;\n",
              "      }\n",
              "\n",
              "      .colab-df-generate:hover {\n",
              "        background-color: #E2EBFA;\n",
              "        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "        fill: #174EA6;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate {\n",
              "        background-color: #3B4455;\n",
              "        fill: #D2E3FC;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate:hover {\n",
              "        background-color: #434B5C;\n",
              "        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "        fill: #FFFFFF;\n",
              "      }\n",
              "    </style>\n",
              "    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n",
              "            title=\"Generate code using this dataframe.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "    <script>\n",
              "      (() => {\n",
              "      const buttonEl =\n",
              "        document.querySelector('#id_41ed3b05-f0a1-4126-bfd4-538ded62aabb button.colab-df-generate');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      buttonEl.onclick = () => {\n",
              "        google.colab.notebook.generateWithVariable('df');\n",
              "      }\n",
              "      })();\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "df",
              "summary": "{\n  \"name\": \"df\",\n  \"rows\": 212,\n  \"fields\": [\n    {\n      \"column\": \"Date\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2021-02-14 00:00:00\",\n        \"max\": \"2025-03-02 00:00:00\",\n        \"num_unique_values\": 212,\n        \"samples\": [\n          \"2021-09-12 00:00:00\",\n          \"2024-06-09 00:00:00\",\n          \"2023-10-22 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Estimated  quantity demand per transaction\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 6.067731194964823,\n        \"min\": 80.6875,\n        \"max\": 114.0,\n        \"num_unique_values\": 32,\n        \"samples\": [\n          114.0,\n          106.0,\n          92.5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Inflation Rate\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 18.52141836870561,\n        \"min\": -26.0,\n        \"max\": 46.8,\n        \"num_unique_values\": 47,\n        \"samples\": [\n          -23.4,\n          2.5,\n          -14.2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Estimated  quantity demand per transaction_diff\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2.7131540034730333,\n        \"min\": -10.3125,\n        \"max\": 12.0,\n        \"num_unique_values\": 23,\n        \"samples\": [\n          7.0,\n          -4.0,\n          1.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Inflation Rate_diff\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2.641413271425758,\n        \"min\": -14.0,\n        \"max\": 11.299999999999999,\n        \"num_unique_values\": 48,\n        \"samples\": [\n          -2.6000000000000014,\n          -5.7,\n          -9.2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"TES_mul_12\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.6801138431417182,\n        \"min\": -1.508048745684646,\n        \"max\": 2.5079928102303337,\n        \"num_unique_values\": 212,\n        \"samples\": [\n          -0.008048096971951843,\n          -0.49190928358637187,\n          -0.3722945182395298\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 109
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Fit a Triple Exponential Smoothing model on the training data with additive trend and seasonality\n",
        "fitted_model_ES= ExponentialSmoothing(train_3['Estimated  quantity demand per transaction_diff'], trend='add', seasonal ='add', seasonal_periods=52).fit()"
      ],
      "metadata": {
        "id": "euLsKKgij3X6",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "186ec918-afd5-4392-facf-dbaca045532c"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.11/dist-packages/statsmodels/tsa/base/tsa_model.py:473: ValueWarning: No frequency information was provided, so inferred frequency W-SUN will be used.\n",
            "  self._init_dates(dates, freq)\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [],
      "metadata": {
        "id": "WSPd15vgdHbC"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "len(test_3)"
      ],
      "metadata": {
        "id": "Ovq5whLMg9i5",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "b1f02798-3037-4c59-d657-194d8746ae8f"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "43"
            ]
          },
          "metadata": {},
          "execution_count": 111
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Forecast the next 43 periods using the fitted Exponential Smoothing model and display the values\n",
        "test_3_predictions = fitted_model_ES.forecast(43)\n",
        "test_3_predictions"
      ],
      "metadata": {
        "id": "QFHe_eP1iwFV",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "outputId": "9ad94695-2340-4eab-cc48-215c4661088c"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "2024-05-19   -0.463327\n",
              "2024-05-26   -0.129988\n",
              "2024-06-02   -0.463273\n",
              "2024-06-09   -0.796632\n",
              "2024-06-16    0.203355\n",
              "2024-06-23   -0.129993\n",
              "2024-06-30   -0.129954\n",
              "2024-07-07   -0.796641\n",
              "2024-07-14    0.536709\n",
              "2024-07-21   -0.129962\n",
              "2024-07-28   -0.463329\n",
              "2024-08-04   -0.129974\n",
              "2024-08-11   -0.463284\n",
              "2024-08-18   -1.129935\n",
              "2024-08-25   -0.463283\n",
              "2024-09-01    0.870011\n",
              "2024-09-08   -1.463260\n",
              "2024-09-15    0.536673\n",
              "2024-09-22    1.099177\n",
              "2024-09-29   -2.025775\n",
              "2024-10-06   -0.796655\n",
              "2024-10-13    0.870020\n",
              "2024-10-20    0.369997\n",
              "2024-10-27   -0.296665\n",
              "2024-11-03    0.536680\n",
              "2024-11-10    0.536695\n",
              "2024-11-17   -0.129979\n",
              "2024-11-24   -0.463306\n",
              "2024-12-01    0.536656\n",
              "2024-12-08   -0.463279\n",
              "2024-12-15   -0.463304\n",
              "2024-12-22    0.536684\n",
              "2024-12-29    0.870049\n",
              "2025-01-05   -0.463329\n",
              "2025-01-12    0.870019\n",
              "2025-01-19   -0.129953\n",
              "2025-01-26   -0.796640\n",
              "2025-02-02    0.536687\n",
              "2025-02-09   -0.163123\n",
              "2025-02-16   -0.912801\n",
              "2025-02-23   -0.162797\n",
              "2025-03-02   -0.412798\n",
              "2025-03-09   -0.412913\n",
              "Freq: W-SUN, dtype: float64"
            ],
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>0</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>2024-05-19</th>\n",
              "      <td>-0.463327</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2024-05-26</th>\n",
              "      <td>-0.129988</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2024-06-02</th>\n",
              "      <td>-0.463273</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2024-06-09</th>\n",
              "      <td>-0.796632</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2024-06-16</th>\n",
              "      <td>0.203355</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2024-06-23</th>\n",
              "      <td>-0.129993</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2024-06-30</th>\n",
              "      <td>-0.129954</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2024-07-07</th>\n",
              "      <td>-0.796641</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2024-07-14</th>\n",
              "      <td>0.536709</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2024-07-21</th>\n",
              "      <td>-0.129962</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2024-07-28</th>\n",
              "      <td>-0.463329</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2024-08-04</th>\n",
              "      <td>-0.129974</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2024-08-11</th>\n",
              "      <td>-0.463284</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2024-08-18</th>\n",
              "      <td>-1.129935</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2024-08-25</th>\n",
              "      <td>-0.463283</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2024-09-01</th>\n",
              "      <td>0.870011</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2024-09-08</th>\n",
              "      <td>-1.463260</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2024-09-15</th>\n",
              "      <td>0.536673</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2024-09-22</th>\n",
              "      <td>1.099177</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2024-09-29</th>\n",
              "      <td>-2.025775</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2024-10-06</th>\n",
              "      <td>-0.796655</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2024-10-13</th>\n",
              "      <td>0.870020</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2024-10-20</th>\n",
              "      <td>0.369997</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2024-10-27</th>\n",
              "      <td>-0.296665</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2024-11-03</th>\n",
              "      <td>0.536680</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2024-11-10</th>\n",
              "      <td>0.536695</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2024-11-17</th>\n",
              "      <td>-0.129979</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2024-11-24</th>\n",
              "      <td>-0.463306</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2024-12-01</th>\n",
              "      <td>0.536656</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2024-12-08</th>\n",
              "      <td>-0.463279</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2024-12-15</th>\n",
              "      <td>-0.463304</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2024-12-22</th>\n",
              "      <td>0.536684</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2024-12-29</th>\n",
              "      <td>0.870049</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2025-01-05</th>\n",
              "      <td>-0.463329</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2025-01-12</th>\n",
              "      <td>0.870019</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2025-01-19</th>\n",
              "      <td>-0.129953</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2025-01-26</th>\n",
              "      <td>-0.796640</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2025-02-02</th>\n",
              "      <td>0.536687</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2025-02-09</th>\n",
              "      <td>-0.163123</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2025-02-16</th>\n",
              "      <td>-0.912801</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2025-02-23</th>\n",
              "      <td>-0.162797</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2025-03-02</th>\n",
              "      <td>-0.412798</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2025-03-09</th>\n",
              "      <td>-0.412913</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div><br><label><b>dtype:</b> float64</label>"
            ]
          },
          "metadata": {},
          "execution_count": 112
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Plot the training data, test data, and the forecasted predictions using line plot for comparison\n",
        "train_3['Estimated  quantity demand per transaction_diff'].plot(legend=True, label='Train data')\n",
        "test_3['Estimated  quantity demand per transaction_diff'].plot(legend=True, label='Test data')\n",
        "test_3_predictions.plot(legend=True, label='Prediction')"
      ],
      "metadata": {
        "id": "2H6Si3_7kQIk",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 466
        },
        "outputId": "b3630b70-17a9-4a9d-fedc-1af8038b0058"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<Axes: xlabel='Date'>"
            ]
          },
          "metadata": {},
          "execution_count": 113
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Plot the training data, test data, and forecasted predictions on the same plot, and limit the x-axis to the specified date range\n",
        "train_3['Estimated  quantity demand per transaction_diff'].plot(legend=True, label='Train data')\n",
        "test_3['Estimated  quantity demand per transaction_diff'].plot(legend=True, label='Test data')\n",
        "test_3_predictions.plot(legend=True, label='Prediction',xlim=['2024-06-01','2024-12-01'])"
      ],
      "metadata": {
        "id": "PwQxLnVTlu6c",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 483
        },
        "outputId": "47803e60-3bfc-40c0-9d06-236c25f9d148"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<Axes: xlabel='Date'>"
            ]
          },
          "metadata": {},
          "execution_count": 114
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Calculate MAE\n",
        "mae = mean_absolute_error(test_3['Estimated  quantity demand per transaction_diff'], test_3_predictions)\n",
        "\n",
        "# Calculate MSE\n",
        "mse = mean_squared_error(test_3['Estimated  quantity demand per transaction_diff'], test_3_predictions)\n",
        "\n",
        "# Calculate RMSE\n",
        "rmse = np.sqrt(mse)\n",
        "\n",
        "# Calculate MPAE\n",
        "mape = mean_absolute_percentage_error(test_3['Estimated  quantity demand per transaction_diff'], test_3_predictions)\n",
        "# Print the results\n",
        "print(f'MAE: {mae}')\n",
        "print(f'MSE: {mse}')\n",
        "print(f'RMSE: {rmse}')\n",
        "print(f'MPAE: {mpae}%')"
      ],
      "metadata": {
        "id": "gWN3Wnnomu-K",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "8ebbc9d5-c65c-4249-a359-308faf060a98"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "MAE: 1.3691459715694556\n",
            "MSE: 2.8915494631258176\n",
            "RMSE: 1.7004556633813825\n",
            "MPAE: 98.96768114438522%\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "B2Vb5wCQmcki"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#SARIMAX"
      ],
      "metadata": {
        "id": "6_pn9PUvnFka"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "from pmdarima.arima import auto_arima\n"
      ],
      "metadata": {
        "id": "vDm4hqiuQlv7"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "mU3UB0yWd54W"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Split data for SARIMAX\n",
        "train_4 = df.iloc[:170]\n",
        "test_4 = df.iloc[169:]"
      ],
      "metadata": {
        "id": "KGttMGrKeGzD"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#Run the arima function with exogeneous parameter for SARIMAX\n",
        "auto_arima(df['Estimated  quantity demand per transaction_diff'], exogenous= df[['Inflation Rate_diff']], seasonal=True, m=52).summary()"
      ],
      "metadata": {
        "id": "WZ-LQGxcLD9s",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 473
        },
        "outputId": "ce7bc5b4-002d-49a9-9556-4d7db8141af7"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<class 'statsmodels.iolib.summary.Summary'>\n",
              "\"\"\"\n",
              "                                      SARIMAX Results                                      \n",
              "===========================================================================================\n",
              "Dep. Variable:                                   y   No. Observations:                  212\n",
              "Model:             SARIMAX(1, 0, 1)x(2, 0, [], 52)   Log Likelihood                -481.155\n",
              "Date:                             Thu, 15 May 2025   AIC                            972.310\n",
              "Time:                                     10:41:24   BIC                            989.093\n",
              "Sample:                                 02-14-2021   HQIC                           979.093\n",
              "                                      - 03-02-2025                                         \n",
              "Covariance Type:                               opg                                         \n",
              "==============================================================================\n",
              "                 coef    std err          z      P>|z|      [0.025      0.975]\n",
              "------------------------------------------------------------------------------\n",
              "ar.L1          0.6941      0.110      6.284      0.000       0.478       0.911\n",
              "ma.L1         -0.8598      0.093     -9.282      0.000      -1.041      -0.678\n",
              "ar.S.L52      -0.6202      0.062     -9.983      0.000      -0.742      -0.498\n",
              "ar.S.L104     -0.2452      0.075     -3.259      0.001      -0.393      -0.098\n",
              "sigma2         4.9535      0.369     13.420      0.000       4.230       5.677\n",
              "===================================================================================\n",
              "Ljung-Box (L1) (Q):                   0.15   Jarque-Bera (JB):                87.43\n",
              "Prob(Q):                              0.70   Prob(JB):                         0.00\n",
              "Heteroskedasticity (H):               0.30   Skew:                             0.37\n",
              "Prob(H) (two-sided):                  0.00   Kurtosis:                         6.06\n",
              "===================================================================================\n",
              "\n",
              "Warnings:\n",
              "[1] Covariance matrix calculated using the outer product of gradients (complex-step).\n",
              "\"\"\""
            ],
            "text/html": [
              "<table class=\"simpletable\">\n",
              "<caption>SARIMAX Results</caption>\n",
              "<tr>\n",
              "  <th>Dep. Variable:</th>                  <td>y</td>                <th>  No. Observations:  </th>    <td>212</td>  \n",
              "</tr>\n",
              "<tr>\n",
              "  <th>Model:</th>           <td>SARIMAX(1, 0, 1)x(2, 0, [], 52)</td> <th>  Log Likelihood     </th> <td>-481.155</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th>Date:</th>                   <td>Thu, 15 May 2025</td>         <th>  AIC                </th>  <td>972.310</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th>Time:</th>                       <td>10:41:24</td>             <th>  BIC                </th>  <td>989.093</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th>Sample:</th>                    <td>02-14-2021</td>            <th>  HQIC               </th>  <td>979.093</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th></th>                          <td>- 03-02-2025</td>           <th>                     </th>     <td> </td>   \n",
              "</tr>\n",
              "<tr>\n",
              "  <th>Covariance Type:</th>               <td>opg</td>               <th>                     </th>     <td> </td>   \n",
              "</tr>\n",
              "</table>\n",
              "<table class=\"simpletable\">\n",
              "<tr>\n",
              "      <td></td>         <th>coef</th>     <th>std err</th>      <th>z</th>      <th>P>|z|</th>  <th>[0.025</th>    <th>0.975]</th>  \n",
              "</tr>\n",
              "<tr>\n",
              "  <th>ar.L1</th>     <td>    0.6941</td> <td>    0.110</td> <td>    6.284</td> <td> 0.000</td> <td>    0.478</td> <td>    0.911</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th>ma.L1</th>     <td>   -0.8598</td> <td>    0.093</td> <td>   -9.282</td> <td> 0.000</td> <td>   -1.041</td> <td>   -0.678</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th>ar.S.L52</th>  <td>   -0.6202</td> <td>    0.062</td> <td>   -9.983</td> <td> 0.000</td> <td>   -0.742</td> <td>   -0.498</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th>ar.S.L104</th> <td>   -0.2452</td> <td>    0.075</td> <td>   -3.259</td> <td> 0.001</td> <td>   -0.393</td> <td>   -0.098</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th>sigma2</th>    <td>    4.9535</td> <td>    0.369</td> <td>   13.420</td> <td> 0.000</td> <td>    4.230</td> <td>    5.677</td>\n",
              "</tr>\n",
              "</table>\n",
              "<table class=\"simpletable\">\n",
              "<tr>\n",
              "  <th>Ljung-Box (L1) (Q):</th>     <td>0.15</td> <th>  Jarque-Bera (JB):  </th> <td>87.43</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th>Prob(Q):</th>                <td>0.70</td> <th>  Prob(JB):          </th> <td>0.00</td> \n",
              "</tr>\n",
              "<tr>\n",
              "  <th>Heteroskedasticity (H):</th> <td>0.30</td> <th>  Skew:              </th> <td>0.37</td> \n",
              "</tr>\n",
              "<tr>\n",
              "  <th>Prob(H) (two-sided):</th>    <td>0.00</td> <th>  Kurtosis:          </th> <td>6.06</td> \n",
              "</tr>\n",
              "</table><br/><br/>Warnings:<br/>[1] Covariance matrix calculated using the outer product of gradients (complex-step)."
            ],
            "text/latex": "\\begin{center}\n\\begin{tabular}{lclc}\n\\toprule\n\\textbf{Dep. Variable:}          &                y                & \\textbf{  No. Observations:  } &    212      \\\\\n\\textbf{Model:}                  & SARIMAX(1, 0, 1)x(2, 0, [], 52) & \\textbf{  Log Likelihood     } &  -481.155   \\\\\n\\textbf{Date:}                   &         Thu, 15 May 2025        & \\textbf{  AIC                } &  972.310    \\\\\n\\textbf{Time:}                   &             10:41:24            & \\textbf{  BIC                } &  989.093    \\\\\n\\textbf{Sample:}                 &            02-14-2021           & \\textbf{  HQIC               } &  979.093    \\\\\n\\textbf{}                        &           - 03-02-2025          & \\textbf{                     } &             \\\\\n\\textbf{Covariance Type:}        &               opg               & \\textbf{                     } &             \\\\\n\\bottomrule\n\\end{tabular}\n\\begin{tabular}{lcccccc}\n                   & \\textbf{coef} & \\textbf{std err} & \\textbf{z} & \\textbf{P$> |$z$|$} & \\textbf{[0.025} & \\textbf{0.975]}  \\\\\n\\midrule\n\\textbf{ar.L1}     &       0.6941  &        0.110     &     6.284  &         0.000        &        0.478    &        0.911     \\\\\n\\textbf{ma.L1}     &      -0.8598  &        0.093     &    -9.282  &         0.000        &       -1.041    &       -0.678     \\\\\n\\textbf{ar.S.L52}  &      -0.6202  &        0.062     &    -9.983  &         0.000        &       -0.742    &       -0.498     \\\\\n\\textbf{ar.S.L104} &      -0.2452  &        0.075     &    -3.259  &         0.001        &       -0.393    &       -0.098     \\\\\n\\textbf{sigma2}    &       4.9535  &        0.369     &    13.420  &         0.000        &        4.230    &        5.677     \\\\\n\\bottomrule\n\\end{tabular}\n\\begin{tabular}{lclc}\n\\textbf{Ljung-Box (L1) (Q):}     & 0.15 & \\textbf{  Jarque-Bera (JB):  } & 87.43  \\\\\n\\textbf{Prob(Q):}                & 0.70 & \\textbf{  Prob(JB):          } &  0.00  \\\\\n\\textbf{Heteroskedasticity (H):} & 0.30 & \\textbf{  Skew:              } &  0.37  \\\\\n\\textbf{Prob(H) (two-sided):}    & 0.00 & \\textbf{  Kurtosis:          } &  6.06  \\\\\n\\bottomrule\n\\end{tabular}\n%\\caption{SARIMAX Results}\n\\end{center}\n\nWarnings: \\newline\n [1] Covariance matrix calculated using the outer product of gradients (complex-step)."
          },
          "metadata": {},
          "execution_count": 120
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Train the model on SARIMAX model with exogeneous variable\n",
        "sarimax_model = SARIMAX(train_4[['Estimated  quantity demand per transaction_diff']], exog=train_4[['Inflation Rate_diff']], order=(1,0,1), seasonal_order=(2,0,0,12),\n",
        "              enforce_invertibility=False)\n",
        "sarimax_results = sarimax_model.fit()\n",
        "sarimax_results.summary()"
      ],
      "metadata": {
        "id": "nhclAZnMFBib",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 494
        },
        "outputId": "aacb4981-5a3f-475f-c453-0f17cc179aa7"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<class 'statsmodels.iolib.summary.Summary'>\n",
              "\"\"\"\n",
              "                                              SARIMAX Results                                              \n",
              "===========================================================================================================\n",
              "Dep. Variable:     Estimated  quantity demand per transaction_diff   No. Observations:                  170\n",
              "Model:                             SARIMAX(1, 0, 1)x(2, 0, [], 12)   Log Likelihood                -410.940\n",
              "Date:                                             Thu, 15 May 2025   AIC                            833.881\n",
              "Time:                                                     10:41:25   BIC                            852.695\n",
              "Sample:                                                 02-14-2021   HQIC                           841.516\n",
              "                                                      - 05-12-2024                                         \n",
              "Covariance Type:                                               opg                                         \n",
              "=======================================================================================\n",
              "                          coef    std err          z      P>|z|      [0.025      0.975]\n",
              "---------------------------------------------------------------------------------------\n",
              "Inflation Rate_diff    -0.2276      0.049     -4.666      0.000      -0.323      -0.132\n",
              "ar.L1                   0.7592      0.051     14.765      0.000       0.658       0.860\n",
              "ma.L1                  -1.0000    106.973     -0.009      0.993    -210.663     208.663\n",
              "ar.S.L12               -0.0730      0.116     -0.631      0.528      -0.300       0.154\n",
              "ar.S.L24                0.0785      0.063      1.242      0.214      -0.045       0.202\n",
              "sigma2                  7.2186    772.458      0.009      0.993   -1506.770    1521.208\n",
              "===================================================================================\n",
              "Ljung-Box (L1) (Q):                   0.32   Jarque-Bera (JB):                75.32\n",
              "Prob(Q):                              0.57   Prob(JB):                         0.00\n",
              "Heteroskedasticity (H):               0.38   Skew:                             0.33\n",
              "Prob(H) (two-sided):                  0.00   Kurtosis:                         6.19\n",
              "===================================================================================\n",
              "\n",
              "Warnings:\n",
              "[1] Covariance matrix calculated using the outer product of gradients (complex-step).\n",
              "\"\"\""
            ],
            "text/html": [
              "<table class=\"simpletable\">\n",
              "<caption>SARIMAX Results</caption>\n",
              "<tr>\n",
              "  <th>Dep. Variable:</th>   <td>Estimated  quantity demand per transaction_diff</td> <th>  No. Observations:  </th>    <td>170</td>  \n",
              "</tr>\n",
              "<tr>\n",
              "  <th>Model:</th>                   <td>SARIMAX(1, 0, 1)x(2, 0, [], 12)</td>         <th>  Log Likelihood     </th> <td>-410.940</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th>Date:</th>                           <td>Thu, 15 May 2025</td>                 <th>  AIC                </th>  <td>833.881</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th>Time:</th>                               <td>10:41:25</td>                     <th>  BIC                </th>  <td>852.695</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th>Sample:</th>                            <td>02-14-2021</td>                    <th>  HQIC               </th>  <td>841.516</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th></th>                                  <td>- 05-12-2024</td>                   <th>                     </th>     <td> </td>   \n",
              "</tr>\n",
              "<tr>\n",
              "  <th>Covariance Type:</th>                       <td>opg</td>                       <th>                     </th>     <td> </td>   \n",
              "</tr>\n",
              "</table>\n",
              "<table class=\"simpletable\">\n",
              "<tr>\n",
              "           <td></td>              <th>coef</th>     <th>std err</th>      <th>z</th>      <th>P>|z|</th>  <th>[0.025</th>    <th>0.975]</th>  \n",
              "</tr>\n",
              "<tr>\n",
              "  <th>Inflation Rate_diff</th> <td>   -0.2276</td> <td>    0.049</td> <td>   -4.666</td> <td> 0.000</td> <td>   -0.323</td> <td>   -0.132</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th>ar.L1</th>               <td>    0.7592</td> <td>    0.051</td> <td>   14.765</td> <td> 0.000</td> <td>    0.658</td> <td>    0.860</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th>ma.L1</th>               <td>   -1.0000</td> <td>  106.973</td> <td>   -0.009</td> <td> 0.993</td> <td> -210.663</td> <td>  208.663</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th>ar.S.L12</th>            <td>   -0.0730</td> <td>    0.116</td> <td>   -0.631</td> <td> 0.528</td> <td>   -0.300</td> <td>    0.154</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th>ar.S.L24</th>            <td>    0.0785</td> <td>    0.063</td> <td>    1.242</td> <td> 0.214</td> <td>   -0.045</td> <td>    0.202</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th>sigma2</th>              <td>    7.2186</td> <td>  772.458</td> <td>    0.009</td> <td> 0.993</td> <td>-1506.770</td> <td> 1521.208</td>\n",
              "</tr>\n",
              "</table>\n",
              "<table class=\"simpletable\">\n",
              "<tr>\n",
              "  <th>Ljung-Box (L1) (Q):</th>     <td>0.32</td> <th>  Jarque-Bera (JB):  </th> <td>75.32</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th>Prob(Q):</th>                <td>0.57</td> <th>  Prob(JB):          </th> <td>0.00</td> \n",
              "</tr>\n",
              "<tr>\n",
              "  <th>Heteroskedasticity (H):</th> <td>0.38</td> <th>  Skew:              </th> <td>0.33</td> \n",
              "</tr>\n",
              "<tr>\n",
              "  <th>Prob(H) (two-sided):</th>    <td>0.00</td> <th>  Kurtosis:          </th> <td>6.19</td> \n",
              "</tr>\n",
              "</table><br/><br/>Warnings:<br/>[1] Covariance matrix calculated using the outer product of gradients (complex-step)."
            ],
            "text/latex": "\\begin{center}\n\\begin{tabular}{lclc}\n\\toprule\n\\textbf{Dep. Variable:}          & Estimated  quantity demand per transaction\\_diff & \\textbf{  No. Observations:  } &    170      \\\\\n\\textbf{Model:}                  &         SARIMAX(1, 0, 1)x(2, 0, [], 12)          & \\textbf{  Log Likelihood     } &  -410.940   \\\\\n\\textbf{Date:}                   &                 Thu, 15 May 2025                 & \\textbf{  AIC                } &  833.881    \\\\\n\\textbf{Time:}                   &                     10:41:25                     & \\textbf{  BIC                } &  852.695    \\\\\n\\textbf{Sample:}                 &                    02-14-2021                    & \\textbf{  HQIC               } &  841.516    \\\\\n\\textbf{}                        &                   - 05-12-2024                   & \\textbf{                     } &             \\\\\n\\textbf{Covariance Type:}        &                       opg                        & \\textbf{                     } &             \\\\\n\\bottomrule\n\\end{tabular}\n\\begin{tabular}{lcccccc}\n                              & \\textbf{coef} & \\textbf{std err} & \\textbf{z} & \\textbf{P$> |$z$|$} & \\textbf{[0.025} & \\textbf{0.975]}  \\\\\n\\midrule\n\\textbf{Inflation Rate\\_diff} &      -0.2276  &        0.049     &    -4.666  &         0.000        &       -0.323    &       -0.132     \\\\\n\\textbf{ar.L1}                &       0.7592  &        0.051     &    14.765  &         0.000        &        0.658    &        0.860     \\\\\n\\textbf{ma.L1}                &      -1.0000  &      106.973     &    -0.009  &         0.993        &     -210.663    &      208.663     \\\\\n\\textbf{ar.S.L12}             &      -0.0730  &        0.116     &    -0.631  &         0.528        &       -0.300    &        0.154     \\\\\n\\textbf{ar.S.L24}             &       0.0785  &        0.063     &     1.242  &         0.214        &       -0.045    &        0.202     \\\\\n\\textbf{sigma2}               &       7.2186  &      772.458     &     0.009  &         0.993        &    -1506.770    &     1521.208     \\\\\n\\bottomrule\n\\end{tabular}\n\\begin{tabular}{lclc}\n\\textbf{Ljung-Box (L1) (Q):}     & 0.32 & \\textbf{  Jarque-Bera (JB):  } & 75.32  \\\\\n\\textbf{Prob(Q):}                & 0.57 & \\textbf{  Prob(JB):          } &  0.00  \\\\\n\\textbf{Heteroskedasticity (H):} & 0.38 & \\textbf{  Skew:              } &  0.33  \\\\\n\\textbf{Prob(H) (two-sided):}    & 0.00 & \\textbf{  Kurtosis:          } &  6.19  \\\\\n\\bottomrule\n\\end{tabular}\n%\\caption{SARIMAX Results}\n\\end{center}\n\nWarnings: \\newline\n [1] Covariance matrix calculated using the outer product of gradients (complex-step)."
          },
          "metadata": {},
          "execution_count": 121
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Make predictions on the trained model\n",
        "start = len(train_4)\n",
        "end =len(train_4) + len(test_4)-1\n",
        "test_4_predictions=sarimax_results.predict(start=start, end=end, exog=test_4[['Inflation Rate_diff']], typ='levels').rename('SARIMAX Predictions')"
      ],
      "metadata": {
        "id": "hGS1Ql6EHclU"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "test_4_predictions"
      ],
      "metadata": {
        "id": "oMIsDWZhIHDV",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "outputId": "cecec8fb-e8b2-481f-cbb0-a1da6d46a6b3"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "2024-05-19    1.040779\n",
              "2024-05-26    0.337971\n",
              "2024-06-02    0.413537\n",
              "2024-06-09    0.237365\n",
              "2024-06-16    0.090111\n",
              "2024-06-23    0.205008\n",
              "2024-06-30    0.363575\n",
              "2024-07-07   -0.124223\n",
              "2024-07-14    0.229342\n",
              "2024-07-21    0.264198\n",
              "2024-07-28   -0.066544\n",
              "2024-08-04    0.102568\n",
              "2024-08-11    1.169359\n",
              "2024-08-18   -0.027529\n",
              "2024-08-25   -0.093290\n",
              "2024-09-01   -0.017269\n",
              "2024-09-08    1.992321\n",
              "2024-09-15    0.070262\n",
              "2024-09-22   -0.178300\n",
              "2024-09-29    0.091434\n",
              "2024-10-06    0.002815\n",
              "2024-10-13    0.496136\n",
              "2024-10-20    0.127912\n",
              "2024-10-27   -0.163177\n",
              "2024-11-03    0.091992\n",
              "2024-11-10   -0.425850\n",
              "2024-11-17    0.039830\n",
              "2024-11-24    0.032823\n",
              "2024-12-01    0.001504\n",
              "2024-12-08   -1.399689\n",
              "2024-12-15    0.041734\n",
              "2024-12-22   -0.016280\n",
              "2024-12-29    0.000042\n",
              "2025-01-05    0.027790\n",
              "2025-01-12   -0.742700\n",
              "2025-01-19    0.020004\n",
              "2025-01-26   -0.016704\n",
              "2025-02-02   -0.004270\n",
              "2025-02-09   -0.101234\n",
              "2025-02-16   -0.003735\n",
              "2025-02-23    0.006243\n",
              "2025-03-02    0.004706\n",
              "2025-03-09    0.665660\n",
              "Freq: W-SUN, Name: SARIMAX Predictions, dtype: float64"
            ],
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>SARIMAX Predictions</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>2024-05-19</th>\n",
              "      <td>1.040779</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2024-05-26</th>\n",
              "      <td>0.337971</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2024-06-02</th>\n",
              "      <td>0.413537</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2024-06-09</th>\n",
              "      <td>0.237365</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2024-06-16</th>\n",
              "      <td>0.090111</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2024-06-23</th>\n",
              "      <td>0.205008</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2024-06-30</th>\n",
              "      <td>0.363575</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2024-07-07</th>\n",
              "      <td>-0.124223</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2024-07-14</th>\n",
              "      <td>0.229342</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2024-07-21</th>\n",
              "      <td>0.264198</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2024-07-28</th>\n",
              "      <td>-0.066544</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2024-08-04</th>\n",
              "      <td>0.102568</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2024-08-11</th>\n",
              "      <td>1.169359</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2024-08-18</th>\n",
              "      <td>-0.027529</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2024-08-25</th>\n",
              "      <td>-0.093290</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2024-09-01</th>\n",
              "      <td>-0.017269</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2024-09-08</th>\n",
              "      <td>1.992321</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2024-09-15</th>\n",
              "      <td>0.070262</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2024-09-22</th>\n",
              "      <td>-0.178300</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2024-09-29</th>\n",
              "      <td>0.091434</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2024-10-06</th>\n",
              "      <td>0.002815</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2024-10-13</th>\n",
              "      <td>0.496136</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2024-10-20</th>\n",
              "      <td>0.127912</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2024-10-27</th>\n",
              "      <td>-0.163177</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2024-11-03</th>\n",
              "      <td>0.091992</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2024-11-10</th>\n",
              "      <td>-0.425850</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2024-11-17</th>\n",
              "      <td>0.039830</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2024-11-24</th>\n",
              "      <td>0.032823</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2024-12-01</th>\n",
              "      <td>0.001504</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2024-12-08</th>\n",
              "      <td>-1.399689</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2024-12-15</th>\n",
              "      <td>0.041734</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2024-12-22</th>\n",
              "      <td>-0.016280</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2024-12-29</th>\n",
              "      <td>0.000042</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2025-01-05</th>\n",
              "      <td>0.027790</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2025-01-12</th>\n",
              "      <td>-0.742700</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2025-01-19</th>\n",
              "      <td>0.020004</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2025-01-26</th>\n",
              "      <td>-0.016704</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2025-02-02</th>\n",
              "      <td>-0.004270</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2025-02-09</th>\n",
              "      <td>-0.101234</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2025-02-16</th>\n",
              "      <td>-0.003735</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2025-02-23</th>\n",
              "      <td>0.006243</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2025-03-02</th>\n",
              "      <td>0.004706</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2025-03-09</th>\n",
              "      <td>0.665660</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div><br><label><b>dtype:</b> float64</label>"
            ]
          },
          "metadata": {},
          "execution_count": 123
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Plot the actual differenced values and SARIMA model predictions on the same graph to visually compare forecast performance\n",
        "test_4['Estimated  quantity demand per transaction_diff'].plot(legend=True, figsize=(10,5))\n",
        "test_4_predictions.plot(legend=True)"
      ],
      "metadata": {
        "id": "kEhyOjH_ILjk",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 498
        },
        "outputId": "ef3d3a26-ac52-4ee5-910e-0d011ea71733"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<Axes: xlabel='Date'>"
            ]
          },
          "metadata": {},
          "execution_count": 124
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x500 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Calculate MAE\n",
        "mae = mean_absolute_error(test_4['Estimated  quantity demand per transaction_diff'], test_4_predictions)\n",
        "\n",
        "# Calculate MSE\n",
        "mse = mean_squared_error(test_4['Estimated  quantity demand per transaction_diff'], test_4_predictions)\n",
        "\n",
        "# Calculate RMSE\n",
        "rmse = np.sqrt(mse)\n",
        "\n",
        "# Calculate MPAE\n",
        "mpae = mean_absolute_percentage_error(test_4['Estimated  quantity demand per transaction_diff'], test_4_predictions)\n",
        "# Print the results\n",
        "print(f'MAE: {mae}')\n",
        "print(f'MSE: {mse}')\n",
        "print(f'RMSE: {rmse}')\n",
        "print(f'MPAE: {mpae}%')"
      ],
      "metadata": {
        "id": "GYm521ziI-b1",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "00eb733d-16e1-4a63-f8a1-c84b5f8b138f"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "MAE: 1.4811080392134386\n",
            "MSE: 3.517605860108979\n",
            "RMSE: 1.8755281549763465\n",
            "MPAE: 214782862094857.3%\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "CjC5p5uZKV3x"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#VAR"
      ],
      "metadata": {
        "id": "VuJ2Sf-VKaJN"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "from statsmodels.tsa.api import VAR\n",
        "from numpy.linalg import LinAlgError"
      ],
      "metadata": {
        "id": "6GAwRwgdKcN5"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#Split data for VAR\n",
        "nobs = 43\n",
        "train_5 = df.iloc[:-nobs]\n",
        "test_5 = df.iloc[-nobs:]"
      ],
      "metadata": {
        "id": "7ExCyDXBLrgx"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#Fit model on train set\n",
        "model= VAR(train_5)\n",
        "for p in range(1, 15):\n",
        "    try:\n",
        "        results = model.fit(p)\n",
        "        print(f'Lag order: {p} AIC: {results.aic}')\n",
        "    except LinAlgError:\n",
        "        print(f'Lag order: {p} caused a LinAlgError (matrix not positive definite). Skipping...')"
      ],
      "metadata": {
        "id": "ghch2oXE33WW",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "5965ab3a-6b8b-4c39-f4ff-b6d21fde4d95"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Lag order: 1 caused a LinAlgError (matrix not positive definite). Skipping...\n",
            "Lag order: 2 AIC: -62.875291354258586\n",
            "Lag order: 3 caused a LinAlgError (matrix not positive definite). Skipping...\n",
            "Lag order: 4 caused a LinAlgError (matrix not positive definite). Skipping...\n",
            "Lag order: 5 caused a LinAlgError (matrix not positive definite). Skipping...\n",
            "Lag order: 6 AIC: -61.633609483802786\n",
            "Lag order: 7 caused a LinAlgError (matrix not positive definite). Skipping...\n",
            "Lag order: 8 caused a LinAlgError (matrix not positive definite). Skipping...\n",
            "Lag order: 9 caused a LinAlgError (matrix not positive definite). Skipping...\n",
            "Lag order: 10 caused a LinAlgError (matrix not positive definite). Skipping...\n",
            "Lag order: 11 caused a LinAlgError (matrix not positive definite). Skipping...\n",
            "Lag order: 12 AIC: -62.17314917028965\n",
            "Lag order: 13 caused a LinAlgError (matrix not positive definite). Skipping...\n",
            "Lag order: 14 caused a LinAlgError (matrix not positive definite). Skipping...\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Fit the model using lag order 5, as it produced the lowest AIC value and avoided matrix errors\n",
        "results = model.fit(2)"
      ],
      "metadata": {
        "id": "00uIn5jtlvv7"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Display summary of result\n",
        "results.summary()"
      ],
      "metadata": {
        "id": "8kwsydzOmBFn",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "ee6704a8-1ca8-44f1-ebe0-91edbf027648"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "  Summary of Regression Results   \n",
              "==================================\n",
              "Model:                         VAR\n",
              "Method:                        OLS\n",
              "Date:           Thu, 15, May, 2025\n",
              "Time:                     10:47:15\n",
              "--------------------------------------------------------------------\n",
              "No. of Equations:         5.00000    BIC:                   -61.8484\n",
              "Nobs:                     167.000    HQIC:                  -62.4585\n",
              "Log likelihood:           4120.27    FPE:                4.94337e-28\n",
              "AIC:                     -62.8753    Det(Omega_mle):    -6.00425e-46\n",
              "--------------------------------------------------------------------\n",
              "Results for equation Estimated  quantity demand per transaction\n",
              "=====================================================================================================================\n",
              "                                                        coefficient       std. error           t-stat            prob\n",
              "---------------------------------------------------------------------------------------------------------------------\n",
              "const                                                     26.269660         6.063521            4.332           0.000\n",
              "L1.Estimated  quantity demand per transaction              0.490137              NAN              NAN             NAN\n",
              "L1.Inflation Rate                                         -0.001359         0.103483           -0.013           0.990\n",
              "L1.Estimated  quantity demand per transaction_diff         0.241990              NAN              NAN             NAN\n",
              "L1.Inflation Rate_diff                                     0.069509         0.120683            0.576           0.565\n",
              "L1.TES_mul_12                                              0.162464         0.293860            0.553           0.580\n",
              "L2.Estimated  quantity demand per transaction              0.248147              NAN              NAN             NAN\n",
              "L2.Inflation Rate                                         -0.070868         0.132168           -0.536           0.592\n",
              "L2.Estimated  quantity demand per transaction_diff        -0.128306         0.077940           -1.646           0.100\n",
              "L2.Inflation Rate_diff                                    -0.191813         0.078316           -2.449           0.014\n",
              "L2.TES_mul_12                                              0.127146         0.294988            0.431           0.666\n",
              "=====================================================================================================================\n",
              "\n",
              "Results for equation Inflation Rate\n",
              "=====================================================================================================================\n",
              "                                                        coefficient       std. error           t-stat            prob\n",
              "---------------------------------------------------------------------------------------------------------------------\n",
              "const                                                     -9.644924         6.445183           -1.496           0.135\n",
              "L1.Estimated  quantity demand per transaction              0.086939              NAN              NAN             NAN\n",
              "L1.Inflation Rate                                          0.676101         0.109997            6.147           0.000\n",
              "L1.Estimated  quantity demand per transaction_diff         0.076044              NAN              NAN             NAN\n",
              "L1.Inflation Rate_diff                                     0.337779         0.128279            2.633           0.008\n",
              "L1.TES_mul_12                                              0.259318         0.312357            0.830           0.406\n",
              "L2.Estimated  quantity demand per transaction              0.010895              NAN              NAN             NAN\n",
              "L2.Inflation Rate                                          0.338323         0.140487            2.408           0.016\n",
              "L2.Estimated  quantity demand per transaction_diff        -0.100563         0.082846           -1.214           0.225\n",
              "L2.Inflation Rate_diff                                    -0.050102         0.083245           -0.602           0.547\n",
              "L2.TES_mul_12                                             -0.095846         0.313555           -0.306           0.760\n",
              "=====================================================================================================================\n",
              "\n",
              "Results for equation Estimated  quantity demand per transaction_diff\n",
              "=====================================================================================================================\n",
              "                                                        coefficient       std. error           t-stat            prob\n",
              "---------------------------------------------------------------------------------------------------------------------\n",
              "const                                                     26.269660         6.063521            4.332           0.000\n",
              "L1.Estimated  quantity demand per transaction             -0.176530              NAN              NAN             NAN\n",
              "L1.Inflation Rate                                         -0.001359         0.103483           -0.013           0.990\n",
              "L1.Estimated  quantity demand per transaction_diff        -0.091343              NAN              NAN             NAN\n",
              "L1.Inflation Rate_diff                                     0.069509         0.120683            0.576           0.565\n",
              "L1.TES_mul_12                                              0.162464         0.293860            0.553           0.580\n",
              "L2.Estimated  quantity demand per transaction             -0.085186              NAN              NAN             NAN\n",
              "L2.Inflation Rate                                         -0.070868         0.132168           -0.536           0.592\n",
              "L2.Estimated  quantity demand per transaction_diff        -0.128306         0.077940           -1.646           0.100\n",
              "L2.Inflation Rate_diff                                    -0.191813         0.078316           -2.449           0.014\n",
              "L2.TES_mul_12                                              0.127146         0.294988            0.431           0.666\n",
              "=====================================================================================================================\n",
              "\n",
              "Results for equation Inflation Rate_diff\n",
              "=====================================================================================================================\n",
              "                                                        coefficient       std. error           t-stat            prob\n",
              "---------------------------------------------------------------------------------------------------------------------\n",
              "const                                                     -9.644924         6.445183           -1.496           0.135\n",
              "L1.Estimated  quantity demand per transaction              0.086939              NAN              NAN             NAN\n",
              "L1.Inflation Rate                                          0.009435         0.109997            0.086           0.932\n",
              "L1.Estimated  quantity demand per transaction_diff         0.076044              NAN              NAN             NAN\n",
              "L1.Inflation Rate_diff                                     0.004446         0.128279            0.035           0.972\n",
              "L1.TES_mul_12                                              0.259318         0.312357            0.830           0.406\n",
              "L2.Estimated  quantity demand per transaction              0.010895              NAN              NAN             NAN\n",
              "L2.Inflation Rate                                          0.004989         0.140487            0.036           0.972\n",
              "L2.Estimated  quantity demand per transaction_diff        -0.100563         0.082846           -1.214           0.225\n",
              "L2.Inflation Rate_diff                                    -0.050102         0.083245           -0.602           0.547\n",
              "L2.TES_mul_12                                             -0.095846         0.313555           -0.306           0.760\n",
              "=====================================================================================================================\n",
              "\n",
              "Results for equation TES_mul_12\n",
              "=====================================================================================================================\n",
              "                                                        coefficient       std. error           t-stat            prob\n",
              "---------------------------------------------------------------------------------------------------------------------\n",
              "const                                                      2.741054         1.683819            1.628           0.104\n",
              "L1.Estimated  quantity demand per transaction             -0.014236              NAN              NAN             NAN\n",
              "L1.Inflation Rate                                          0.003706         0.028737            0.129           0.897\n",
              "L1.Estimated  quantity demand per transaction_diff        -0.001622              NAN              NAN             NAN\n",
              "L1.Inflation Rate_diff                                     0.015289         0.033513            0.456           0.648\n",
              "L1.TES_mul_12                                             -0.095491         0.081604           -1.170           0.242\n",
              "L2.Estimated  quantity demand per transaction             -0.012615              NAN              NAN             NAN\n",
              "L2.Inflation Rate                                         -0.011583         0.036703           -0.316           0.752\n",
              "L2.Estimated  quantity demand per transaction_diff         0.003414         0.021644            0.158           0.875\n",
              "L2.Inflation Rate_diff                                    -0.012572         0.021748           -0.578           0.563\n",
              "L2.TES_mul_12                                              0.050137         0.081917            0.612           0.541\n",
              "=====================================================================================================================\n",
              "\n",
              "Correlation matrix of residuals\n",
              "                                                   Estimated  quantity demand per transaction  Inflation Rate  Estimated  quantity demand per transaction_diff  Inflation Rate_diff  TES_mul_12\n",
              "Estimated  quantity demand per transaction                                           1.000000       -0.107721                                         1.000000            -0.107721    0.195551\n",
              "Inflation Rate                                                                      -0.107721        1.000000                                        -0.107721             1.000000    0.040706\n",
              "Estimated  quantity demand per transaction_diff                                      1.000000       -0.107721                                         1.000000            -0.107721    0.195551\n",
              "Inflation Rate_diff                                                                 -0.107721        1.000000                                        -0.107721             1.000000    0.040706\n",
              "TES_mul_12                                                                           0.195551        0.040706                                         0.195551             0.040706    1.000000\n",
              "\n"
            ]
          },
          "metadata": {},
          "execution_count": 138
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Make predictions of the test data\n",
        "n_obs = len(test_5)\n",
        "forecast = results.forecast(y=model.endog, steps=n_obs)"
      ],
      "metadata": {
        "id": "F2Tq-Sa0mJn-"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Create a DataFrame to store the forecasted values, using the test set's index and the training set's columns\n",
        "forecast_df = pd.DataFrame(forecast, index=test_5.index, columns=train_5.columns)"
      ],
      "metadata": {
        "id": "90a0goOumZaw"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Extract the forecasted values for 'Estimated quantity demand per transaction_diff'and rename the column to 'Predicted demand' for clarity\n",
        "demand_forecast = forecast_df['Estimated  quantity demand per transaction_diff'].rename('Predicted demand')"
      ],
      "metadata": {
        "id": "CImdqH9JmrnP"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Display the predicted values\n",
        "demand_forecast"
      ],
      "metadata": {
        "id": "IWHIrZ4cnBhI",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "outputId": "7ecdb6a7-deae-4a3c-d718-137c73e67c20"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Date\n",
              "2024-05-12    0.866528\n",
              "2024-05-19   -0.301014\n",
              "2024-05-26    0.082289\n",
              "2024-06-02    0.308501\n",
              "2024-06-09    0.183755\n",
              "2024-06-16    0.068687\n",
              "2024-06-23    0.055066\n",
              "2024-06-30    0.052423\n",
              "2024-07-07    0.031715\n",
              "2024-07-14    0.011970\n",
              "2024-07-21    0.000972\n",
              "2024-07-28   -0.006485\n",
              "2024-08-04   -0.013348\n",
              "2024-08-11   -0.019043\n",
              "2024-08-18   -0.023205\n",
              "2024-08-25   -0.026289\n",
              "2024-09-01   -0.028682\n",
              "2024-09-08   -0.030505\n",
              "2024-09-15   -0.031835\n",
              "2024-09-22   -0.032778\n",
              "2024-09-29   -0.033427\n",
              "2024-10-06   -0.033844\n",
              "2024-10-13   -0.034075\n",
              "2024-10-20   -0.034161\n",
              "2024-10-27   -0.034133\n",
              "2024-11-03   -0.034015\n",
              "2024-11-10   -0.033829\n",
              "2024-11-17   -0.033589\n",
              "2024-11-24   -0.033307\n",
              "2024-12-01   -0.032994\n",
              "2024-12-08   -0.032657\n",
              "2024-12-15   -0.032303\n",
              "2024-12-22   -0.031935\n",
              "2024-12-29   -0.031559\n",
              "2025-01-05   -0.031177\n",
              "2025-01-12   -0.030790\n",
              "2025-01-19   -0.030403\n",
              "2025-01-26   -0.030014\n",
              "2025-02-02   -0.029627\n",
              "2025-02-09   -0.029241\n",
              "2025-02-16   -0.028858\n",
              "2025-02-23   -0.028478\n",
              "2025-03-02   -0.028101\n",
              "Freq: W-SUN, Name: Predicted demand, dtype: float64"
            ],
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Predicted demand</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Date</th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>2024-05-12</th>\n",
              "      <td>0.866528</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2024-05-19</th>\n",
              "      <td>-0.301014</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2024-05-26</th>\n",
              "      <td>0.082289</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2024-06-02</th>\n",
              "      <td>0.308501</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2024-06-09</th>\n",
              "      <td>0.183755</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2024-06-16</th>\n",
              "      <td>0.068687</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2024-06-23</th>\n",
              "      <td>0.055066</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2024-06-30</th>\n",
              "      <td>0.052423</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2024-07-07</th>\n",
              "      <td>0.031715</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2024-07-14</th>\n",
              "      <td>0.011970</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2024-07-21</th>\n",
              "      <td>0.000972</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2024-07-28</th>\n",
              "      <td>-0.006485</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2024-08-04</th>\n",
              "      <td>-0.013348</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2024-08-11</th>\n",
              "      <td>-0.019043</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2024-08-18</th>\n",
              "      <td>-0.023205</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2024-08-25</th>\n",
              "      <td>-0.026289</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2024-09-01</th>\n",
              "      <td>-0.028682</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2024-09-08</th>\n",
              "      <td>-0.030505</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2024-09-15</th>\n",
              "      <td>-0.031835</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2024-09-22</th>\n",
              "      <td>-0.032778</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2024-09-29</th>\n",
              "      <td>-0.033427</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2024-10-06</th>\n",
              "      <td>-0.033844</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2024-10-13</th>\n",
              "      <td>-0.034075</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2024-10-20</th>\n",
              "      <td>-0.034161</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2024-10-27</th>\n",
              "      <td>-0.034133</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2024-11-03</th>\n",
              "      <td>-0.034015</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2024-11-10</th>\n",
              "      <td>-0.033829</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2024-11-17</th>\n",
              "      <td>-0.033589</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2024-11-24</th>\n",
              "      <td>-0.033307</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2024-12-01</th>\n",
              "      <td>-0.032994</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2024-12-08</th>\n",
              "      <td>-0.032657</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2024-12-15</th>\n",
              "      <td>-0.032303</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2024-12-22</th>\n",
              "      <td>-0.031935</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2024-12-29</th>\n",
              "      <td>-0.031559</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2025-01-05</th>\n",
              "      <td>-0.031177</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2025-01-12</th>\n",
              "      <td>-0.030790</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2025-01-19</th>\n",
              "      <td>-0.030403</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2025-01-26</th>\n",
              "      <td>-0.030014</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2025-02-02</th>\n",
              "      <td>-0.029627</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2025-02-09</th>\n",
              "      <td>-0.029241</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2025-02-16</th>\n",
              "      <td>-0.028858</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2025-02-23</th>\n",
              "      <td>-0.028478</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2025-03-02</th>\n",
              "      <td>-0.028101</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div><br><label><b>dtype:</b> float64</label>"
            ]
          },
          "metadata": {},
          "execution_count": 142
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Plot test data and predicted values\n",
        "test_5['Estimated  quantity demand per transaction_diff'].plot(legend=True, figsize=(10,5))\n",
        "demand_forecast.plot(legend=True)"
      ],
      "metadata": {
        "id": "msnCIcE8nILa",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 498
        },
        "outputId": "b31d10bf-6556-4fac-ce69-b87d4528818f"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<Axes: xlabel='Date'>"
            ]
          },
          "metadata": {},
          "execution_count": 143
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x500 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Calculate MAE\n",
        "mae = mean_absolute_error(test_5['Estimated  quantity demand per transaction_diff'], demand_forecast)\n",
        "\n",
        "# Calculate MSE\n",
        "mse = mean_squared_error(test_5['Estimated  quantity demand per transaction_diff'], demand_forecast)\n",
        "\n",
        "# Calculate RMSE\n",
        "rmse = np.sqrt(mse)\n",
        "\n",
        "# Calculate MPAE\n",
        "mpae = mean_absolute_percentage_error(test_5['Estimated  quantity demand per transaction_diff'], demand_forecast)\n",
        "# Print the results\n",
        "print(f'MAE: {mae}')\n",
        "print(f'MSE: {mse}')\n",
        "print(f'RMSE: {rmse}')\n",
        "print(f'MPAE: {mpae}%')"
      ],
      "metadata": {
        "id": "daZTcVpJnaiX",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "c2e80f46-d46b-49b1-89a8-ca71aacc6061"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "MAE: 1.43617565650742\n",
            "MSE: 3.2795103460303126\n",
            "RMSE: 1.8109418394941104\n",
            "MPAE: 74280503765526.38%\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "eW45TRjroRfX"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "HtbT1gT4KD4O"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "fI46mPTeKEUF"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Create a dictionary to store performance metrics for all models\n",
        "model_metrics = {\n",
        "    \"ARIMA\": {\n",
        "        \"MAE\": mean_absolute_error(test, test_predictions),\n",
        "        \"MSE\": mean_squared_error(test, test_predictions),\n",
        "        \"MAPE\": mean_absolute_percentage_error(test, test_predictions),\n",
        "        \"RMSE\": np.sqrt(mean_squared_error(test, test_predictions)),\n",
        "    },\n",
        "   \"SARIMA\": {\n",
        "        \"MAE\": mean_absolute_error(test_2['Estimated  quantity demand per transaction_diff'], test_2_predictions),\n",
        "        \"MSE\": mean_squared_error(test_2['Estimated  quantity demand per transaction_diff'], test_3_predictions[:len(test_2['Estimated  quantity demand per transaction_diff'])]),\n",
        "        \"MAPE\": mean_absolute_percentage_error(test_2['Estimated  quantity demand per transaction_diff'], test_2_predictions),\n",
        "        \"RMSE\": np.sqrt(mean_squared_error(test_2['Estimated  quantity demand per transaction_diff'], test_2_predictions)),\n",
        "    },\n",
        "    \"Exponential Smoothing\": {\n",
        "        \"MAE\": mean_absolute_error(test_3['Estimated  quantity demand per transaction_diff'], test_3_predictions[:len(test_3['Estimated  quantity demand per transaction_diff'])]),\n",
        "        \"MSE\": mean_squared_error(test_3['Estimated  quantity demand per transaction_diff'], test_3_predictions[:len(test_3['Estimated  quantity demand per transaction_diff'])]),\n",
        "        \"MAPE\": mean_absolute_percentage_error(test_3['Estimated  quantity demand per transaction_diff'], test_3_predictions[:len(test_3['Estimated  quantity demand per transaction_diff'])]),\n",
        "        \"RMSE\": np.sqrt(mean_squared_error(test_3['Estimated  quantity demand per transaction_diff'], test_3_predictions[:len(test_3['Estimated  quantity demand per transaction_diff'])])),\n",
        "    },\n",
        "    \"SARIMAX\": {\n",
        "        \"MAE\": mean_absolute_error(test_4['Estimated  quantity demand per transaction_diff'], test_4_predictions),\n",
        "        \"MSE\": mean_squared_error(test_4['Estimated  quantity demand per transaction_diff'], test_4_predictions[:len(test_4['Estimated  quantity demand per transaction_diff'])]),\n",
        "        \"MAPE\": mean_absolute_percentage_error(test_4['Estimated  quantity demand per transaction_diff'], test_4_predictions),\n",
        "        \"RMSE\": np.sqrt(mean_squared_error(test_4['Estimated  quantity demand per transaction_diff'], test_4_predictions)),\n",
        "    },\n",
        "    \"VAR\": {\n",
        "        \"MAE\": mean_absolute_error(test_5['Estimated  quantity demand per transaction_diff'], demand_forecast),\n",
        "        \"MSE\": mean_squared_error(test_5['Estimated  quantity demand per transaction_diff'], demand_forecast),\n",
        "        \"MAPE\": mean_absolute_percentage_error(test_5['Estimated  quantity demand per transaction_diff'], demand_forecast),\n",
        "        \"RMSE\": np.sqrt(mean_squared_error(test_5['Estimated  quantity demand per transaction_diff'], demand_forecast)),\n",
        "    },\n",
        "}\n",
        "\n",
        "\n",
        "# Create a DataFrame from the model metrics\n",
        "metrics_df = pd.DataFrame(model_metrics).T\n",
        "\n",
        "# Find the best model based on each metric\n",
        "best_mae_model = metrics_df['MAE'].idxmin()\n",
        "best_mse_model = metrics_df['MSE'].idxmin()\n",
        "best_mape_model = metrics_df['MAPE'].idxmin()\n",
        "best_rmse_model = metrics_df['RMSE'].idxmin()\n",
        "\n",
        "# Print the results\n",
        "print(\"Model Comparison:\")\n",
        "print(metrics_df)\n",
        "print(\"\\nBest Model based on MAE:\", best_mae_model)\n",
        "print(\"Best Model based on MSE:\", best_mse_model)\n",
        "print(\"Best Model based on MAPE:\", best_mape_model)\n",
        "print(\"Best Model based on RMSE:\", best_rmse_model)"
      ],
      "metadata": {
        "id": "LyrTuRPsKEpe",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "b6e376fd-7146-44b8-ee67-c59ef75a5703"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Model Comparison:\n",
            "                            MAE       MSE          MAPE      RMSE\n",
            "ARIMA                  1.391914  3.160794  1.233138e+13  1.777862\n",
            "SARIMA                 1.872700  2.891549  1.193035e+15  2.283324\n",
            "Exponential Smoothing  1.369146  2.891549  5.350358e+14  1.700456\n",
            "SARIMAX                1.481108  3.517606  2.147829e+14  1.875528\n",
            "VAR                    1.436176  3.279510  7.428050e+13  1.810942\n",
            "\n",
            "Best Model based on MAE: Exponential Smoothing\n",
            "Best Model based on MSE: SARIMA\n",
            "Best Model based on MAPE: ARIMA\n",
            "Best Model based on RMSE: Exponential Smoothing\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import statsmodels.api as sm"
      ],
      "metadata": {
        "id": "tnDS7-N0R_41"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Assign actual and predicted demand values for comparison after selecting Exponential Smoothing as the best model\n",
        "Actual_demand = test_3['Estimated  quantity demand per transaction_diff']\n",
        "Predicted_demand = test_3_predictions\n",
        "Actual_demand.index = Predicted_demand.index"
      ],
      "metadata": {
        "id": "sZSesOKNSEFI"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Get residuals and drop null values\n",
        "residuals_ES = Actual_demand - Predicted_demand\n",
        "residuals_ES = residuals_ES.dropna()"
      ],
      "metadata": {
        "id": "KovE5PmQUbld"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Display top 5 rows\n",
        "residuals_ES.head()"
      ],
      "metadata": {
        "id": "9yi8SAQDUpY3",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 241
        },
        "outputId": "23a9cbb3-6462-47ef-e42c-ffee00e538d2"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "2024-05-19   -1.536673\n",
              "2024-05-26    1.129988\n",
              "2024-06-02    1.463273\n",
              "2024-06-09    0.796632\n",
              "2024-06-16   -0.203355\n",
              "Freq: W-SUN, dtype: float64"
            ],
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>0</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>2024-05-19</th>\n",
              "      <td>-1.536673</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2024-05-26</th>\n",
              "      <td>1.129988</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2024-06-02</th>\n",
              "      <td>1.463273</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2024-06-09</th>\n",
              "      <td>0.796632</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2024-06-16</th>\n",
              "      <td>-0.203355</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div><br><label><b>dtype:</b> float64</label>"
            ]
          },
          "metadata": {},
          "execution_count": 150
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Residuals plot\n",
        "residuals_ES.plot(figsize=(12,5))"
      ],
      "metadata": {
        "id": "PdM4vzE3UrGE",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 478
        },
        "outputId": "2bfc36dd-3a69-40db-9546-f87200762656"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<Axes: >"
            ]
          },
          "metadata": {},
          "execution_count": 151
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1200x500 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Autocorrelation Test"
      ],
      "metadata": {
        "id": "rtcIf8maUrmi"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Autocorrelation plot\n",
        "plot_acf(residuals_ES, lags=20);"
      ],
      "metadata": {
        "id": "H-tLYbz2UyQr",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 452
        },
        "outputId": "555898e8-bb7c-4d4a-92d2-d14afd5a66ec"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Perform Ljung-Box test on residuals to check for autocorrelation at lag 5\n",
        "ljung_box_results = sm.stats.acorr_ljungbox(residuals_ES, lags=[10], return_df=True)\n",
        "print(\"Ljung-Box test for autocorrelation:\")\n",
        "print(ljung_box_results)"
      ],
      "metadata": {
        "id": "r3GATPrlVARv",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "e1675abe-e2d9-4b09-e8ac-814128379f8f"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Ljung-Box test for autocorrelation:\n",
            "     lb_stat  lb_pvalue\n",
            "10  7.148645   0.711341\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "CrcqYpwtVsRj"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "fPis2Ni8VsDy"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Get the last known original value\n",
        "first_test_idx_pos = df.index.get_loc(test.index[0])\n",
        "last_known_index = df.index[first_test_idx_pos - 1]\n",
        "last_known_value = df.loc[last_known_index, 'Estimated  quantity demand per transaction']\n",
        "\n",
        "# Reverse differencing on test_data actual diffs\n",
        "reconstructed_actual = []\n",
        "current_value_actual = last_known_value\n",
        "\n",
        "for diff in test_3['Estimated  quantity demand per transaction_diff']:\n",
        "    current_value_actual += diff\n",
        "    reconstructed_actual.append(current_value_actual)\n",
        "\n",
        "# Reverse differencing on test_predictions, taking only the necessary values\n",
        "reconstructed_pred = []\n",
        "current_value_pred = last_known_value\n",
        "\n",
        "# Limit the loop to the length of test_data\n",
        "for diff in test_3_predictions:\n",
        "    current_value_pred += diff\n",
        "    reconstructed_pred.append(current_value_pred)\n",
        "\n",
        "# Add both reconstructed series to test_data\n",
        "test_3['Actual_demand'] = reconstructed_actual\n",
        "test_3['Predicted_demand'] = reconstructed_pred\n",
        "print(test_3.head())\n",
        "\n",
        "#if 'Date' not in test_3.columns:\n"
      ],
      "metadata": {
        "id": "cKV4IcW-VzMZ",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "9e751bf5-4a17-4e01-86d0-125e5b641167"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "            Estimated  quantity demand per transaction  Inflation Rate  \\\n",
            "Date                                                                     \n",
            "2024-05-12                                        96.0             2.8   \n",
            "2024-05-19                                        97.0             2.8   \n",
            "2024-05-26                                        98.0             2.8   \n",
            "2024-06-02                                        98.0             3.5   \n",
            "2024-06-09                                        98.0             3.5   \n",
            "\n",
            "            Estimated  quantity demand per transaction_diff  \\\n",
            "Date                                                          \n",
            "2024-05-12                                             -2.0   \n",
            "2024-05-19                                              1.0   \n",
            "2024-05-26                                              1.0   \n",
            "2024-06-02                                              0.0   \n",
            "2024-06-09                                              0.0   \n",
            "\n",
            "            Inflation Rate_diff  Actual_demand  Predicted_demand  \n",
            "Date                                                              \n",
            "2024-05-12                  0.0           96.0         97.536673  \n",
            "2024-05-19                  0.0           97.0         97.406685  \n",
            "2024-05-26                  0.0           98.0         96.943412  \n",
            "2024-06-02                  0.7           98.0         96.146780  \n",
            "2024-06-09                  0.0           98.0         96.350135  \n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Plot Actual vs predicted\n",
        "plt.figure(figsize=(12, 5))\n",
        "plt.plot(test_3['Actual_demand'], label='Actual demand',marker='o')\n",
        "plt.plot(test_3['Predicted_demand'], label='Predicted demand', marker='x')\n",
        "plt.title('Actual vs. Predicted demand')\n",
        "plt.xlabel('Date')\n",
        "plt.ylabel('demand')\n",
        "plt.ylim(10, 150)\n",
        "plt.legend()\n",
        "plt.grid(True)\n",
        "plt.tight_layout()\n",
        "plt.show()"
      ],
      "metadata": {
        "id": "_Y9dXJZXYMH5",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 507
        },
        "outputId": "ea58cea9-451e-46e2-bc8f-a6276af01794"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1200x500 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Retrain model on the entire dataset, adjust seasonal_periods\n",
        "final_model_ES = ExponentialSmoothing(\n",
        "    df['Estimated  quantity demand per transaction_diff'],\n",
        "    trend='add',\n",
        "    seasonal='add',\n",
        "    seasonal_periods=52\n",
        ").fit()"
      ],
      "metadata": {
        "id": "xdyCu80qYiL_"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Forecast the next 52 time periods using the fitted Exponential Smoothing model\n",
        "forecast_predictions = final_model_ES.forecast(52)"
      ],
      "metadata": {
        "id": "xPpkxdSnYs1w"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "forecast_predictions.plot()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 463
        },
        "id": "IAKVKYmQefX0",
        "outputId": "96611f49-df49-4d43-a041-52ccdb9cc8b2"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<Axes: >"
            ]
          },
          "metadata": {},
          "execution_count": 159
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Get the last known actual value of 'Estimated quantity demand per transaction' and convert the differenced forecast to original scale\n",
        "last_actual = df['Estimated  quantity demand per transaction'].iloc[-1]\n",
        "forecast_original_values = forecast_predictions.cumsum() + last_actual"
      ],
      "metadata": {
        "id": "b_9k4gZoYo4m"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Display first 5 rows\n",
        "forecast_original_values.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 241
        },
        "id": "KvQPYOAZY5wA",
        "outputId": "3ee3ae04-ed94-4940-ade9-aa99fdc6b164"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "2025-03-09    101.763370\n",
              "2025-03-16    100.276774\n",
              "2025-03-23    102.790130\n",
              "2025-03-30    104.053531\n",
              "2025-04-06    105.691902\n",
              "Freq: W-SUN, dtype: float64"
            ],
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>0</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>2025-03-09</th>\n",
              "      <td>101.763370</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2025-03-16</th>\n",
              "      <td>100.276774</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2025-03-23</th>\n",
              "      <td>102.790130</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2025-03-30</th>\n",
              "      <td>104.053531</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2025-04-06</th>\n",
              "      <td>105.691902</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div><br><label><b>dtype:</b> float64</label>"
            ]
          },
          "metadata": {},
          "execution_count": 161
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Plot original vs forecasted values\n",
        "df['Estimated  quantity demand per transaction'].plot(figsize=(12,5),legend=True,)\n",
        "forecast_original_values.plot(figsize=(12,5),legend=True, label = \"Forecast for One year\")"
      ],
      "metadata": {
        "id": "orA9rp3_YwXq",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 482
        },
        "outputId": "42918b38-d53a-4616-f262-9f9b44233f1c"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<Axes: xlabel='Date'>"
            ]
          },
          "metadata": {},
          "execution_count": 162
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1200x500 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "forecast_predictions"
      ],
      "metadata": {
        "id": "Z_0DrVFjY6o-",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "outputId": "9dc9cd10-3fde-4c13-cea6-9b34551c2a73"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "2025-03-09   -0.236630\n",
              "2025-03-16   -1.486596\n",
              "2025-03-23    2.513356\n",
              "2025-03-30    1.263401\n",
              "2025-04-06    1.638371\n",
              "2025-04-13   -1.111606\n",
              "2025-04-20   -0.236571\n",
              "2025-04-27   -0.736576\n",
              "2025-05-04    0.513405\n",
              "2025-05-11   -1.236544\n",
              "2025-05-18    0.013440\n",
              "2025-05-25    0.263447\n",
              "2025-06-01   -0.236537\n",
              "2025-06-08   -0.486546\n",
              "2025-06-15    0.763452\n",
              "2025-06-22   -0.736562\n",
              "2025-06-29    0.263459\n",
              "2025-07-06   -0.236550\n",
              "2025-07-13    0.263447\n",
              "2025-07-20    0.013444\n",
              "2025-07-27   -0.486571\n",
              "2025-08-03   -0.236571\n",
              "2025-08-10    0.513416\n",
              "2025-08-17   -0.486583\n",
              "2025-08-24    0.513410\n",
              "2025-08-31    0.263431\n",
              "2025-09-07    0.013404\n",
              "2025-09-14    1.013412\n",
              "2025-09-21    0.185313\n",
              "2025-09-28   -0.658475\n",
              "2025-10-05   -0.236589\n",
              "2025-10-12    0.763426\n",
              "2025-10-19   -0.361568\n",
              "2025-10-26   -0.111581\n",
              "2025-11-02    0.263424\n",
              "2025-11-09    0.263422\n",
              "2025-11-16    0.263407\n",
              "2025-11-23    0.013404\n",
              "2025-11-30   -0.236580\n",
              "2025-12-07   -0.736590\n",
              "2025-12-14    0.013396\n",
              "2025-12-21    0.013409\n",
              "2025-12-28    1.013393\n",
              "2026-01-04   -0.236614\n",
              "2026-01-11    0.763387\n",
              "2026-01-18   -0.486610\n",
              "2026-01-25    0.263364\n",
              "2026-02-01    0.263378\n",
              "2026-02-08    0.015955\n",
              "2026-02-15   -0.184052\n",
              "2026-02-22    0.015963\n",
              "2026-03-01   -0.183992\n",
              "Freq: W-SUN, dtype: float64"
            ],
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>0</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>2025-03-09</th>\n",
              "      <td>-0.236630</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2025-03-16</th>\n",
              "      <td>-1.486596</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2025-03-23</th>\n",
              "      <td>2.513356</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2025-03-30</th>\n",
              "      <td>1.263401</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2025-04-06</th>\n",
              "      <td>1.638371</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2025-04-13</th>\n",
              "      <td>-1.111606</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2025-04-20</th>\n",
              "      <td>-0.236571</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2025-04-27</th>\n",
              "      <td>-0.736576</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2025-05-04</th>\n",
              "      <td>0.513405</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2025-05-11</th>\n",
              "      <td>-1.236544</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2025-05-18</th>\n",
              "      <td>0.013440</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2025-05-25</th>\n",
              "      <td>0.263447</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2025-06-01</th>\n",
              "      <td>-0.236537</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2025-06-08</th>\n",
              "      <td>-0.486546</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2025-06-15</th>\n",
              "      <td>0.763452</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2025-06-22</th>\n",
              "      <td>-0.736562</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2025-06-29</th>\n",
              "      <td>0.263459</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2025-07-06</th>\n",
              "      <td>-0.236550</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2025-07-13</th>\n",
              "      <td>0.263447</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2025-07-20</th>\n",
              "      <td>0.013444</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2025-07-27</th>\n",
              "      <td>-0.486571</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2025-08-03</th>\n",
              "      <td>-0.236571</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2025-08-10</th>\n",
              "      <td>0.513416</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2025-08-17</th>\n",
              "      <td>-0.486583</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2025-08-24</th>\n",
              "      <td>0.513410</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2025-08-31</th>\n",
              "      <td>0.263431</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2025-09-07</th>\n",
              "      <td>0.013404</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2025-09-14</th>\n",
              "      <td>1.013412</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2025-09-21</th>\n",
              "      <td>0.185313</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2025-09-28</th>\n",
              "      <td>-0.658475</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2025-10-05</th>\n",
              "      <td>-0.236589</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2025-10-12</th>\n",
              "      <td>0.763426</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2025-10-19</th>\n",
              "      <td>-0.361568</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2025-10-26</th>\n",
              "      <td>-0.111581</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2025-11-02</th>\n",
              "      <td>0.263424</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2025-11-09</th>\n",
              "      <td>0.263422</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2025-11-16</th>\n",
              "      <td>0.263407</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2025-11-23</th>\n",
              "      <td>0.013404</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2025-11-30</th>\n",
              "      <td>-0.236580</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2025-12-07</th>\n",
              "      <td>-0.736590</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2025-12-14</th>\n",
              "      <td>0.013396</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2025-12-21</th>\n",
              "      <td>0.013409</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2025-12-28</th>\n",
              "      <td>1.013393</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2026-01-04</th>\n",
              "      <td>-0.236614</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2026-01-11</th>\n",
              "      <td>0.763387</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2026-01-18</th>\n",
              "      <td>-0.486610</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2026-01-25</th>\n",
              "      <td>0.263364</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2026-02-01</th>\n",
              "      <td>0.263378</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2026-02-08</th>\n",
              "      <td>0.015955</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2026-02-15</th>\n",
              "      <td>-0.184052</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2026-02-22</th>\n",
              "      <td>0.015963</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2026-03-01</th>\n",
              "      <td>-0.183992</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div><br><label><b>dtype:</b> float64</label>"
            ]
          },
          "metadata": {},
          "execution_count": 163
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "forecast_ES_predictions_2 = final_model_ES.forecast(26).rename('Predicted estimated quantity demand values for the next six months')"
      ],
      "metadata": {
        "id": "94exNFDbmVz8"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "\n",
        "# Extract the forecast for the next 30 weeks and sum to get total expected demand\n",
        "forecast_30_weeks = forecast_original_values[:30]\n",
        "total_30_week_demand = forecast_30_weeks.sum()\n",
        "print(f\"Total forecasted demand in next 30 weeks: {total_30_week_demand:.2f}\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "RFNqRCnxabId",
        "outputId": "de28f049-dc76-44ed-a8c5-9ecdcea4ee9a"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Total forecasted demand in next 30 weeks: 3090.54\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# 3rd Business Question\n",
        "# Identify the week with the highest predicted demand\n",
        "peak_week = forecast_original_values.idxmax()\n",
        "peak_value = forecast_original_values.max()\n",
        "print(f\"Highest expected demand of {peak_value:.2f} will occur in the week starting {peak_week}.\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "WdFECAq5c4Vr",
        "outputId": "1ebbaaf6-98da-499b-e782-ab7edb9e4729"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Highest expected demand of 105.69 will occur in the week starting 2025-04-06 00:00:00.\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Display weekly forecast for the next 52 weeks\n",
        "weekly_forecast = forecast_original_values.copy()\n",
        "weekly_forecast.name = \"Forecasted Demand\"\n",
        "print(weekly_forecast)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "q1bJuc0fegue",
        "outputId": "253b8cb2-a6f3-4e40-c116-0a7065564a02"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "2025-03-09    101.763370\n",
            "2025-03-16    100.276774\n",
            "2025-03-23    102.790130\n",
            "2025-03-30    104.053531\n",
            "2025-04-06    105.691902\n",
            "2025-04-13    104.580296\n",
            "2025-04-20    104.343725\n",
            "2025-04-27    103.607149\n",
            "2025-05-04    104.120554\n",
            "2025-05-11    102.884010\n",
            "2025-05-18    102.897450\n",
            "2025-05-25    103.160896\n",
            "2025-06-01    102.924360\n",
            "2025-06-08    102.437813\n",
            "2025-06-15    103.201266\n",
            "2025-06-22    102.464704\n",
            "2025-06-29    102.728163\n",
            "2025-07-06    102.491613\n",
            "2025-07-13    102.755060\n",
            "2025-07-20    102.768504\n",
            "2025-07-27    102.281933\n",
            "2025-08-03    102.045362\n",
            "2025-08-10    102.558778\n",
            "2025-08-17    102.072195\n",
            "2025-08-24    102.585605\n",
            "2025-08-31    102.849036\n",
            "2025-09-07    102.862441\n",
            "2025-09-14    103.875852\n",
            "2025-09-21    104.061165\n",
            "2025-09-28    103.402691\n",
            "2025-10-05    103.166102\n",
            "2025-10-12    103.929528\n",
            "2025-10-19    103.567959\n",
            "2025-10-26    103.456378\n",
            "2025-11-02    103.719802\n",
            "2025-11-09    103.983224\n",
            "2025-11-16    104.246632\n",
            "2025-11-23    104.260036\n",
            "2025-11-30    104.023456\n",
            "2025-12-07    103.286866\n",
            "2025-12-14    103.300262\n",
            "2025-12-21    103.313670\n",
            "2025-12-28    104.327063\n",
            "2026-01-04    104.090449\n",
            "2026-01-11    104.853836\n",
            "2026-01-18    104.367226\n",
            "2026-01-25    104.630590\n",
            "2026-02-01    104.893969\n",
            "2026-02-08    104.909924\n",
            "2026-02-15    104.725872\n",
            "2026-02-22    104.741834\n",
            "2026-03-01    104.557843\n",
            "Freq: W-SUN, Name: Forecasted Demand, dtype: float64\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Extract and sum the forecasted demand for the Christmas period\n",
        "christmas_weeks = ['2025-12-21', '2025-12-28']\n",
        "christmas_period_demand = forecast_original_values[christmas_weeks].sum()\n",
        "print(f\"Total forecasted demand during the Christmas period: {christmas_period_demand:.2f}\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "X6AS-eTYfXu-",
        "outputId": "8c1e71fa-ad23-4d29-e4e7-483bf8574ab9"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Total forecasted demand during the Christmas period: 207.64\n"
          ]
        }
      ]
    }
  ]
}